//! doc url: <https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/batch_get>
// Code generated by gen_api. DO NOT EDIT.

use serde::{Deserialize, Serialize};

use crate::api::BaseResp;
use crate::api::HasBaseResp;
use crate::core::model::{ApiRequest, CommonResponse, MethodOption, ReqParam, StreamReqParam};
use crate::{
    core::{http_client::HttpClient, store::Store},
    error::Error,
};

use crate::api::gen::core_hr::CoreHrService;

impl<'c, IStore: Store, IClient: HttpClient> CoreHrService<'c, IStore, IClient> {
    /// **api 版本: 2024-07-24T10:52:44+00:00**
    ///
    /// ## 批量查询员工信息
    ///
    /// 通过员工 ID 批量查询员工信息。
    ///
    /// - 本接口会按照「员工资源」权限范围返回数据，请确定在「开发者后台 - 权限管理 - 数据权限」中已申请此数据权限
    ///
    /// - 每次最多传 100 个员工 ID，若需单次查询全量员工，可使用接口[【搜索员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/search)
    ///
    /// - 由于人员全数据关联较多业务数据和计算数据等，更新后存在2-5s短暂延时，建议数据更新动作完成后稍等几秒进行最新数据查询请求
    ///
    /// - 在筛选 ID 和 查询字段对象个数过多时，可能出现超时现象，请减少筛选项和字段对象个数。该接口正在优化升级，阻塞性问题请联系[技术支持](https://applink.feishu.cn/TLJpeNdW)
    ///
    /// - 当员工存在【撤销入职】【删除雇佣】等情况，该接口将无法查询到该员工数据
    ///
    /// - 当个人信息处于【待入职】状态，该接口将无法查询到个人信息
    ///
    /// - 字段未返回请检查：字段权限、用户该字段有值，以及飞书人事档案配置中字段是否启用
    ///
    /// doc: <https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/batch_get>
    ///
    /// new doc: <https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/batch_get>
    ///
    /// api url: <https://open.feishu.cn/document_portal/v1/document/get_detail?fullPath=%2FuAjLw4CM%2FukTMukTMukTM%2Fcorehr-v2%2Femployee%2Fbatch_get>
    pub async fn batch_get_core_hr_employee(
        &self,
        req: BatchGetCoreHrEmployeeReq,
    ) -> Result<(BatchGetCoreHrEmployeeResp, CommonResponse), Error> {
        self.batch_get_core_hr_employee_with_opt(req, Default::default())
            .await
    }

    /// 参见 [batch_get_core_hr_employee](#method.batch_get_core_hr_employee) 函数
    pub async fn batch_get_core_hr_employee_with_opt(
        &self,
        req: BatchGetCoreHrEmployeeReq,
        method_option: MethodOption,
    ) -> Result<(BatchGetCoreHrEmployeeResp, CommonResponse), Error> {
        #[cfg(feature = "test-util")]
        {
            if let Some(f) = self.mock().get_mock_batch_get_core_hr_employee(&req) {
                tracing::info!("[lark] CoreHr#BatchGetCoreHrEmployee **mocking** api");
                return f(req);
            }
        }

        tracing::info!("[lark] CoreHr#BatchGetCoreHrEmployee call api");

        let req = ApiRequest {
            scope: "CoreHr",
            api: "BatchGetCoreHrEmployee",
            method: http::Method::POST,
            url: String::new()
                + self.cli.open_base_url.as_ref()
                + "/open-apis/corehr/v2/employees/batch_get",
            param_data: req.gen_param(),
            method_option,
            need_tenant_access_token: true,
            ..Default::default()
        };

        let (resp, common_resp): (BatchGetCoreHrEmployeeRespInner, _) =
            self.cli.do_req(req).await?;
        let data = match resp.data {
            Some(data) => data,
            None => {
                return Err(Error::ErrResponse(
                    anyhow::anyhow!("missing response data"),
                    common_resp,
                ));
            }
        };
        Ok((data, common_resp))
    }
}

#[derive(Debug, Serialize, Deserialize, Clone, Default, lark_bot_sdk_macros::ApiReqParams)]
pub struct BatchGetCoreHrEmployeeReq {
    /// 用户 ID 类型
    ///
    /// **示例值**: "open_id"
    ///
    /// **可选值**:
    ///
    /// `open_id`: 标识一个用户在某个应用中的身份。同一个用户在不同应用中的 Open ID 不同。[了解更多：如何获取 Open ID](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-openid)
    ///
    /// `union_id`: 标识一个用户在某个应用开发商下的身份。同一用户在同一开发商下的应用中的 Union ID 是相同的，在不同开发商下的应用中的 Union ID 是不同的。通过 Union ID，应用开发商可以把同个用户在多个应用中的身份关联起来。[了解更多：如何获取 Union ID？](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-union-id)
    ///
    /// `user_id`: 标识一个用户在某个租户内的身份。同一个用户在租户 A 和租户 B 内的 User ID 是不同的。在同一个租户内，一个用户的 User ID 在所有应用（包括商店应用）中都保持一致。User ID 主要用于在不同的应用间打通用户数据。[了解更多：如何获取 User ID？](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-user-id)
    ///
    /// `people_corehr_id`: 以飞书人事的 ID 来识别用户
    #[api(
        kind = "query",
        name = "user_id_type",
        v_type = "var",
        option = "false"
    )]
    pub user_id_type: String,
    /// 此次调用中使用的部门 ID 类型
    ///
    /// **示例值**: "open_department_id"
    ///
    /// **可选值**:
    ///
    /// `open_department_id`: 以 open_department_id 来标识部门
    ///
    /// `department_id`: 以 department_id 来标识部门
    ///
    /// `people_corehr_department_id`: 以 people_corehr_department_id 来标识部门
    #[api(
        kind = "query",
        name = "department_id_type",
        v_type = "var",
        option = "false"
    )]
    pub department_id_type: String,
    /// 需要查询的字段列表
    ///
    /// - 可参考响应体的结构，选择需要查询的字段填入
    ///
    /// - 为空时仅返回 employment_id
    ///
    /// **数据校验规则**：
    ///
    /// - **最大长度**: `100` 字符
    #[api(kind = "body", name = "fields")]
    pub fields: Vec<Option<String>>,
    /// 雇佣 ID 列表，以下请求参数中「employment_ids」，「person_ids」，「work_emails」不得均为空；请根据需求选择一种模式进行查询，若单次请求中多个请求参数有值，按照【employment_ids > person_ids > work_emails】的顺序只识别第一个有值的请求参数；ID 类型需要与 user_id_type 保持一致。
    ///
    /// 在[【创建雇佣】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/employment/create)时返回的 ID。
    ///
    /// **数据校验规则**：
    ///
    /// - **长度范围**: `0` 字符- `100` 字符
    #[api(kind = "body", name = "employment_ids")]
    pub employment_ids: Vec<Option<String>>,
    /// 个人信息 ID 列表，employment_ids参数有值时该参数不生效。
    ///
    /// 在[【创建个人信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/person/create)时返回的 ID。
    ///
    /// **数据校验规则**：
    ///
    /// - **长度范围**: `0` 字符- `100` 字符
    #[api(kind = "body", name = "person_ids")]
    pub person_ids: Vec<Option<String>>,
    /// 主工作邮箱列表，「employment_ids」，「person_ids」参数有值时该参数不生效。
    ///
    /// **数据校验规则**：
    ///
    /// - **长度范围**: `0` 字符- `100` 字符
    #[api(kind = "body", name = "work_emails")]
    pub work_emails: Vec<Option<String>>,
}

#[derive(Debug, Serialize, Deserialize, Clone, lark_bot_sdk_macros::ApiBaseResp)]
struct BatchGetCoreHrEmployeeRespInner {
    #[serde(flatten)]
    data: Option<BatchGetCoreHrEmployeeResp>,
    #[serde(flatten)]
    base: BaseResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
pub struct BatchGetCoreHrEmployeeResp {
    /// \-
    #[serde(
        rename = "data",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub data: DataSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct DataSubResp {
    /// 查询的雇佣信息
    #[serde(
        rename = "items",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub items: Vec<EmployeeSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EmployeeSubResp {
    /// 雇佣 ID，类型与user_id_type 一致
    ///
    /// **示例值**: "6893014062142064135"
    #[serde(
        rename = "employment_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employment_id: String,
    /// 招聘投递 ID ，详细信息可以通过[获取投递信息](https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/get)接口查询获得
    ///
    /// **示例值**: "6838119494196871234"
    #[serde(
        rename = "ats_application_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub ats_application_id: String,
    /// 待入职 ID，详细信息可以通过[【查询单个待入职】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/pre_hire/get)获取
    ///
    /// **示例值**: "7023239238976141133"
    #[serde(
        rename = "prehire_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub prehire_id: String,
    /// 工号
    ///
    /// **示例值**: "1000000"
    #[serde(
        rename = "employee_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employee_number: String,
    /// 人员类型 ID，详细信息可通过[查询单个人员类型](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/employee_type/get)接口获得
    ///
    /// **示例值**: "6971090097697521314"
    #[serde(
        rename = "employee_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employee_type_id: String,
    /// 部门 ID，详细信息可通过[查询单个部门](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/department/get)接口获得
    ///
    /// - 类型与 department_id_type 一致
    ///
    /// **示例值**: "6893014062142064135"
    #[serde(
        rename = "department_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub department_id: String,
    /// 职级 ID，详细信息可通过[查询单个职级](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_level/get)接口获得
    ///
    /// **示例值**: "6893014062142064135"
    #[serde(
        rename = "job_level_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_level_id: String,
    /// 职级
    #[serde(
        rename = "job_level",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_level: EmployeeJobLevelSubResp,
    /// 职等 ID，通过 [【查询职等】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job_grade/query)获取详细信息
    ///
    /// **示例值**: "6893014062142064135"
    #[serde(
        rename = "job_grade_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_grade_id: String,
    /// 工作地点 ID，详细信息可通过[查询单个地点](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/location/get)接口获得
    ///
    /// **示例值**: "6893014062142064135"
    #[serde(
        rename = "work_location_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub work_location_id: String,
    /// 序列 ID，详细信息可通过[查询单个序列](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_family/get)接口获得
    ///
    /// **示例值**: "6893014062142064135"
    #[serde(
        rename = "job_family_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_family_id: String,
    /// 序列
    #[serde(
        rename = "job_family",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_family: EmployeeJobFamilySubResp,
    /// 岗位 ID
    ///
    /// - 功能灰度中，有需要请联系[技术支持](https://applink.feishu.cn/TLJpeNdW)
    ///
    /// **示例值**: "6893014062142064135"
    #[serde(
        rename = "position_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub position_id: String,
    /// 岗位
    ///
    /// - 功能灰度中，有需要请联系[技术支持](https://applink.feishu.cn/TLJpeNdW)
    #[serde(
        rename = "position",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub position: PositionSubResp,
    /// 职务 ID，详细信息可通过[查询单个职务（V2）](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job/get)接口获得
    ///
    /// **示例值**: "6893014062142064135"
    #[serde(
        rename = "job_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_id: String,
    /// 职务
    #[serde(
        rename = "job",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job: JobSubResp,
    /// 所属公司 ID，详细信息可通过[查询单个公司](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/company/get)接口获得
    ///
    /// **示例值**: "6893014062142064135"
    #[serde(
        rename = "company_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub company_id: String,
    /// 工时制度 ID，详细信息可通过[查询单个工时制度](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/working_hours_type/get)接口获得
    ///
    /// **示例值**: "6893014062142064135"
    #[serde(
        rename = "working_hours_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub working_hours_type_id: String,
    /// 司龄
    ///
    /// **示例值**: "0.01"
    #[serde(
        rename = "tenure",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub tenure: String,
    /// 资历起算日期
    ///
    /// **示例值**: "2021-03-16"
    #[serde(
        rename = "seniority_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub seniority_date: String,
    /// 当前雇佣记录的入职日期
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "2021-03-16"
    #[serde(
        rename = "effective_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub effective_date: String,
    /// 是否是主雇佣信息
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "primary_employment",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub primary_employment: bool,
    /// 试用期时长（月）
    ///
    /// **示例值**: "16"
    #[serde(
        rename = "probation_period",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub probation_period: i64,
    /// 是否在试用期中
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "on_probation",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub on_probation: bool,
    /// 试用期结束日期（实际结束日期）
    ///
    /// **示例值**: "2022-08-01"
    #[serde(
        rename = "probation_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub probation_end_date: String,
    /// 直接上级的雇佣 ID，可通过[【批量查询员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/batch_get) 或 [【搜索员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/search)获取详细信息；类型与 user_id_type 一致
    ///
    /// **示例值**: "7027024823985411287"
    #[serde(
        rename = "direct_manager_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub direct_manager_id: String,
    /// 虚线上级的雇佣 ID，可通过[【批量查询员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/batch_get) 或 [【搜索员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/search)获取详细信息；类型与 user_id_type 一致
    ///
    /// **示例值**: "7027024823985411782"
    #[serde(
        rename = "dotted_line_manager_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub dotted_line_manager_id: String,
    /// 雇佣类型，枚举值可通过文档[枚举常量介绍](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)雇佣类型（employment_type）枚举定义获得
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "employment_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employment_type: EnumSubResp,
    /// 雇佣状态，枚举值可通过文档[枚举常量介绍](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)雇员状态（employment_status）枚举定义获得
    #[serde(
        rename = "employment_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employment_status: EnumSubResp,
    /// 离职日期，即员工的最后一个工作日，最后一个工作日时员工的雇佣状态仍为“在职”，次日凌晨将更改为“离职”
    ///
    /// **示例值**: "2022-08-16"
    #[serde(
        rename = "expiration_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub expiration_date: String,
    /// 离职原因，枚举值可通过文档[枚举常量介绍](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)离职原因（reason_for_offboarding）枚举定义部分获得
    #[serde(
        rename = "reason_for_offboarding",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub reason_for_offboarding: EnumSubResp,
    /// 邮箱地址
    ///
    /// **示例值**: "test@163.com"
    #[serde(
        rename = "email_address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email_address: String,
    /// 工作邮箱列表
    #[serde(
        rename = "work_email_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub work_email_list: Vec<WorkEmailSubResp>,
    /// 成本中心列表
    #[serde(
        rename = "cost_center_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub cost_center_list: Vec<JobDataCostCenterSubResp>,
    /// 是否离职重聘，枚举如下：
    ///
    /// - no：否
    ///
    /// - yes：是
    ///
    /// - to_be_confirmed：待确定
    #[serde(
        rename = "rehire",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub rehire: EnumSubResp,
    /// 历史雇佣信息 ID，，可通过[【批量查询员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/batch_get) 或 [【搜索员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/search)获取详细信息；类型不跟随 user_id_type
    ///
    /// **示例值**: "7164286667866966659"
    #[serde(
        rename = "rehire_employment_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub rehire_employment_id: String,
    /// 基本个人信息
    #[serde(
        rename = "person_info",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub person_info: PersonInfoSubResp,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
    /// 竞业状态，枚举值包括:1.竞业中；2.未竞业
    #[serde(
        rename = "noncompete_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub noncompete_status: EnumSubResp,
    /// 是否历史离职人员
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "past_offboarding",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub past_offboarding: bool,
    /// 转正式日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "regular_employee_start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub regular_employee_start_date: String,
    /// 外部系统 ID , 可存储租户系统中的员工 ID
    ///
    /// **示例值**: "10000000"
    #[serde(
        rename = "external_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub external_id: String,
    /// 入职次数
    ///
    /// **示例值**: "16"
    #[serde(
        rename = "times_employed",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub times_employed: i64,
    /// 招聘来源，枚举值可通过[获取自定义字段列表](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/query)接口查询
    #[serde(
        rename = "recruitment_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub recruitment_type: EnumSubResp,
    /// 员工头像
    ///
    /// **示例值**: "https://internal-api-lark-file.feishu-boe.cn/static-resource/v1/v2_a550d36b-28ef-48ad-9e50-58004beb386j~?image_size=noop&cut_type=&quality=&format=png&sticker_format=.webp"
    #[serde(
        rename = "avatar_url",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub avatar_url: String,
    /// 主合同 ID，可通过[【查询单个合同】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/contract/get)获取详细信息
    ///
    /// **示例值**: "7164286667866966659"
    #[serde(
        rename = "primary_contract_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub primary_contract_id: String,
    /// 主合同开始日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "contract_start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub contract_start_date: String,
    /// 主合同到期日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "contract_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub contract_end_date: String,
    /// 主合同预计到期日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "contract_expected_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub contract_expected_end_date: String,
    /// 所属薪资组 ID
    ///
    /// **示例值**: "7164286667866966659"
    #[serde(
        rename = "pay_group_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub pay_group_id: String,
    /// 是否外派
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "international_assignment",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub international_assignment: bool,
    /// 工作日历 ID
    ///
    /// **示例值**: "7164286667866966659"
    #[serde(
        rename = "work_calendar_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub work_calendar_id: String,
    /// 部门基本信息
    #[serde(
        rename = "department",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub department: BasicDepartmentSubResp,
    /// 直接上级基本信息
    #[serde(
        rename = "direct_manager",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub direct_manager: BasicEmployeeSubResp,
    /// 虚线上级基本信息
    #[serde(
        rename = "dotted_line_manager",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub dotted_line_manager: BasicEmployeeSubResp,
    /// 时区
    ///
    /// **示例值**: "Asia/Shanghai"
    #[serde(
        rename = "time_zone",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub time_zone: String,
    /// 任职公司，可通过[【查询单个公司】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/company/get)查询详细信息
    ///
    /// **示例值**: "7174374910734141112"
    #[serde(
        rename = "service_company",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub service_company: String,
    /// 薪资类型，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口查询，查询参数如下：
    ///
    /// - object_api_name = "job_data"
    ///
    /// - custom_api_name = "compensation_type"
    #[serde(
        rename = "compensation_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub compensation_type: EnumSubResp,
    /// 排班类型，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口查询，查询参数如下：
    ///
    /// - object_api_name = "job_data"
    ///
    /// - custom_api_name = "work_shift"
    #[serde(
        rename = "work_shift",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub work_shift: EnumSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EmployeeJobLevelSubResp {
    /// 职级 ID，可通过[【查询单个职级】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_level/get)获取详细信息
    ///
    /// - 与 job_level_id 值相同
    ///
    /// **示例值**: "4692446793125560154"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 职级数值
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "9999"
    #[serde(
        rename = "level_order",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub level_order: i64,
    /// 编码
    ///
    /// **示例值**: "VQzo/BSonp8l6PmcZ+VlDhkd2595LMkhyBAGX6HAlCY="
    #[serde(
        rename = "code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub code: String,
    /// 名称
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: Vec<I18nSubResp>,
    /// 描述
    #[serde(
        rename = "description",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub description: Vec<I18nSubResp>,
    /// 启用
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "active",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub active: bool,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EmployeeJobFamilySubResp {
    /// 序列 ID，可通过[【查询单个序列】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_family/get)获取详细信息
    ///
    /// - 与 job_family_id 值相同
    ///
    /// **示例值**: "4698019107896524633"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 名称
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: Vec<I18nSubResp>,
    /// 是否启用
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "active",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub active: bool,
    /// 上级序列，可通过[【查询单个序列】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_family/get)获取详细信息
    ///
    /// **示例值**: "4698020757495316313"
    #[serde(
        rename = "parent_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub parent_id: String,
    /// 生效时间
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "2020-05-01 00:00:00"
    #[serde(
        rename = "effective_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub effective_time: String,
    /// 失效时间
    ///
    /// **示例值**: "2020-05-02 00:00:00"
    #[serde(
        rename = "expiration_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub expiration_time: String,
    /// 编码
    ///
    /// **示例值**: "123456"
    #[serde(
        rename = "code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub code: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PositionSubResp {
    /// 岗位 ID，详细信息可通过【查询岗位】接口获得
    ///
    /// **示例值**: "4692446793125560154"
    #[serde(
        rename = "position_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub position_id: String,
    /// 编码
    ///
    /// **示例值**: "A01234"
    #[serde(
        rename = "code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub code: String,
    /// 名称
    ///
    /// **数据校验规则**：
    ///
    /// - **长度范围**: `0` 字符- `2` 字符
    #[serde(
        rename = "names",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub names: Vec<I18nSubResp>,
    /// 描述
    ///
    /// **数据校验规则**：
    ///
    /// - **长度范围**: `0` 字符- `2` 字符
    #[serde(
        rename = "descriptions",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub descriptions: Vec<I18nSubResp>,
    /// 状态
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "active",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub active: bool,
    /// 序列，可通过[【查询单个序列】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_family/get)
    ///
    /// 查询详细信息
    #[serde(
        rename = "job_family_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_family_id_list: Vec<String>,
    /// 成本中心，可通过[【搜索成本中心信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/cost_center/search)
    ///
    /// 查询详细信息
    ///
    /// **示例值**: "4719519211875096301"
    #[serde(
        rename = "cost_center_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub cost_center_id: String,
    /// 职务，可通过[【查询单个职务】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job/get)获取详细信息
    ///
    /// **示例值**: "4719519211875096302"
    #[serde(
        rename = "job_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_id: String,
    /// 职级，可通过[【查询单个职级】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_level/get)获取详细信息
    #[serde(
        rename = "job_level_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_level_id_list: Vec<String>,
    /// 人员类型，可通过[【查询单个人员类型】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/employee_type/get)查询详细信息
    #[serde(
        rename = "employee_type_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employee_type_id_list: Vec<String>,
    /// 职等，可通过[【查询职等】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job_grade/query)查询详细信息
    #[serde(
        rename = "job_grade_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_grade_id_list: Vec<String>,
    /// 工作地点，可通过[【查询单个地点】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/location/get)
    ///
    /// 查询详细信息
    #[serde(
        rename = "work_location_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub work_location_id_list: Vec<String>,
    /// 工时制度，可通过[【查询单个工时制度】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/working_hours_type/get)查询详细信息
    ///
    /// **示例值**: "4719519211875096301"
    #[serde(
        rename = "working_hours_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub working_hours_type_id: String,
    /// 部门 ID，详细信息可通过[查询单个部门](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/department/get)接口获得
    ///
    /// - 类型与 department_id_type 一致
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "4719519211875096301"
    #[serde(
        rename = "department_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub department_id: String,
    /// 直属上级岗位，详细信息可通过【查询岗位】接口获得
    ///
    /// **示例值**: "4719519211875096301"
    #[serde(
        rename = "direct_leader_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub direct_leader_id: String,
    /// 虚线上级岗位，详细信息可通过【查询岗位】接口获得
    ///
    /// **示例值**: "4719519211875096301"
    #[serde(
        rename = "dotted_line_leader_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub dotted_line_leader_id: String,
    /// 是否关键岗位
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_key_position",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_key_position: bool,
    /// 生效日期
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "2020-05-01"
    #[serde(
        rename = "effective_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub effective_time: String,
    /// 失效日期
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "2020-05-01"
    #[serde(
        rename = "expiration_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub expiration_time: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct JobSubResp {
    /// 实体在CoreHR内部的唯一键
    ///
    /// **示例值**: "4698040628992333549"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 编码
    ///
    /// **示例值**: "JP422119"
    #[serde(
        rename = "code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub code: String,
    /// 名称
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: Vec<I18nSubResp>,
    /// 描述
    #[serde(
        rename = "description",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub description: Vec<I18nSubResp>,
    /// 启用
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "active",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub active: bool,
    /// 职务头衔
    #[serde(
        rename = "job_title",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_title: Vec<I18nSubResp>,
    /// 序列
    #[serde(
        rename = "job_family_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_family_id_list: Vec<String>,
    /// 职级
    #[serde(
        rename = "job_level_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_level_id_list: Vec<String>,
    /// 工时制度，可通过[【查询单个工时制度】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/working_hours_type/get)查询详细信息
    ///
    /// **示例值**: "6890452208593372679"
    #[serde(
        rename = "working_hours_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub working_hours_type_id: String,
    /// 生效时间
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "2020-01-01 00:00:00"
    #[serde(
        rename = "effective_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub effective_time: String,
    /// 失效时间
    ///
    /// **示例值**: "2021-01-01 00:00:00"
    #[serde(
        rename = "expiration_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub expiration_time: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<ObjectFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EnumSubResp {
    /// 枚举值
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "employee"
    #[serde(
        rename = "enum_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub enum_name: String,
    /// 枚举多语展示
    #[serde(
        rename = "display",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub display: Vec<I18nSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PersonInfoSubResp {
    /// 个人信息 ID
    ///
    /// - 可用于 [【更新个人信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/person/patch)
    ///
    /// **示例值**: "6919733936050406926"
    #[serde(
        rename = "person_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub person_id: String,
    /// 个人电话
    ///
    /// **示例值**: "13649211111"
    #[serde(
        rename = "phone_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_number: String,
    /// 法定姓名
    ///
    /// **示例值**: "张三"
    #[serde(
        rename = "legal_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub legal_name: String,
    /// 常用名
    ///
    /// **示例值**: "刘梓新(Henry)"
    #[serde(
        rename = "preferred_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub preferred_name: String,
    /// 常用本地全名
    ///
    /// **示例值**: "刘梓新"
    #[serde(
        rename = "preferred_local_full_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub preferred_local_full_name: String,
    /// 常用英文全名
    ///
    /// **示例值**: "Henry"
    #[serde(
        rename = "preferred_english_full_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub preferred_english_full_name: String,
    /// 姓名列表
    #[serde(
        rename = "name_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name_list: Vec<PersonNameSubResp>,
    /// 性别，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：gender
    ///
    /// - object_api_name：person
    #[serde(
        rename = "gender",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub gender: EnumSubResp,
    /// 出生日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "date_of_birth",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub date_of_birth: String,
    /// 民族 / 种族，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：ethnicity_race
    ///
    /// - object_api_name：person
    #[serde(
        rename = "race",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub race: EnumSubResp,
    /// 婚姻状况，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：marital_status
    ///
    /// - object_api_name：person
    #[serde(
        rename = "marital_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub marital_status: EnumSubResp,
    /// 电话列表
    #[serde(
        rename = "phone_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_list: Vec<PhoneSubResp>,
    /// 地址列表
    #[serde(
        rename = "address_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_list: Vec<AddressSubResp>,
    /// 邮箱列表
    #[serde(
        rename = "email_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email_list: Vec<EmailSubResp>,
    /// 工作经历列表
    #[serde(
        rename = "work_experience_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub work_experience_list: Vec<WorkExperienceInfoSubResp>,
    /// 教育经历列表
    #[serde(
        rename = "education_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub education_list: Vec<EducationSubResp>,
    /// 银行账户
    #[serde(
        rename = "bank_account_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_list: Vec<BankAccountSubResp>,
    /// 证件
    #[serde(
        rename = "national_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_list: Vec<NationalIdSubResp>,
    /// 家庭成员列表
    #[serde(
        rename = "dependent_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub dependent_list: Vec<DependentSubResp>,
    /// 紧急联系人列表
    #[serde(
        rename = "emergency_contact_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub emergency_contact_list: Vec<EmergencyContactSubResp>,
    /// 参加工作日期
    ///
    /// **示例值**: "2020-10-01"
    #[serde(
        rename = "date_entered_workforce",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub date_entered_workforce: String,
    /// 工龄
    ///
    /// **示例值**: "2"
    #[serde(
        rename = "working_years",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub working_years: i64,
    /// 头像资源的 ID
    ///
    /// **示例值**: "dfysuc8x76dsfsw"
    #[serde(
        rename = "profile_image_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub profile_image_id: String,
    /// 邮箱地址
    ///
    /// **示例值**: "test@163.com"
    #[serde(
        rename = "email_address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email_address: String,
    /// 年龄
    ///
    /// **示例值**: "22"
    #[serde(
        rename = "age",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub age: i64,
    /// 最高学历教育经历
    #[serde(
        rename = "highest_level_of_education",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub highest_level_of_education: EducationSubResp,
    /// 最高学位教育经历
    #[serde(
        rename = "highest_degree_of_education",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub highest_degree_of_education: EducationSubResp,
    /// 个人资料附件
    #[serde(
        rename = "personal_profile",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub personal_profile: Vec<PersonalProfileSubResp>,
    /// 籍贯 ID，可通过[【查询省份/主要行政区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region_subdivision/search)获取
    ///
    /// **示例值**: "6863326262618752111"
    #[serde(
        rename = "native_region",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub native_region: String,
    /// 户口类型，枚举值可通过文档[枚举常量介绍](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)户口类型（hukou_type）枚举定义部分获得
    #[serde(
        rename = "hukou_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub hukou_type: EnumSubResp,
    /// 户口所在地
    ///
    /// **示例值**: "山东省平阴县"
    #[serde(
        rename = "hukou_location",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub hukou_location: String,
    /// 政治面貌，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：political_affiliation
    ///
    /// - object_api_name：person_info_chn
    #[serde(
        rename = "political_affiliations",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub political_affiliations: Vec<EnumSubResp>,
    /// 人才 ID，用于[【获取人才信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region_subdivision/search)
    ///
    /// **示例值**: "6863326262618752123"
    #[serde(
        rename = "talent_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub talent_id: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
    /// 居民身份证件号码
    ///
    /// **示例值**: "11010000000000"
    #[serde(
        rename = "national_id_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_number: String,
    /// 家庭地址
    ///
    /// **示例值**: "6863326262618752123"
    #[serde(
        rename = "family_address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub family_address: String,
    /// 出生国家/地区
    ///
    /// **示例值**: "中国"
    #[serde(
        rename = "born_country_region",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub born_country_region: String,
    /// 是否残疾
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_disabled",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_disabled: bool,
    /// 残疾证号
    ///
    /// **示例值**: "1110000"
    #[serde(
        rename = "disable_card_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub disable_card_number: String,
    /// 是否烈属
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_martyr_family",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_martyr_family: bool,
    /// 烈属证号
    ///
    /// **示例值**: "1110000"
    #[serde(
        rename = "martyr_card_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub martyr_card_number: String,
    /// 是否孤老
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_old_alone",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_old_alone: bool,
    /// 居民身份信息
    ///
    /// **示例值**: "6863326262618752123"
    #[serde(
        rename = "resident_taxes",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub resident_taxes: Vec<ResidentTaxSubResp>,
    /// 首次入境日期
    ///
    /// **示例值**: "2021-01-02"
    #[serde(
        rename = "first_entry_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub first_entry_time: String,
    /// 预计离境日期
    ///
    /// **示例值**: "2022-01-02"
    #[serde(
        rename = "leave_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub leave_time: String,
    /// 宗教信仰，枚举值可查询[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：person
    ///
    /// - custom_api_name：religion
    #[serde(
        rename = "religion",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub religion: EnumSubResp,
    /// 工龄 浮点类型
    ///
    /// **示例值**: "2.1"
    #[serde(
        rename = "working_years_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub working_years_v2: f64,
    /// 个人信息 创建时间
    ///
    /// **示例值**: "2022-01-02"
    #[serde(
        rename = "created_at",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub created_at: String,
    /// 个人信息 更新时间
    ///
    /// **示例值**: "2022-01-02"
    #[serde(
        rename = "updated_at",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub updated_at: String,
    /// 个人信息 创建人
    ///
    /// **示例值**: "69928404442626824"
    #[serde(
        rename = "created_by",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub created_by: String,
    /// 个人信息 更新人
    ///
    /// **示例值**: "69928404442626824"
    #[serde(
        rename = "updated_by",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub updated_by: String,
    /// 银行卡号
    ///
    /// **示例值**: "69928404442626824"
    #[serde(
        rename = "bank_account_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_number: String,
    /// 护照号码
    ///
    /// **示例值**: "6919733936050406926"
    #[serde(
        rename = "passport_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub passport_number: String,
    /// 上家公司
    #[serde(
        rename = "former_employer",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub former_employer: Vec<I18nSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct BasicDepartmentSubResp {
    /// 部门 ID，详细信息可通过[查询单个部门](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/department/get)接口获得
    ///
    /// - 类型与 department_id_type 一致
    ///
    /// **示例值**: "4719456877659520852"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 部门名称
    #[serde(
        rename = "department_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub department_name: Vec<I18nSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct BasicEmployeeSubResp {
    /// 雇佣 ID，类型与 user_id_type 一致
    ///
    /// **示例值**: "6893014062142064135"
    #[serde(
        rename = "employment_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employment_id: String,
    /// 工号
    ///
    /// **示例值**: "1000000"
    #[serde(
        rename = "employee_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employee_number: String,
    /// 邮箱地址
    ///
    /// **示例值**: "test@163.com"
    #[serde(
        rename = "email_address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email_address: String,
    /// 基本个人信息
    #[serde(
        rename = "person_info",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub person_info: BasicPersonInfoSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct WorkEmailSubResp {
    /// 邮箱地址
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "1234567@example.feishu.cn"
    #[serde(
        rename = "email",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email: String,
    /// 邮箱用途，枚举值可通过文档[枚举常量介绍](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)邮箱用途（email_usage）枚举定义获得
    #[serde(
        rename = "email_usage",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email_usage: EnumSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct JobDataCostCenterSubResp {
    /// 成本中心 ID，可以通过[搜索成本中心信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/cost_center/search)接口获取对应的成本中心信息
    ///
    /// **示例值**: "6950635856373745165"
    #[serde(
        rename = "cost_center_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub cost_center_id: String,
    /// 分摊比例
    ///
    /// **示例值**: "100"
    #[serde(
        rename = "rate",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub rate: i64,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EducationSubResp {
    /// 学校
    ///
    /// - 自定义名称时返回该字段
    ///
    /// - 下拉框选择的返回 school_name 字段
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "school",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub school: Vec<I18nSubResp>,
    /// 学历，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)学历（level_of_education）枚举定义获得
    #[serde(
        rename = "level_of_education",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub level_of_education: EnumSubResp,
    /// 开始日期
    ///
    /// **示例值**: "2011-09-01"
    #[serde(
        rename = "start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_date: String,
    /// 结束日期
    ///
    /// **示例值**: "2015-06-30"
    #[serde(
        rename = "end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_date: String,
    /// 专业
    ///
    /// - 自定义名称时返回该字段
    ///
    /// - 下拉框选择的返回 field_of_study_name 字段
    #[serde(
        rename = "field_of_study",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_of_study: Vec<I18nSubResp>,
    /// 学位，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)学位（degree）枚举定义获得
    #[serde(
        rename = "degree",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub degree: EnumSubResp,
    /// 学校名称
    ///
    /// - 可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：school_name
    ///
    /// - object_api_name：education
    ///
    /// - 自定义名称时返回 school 字段
    ///
    /// - 下拉框选择的返回该字段
    #[serde(
        rename = "school_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub school_name: EnumSubResp,
    /// 专业名称
    ///
    /// - 可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：field_of_study_name
    ///
    /// - object_api_name：education
    ///
    /// - 自定义名称时返回 field_of_study 字段
    ///
    /// - 下拉框选择的返回该字段
    #[serde(
        rename = "field_of_study_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_of_study_name: EnumSubResp,
    /// 国家/地区，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取
    ///
    /// **示例值**: "1"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 预期结束日期
    ///
    /// **示例值**: "2011-09-01"
    #[serde(
        rename = "expected_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub expected_end_date: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct CustomFieldDataSubResp {
    /// 自定义字段 apiname，即自定义字段的唯一标识
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "name"
    #[serde(
        rename = "custom_api_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_api_name: String,
    /// 自定义字段名称
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: CustomNameSubResp,
    /// 自定义字段类型
    ///
    /// **示例值**: "1"
    #[serde(
        rename = "type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub body_type: i64,
    /// 字段值，是 json 转义后的字符串，根据元数据定义不同，字段格式不同（如 123, 123.23, "true", ["id1","id2"], "2006-01-02 15:04:05"）
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "\"231\""
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct BasicPersonInfoSubResp {
    /// 个人信息 ID，在创建个人信息时生成的 ID 值
    ///
    /// **示例值**: "6919733936050406926"
    #[serde(
        rename = "person_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub person_id: String,
    /// 常用名
    ///
    /// **示例值**: "刘梓新"
    #[serde(
        rename = "preferred_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub preferred_name: String,
    /// 常用本地全名
    ///
    /// **示例值**: "刘梓新"
    #[serde(
        rename = "preferred_local_full_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub preferred_local_full_name: String,
    /// 常用英文全名
    ///
    /// **示例值**: "Henry"
    #[serde(
        rename = "preferred_english_full_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub preferred_english_full_name: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct I18nSubResp {
    /// 语言编码（IETF BCP 47）
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "zh-CN"
    #[serde(
        rename = "lang",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub lang: String,
    /// 文本内容
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "中文示例"
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct ObjectFieldDataSubResp {
    /// 字段名
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "name"
    #[serde(
        rename = "field_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_name: String,
    /// 字段值，是json转义后的字符串，根据元数据定义不同，字段格式不同(123, 123.23, true, [\"id1\",\"id2\], 2006-01-02 15:04:05])
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "Sandy"
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PersonNameSubResp {
    /// 姓 - 本地文字
    ///
    /// **示例值**: "黄"
    #[serde(
        rename = "local_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_primary: String,
    /// 名 - 本地文字
    ///
    /// **示例值**: "四"
    #[serde(
        rename = "local_first_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_first_name: String,
    /// 国家/地区，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 姓名类型，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)姓名类型（name_type）枚举定义获得
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "name_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name_type: EnumSubResp,
    /// 名 - 第二本地文字
    ///
    /// **示例值**: "五"
    #[serde(
        rename = "local_first_name_2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_first_name_2: String,
    /// 姓 - 第二本地文字
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "local_primary_2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_primary_2: String,
    /// 补充姓名类型，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：additional_name_type
    ///
    /// - object_api_name：person_name
    #[serde(
        rename = "additional_name_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub additional_name_type: EnumSubResp,
    /// 名
    ///
    /// **示例值**: "帅"
    #[serde(
        rename = "first_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub first_name: String,
    /// 全名
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "full_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub full_name: String,
    /// 姓氏称谓
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "hereditary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub hereditary: String,
    /// 自定义姓名（未传入时，姓名将默认根据所属国家 / 地区规则对相关姓、名字段拼接）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "custom_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_name: String,
    /// 本地文字的自定义姓名（未传入时，本地文字的姓名将默认根据所属国家 / 地区规则对本地文字的相关姓、名字段拼接）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "custom_local_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_local_name: String,
    /// 中间名
    ///
    /// **示例值**: "大"
    #[serde(
        rename = "middle_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub middle_name: String,
    /// 姓
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "name_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name_primary: String,
    /// 第二姓氏
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "secondary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub secondary: String,
    /// 尊称，可通过 [【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：social
    ///
    /// - object_api_name：person_name
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "social",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub social: EnumSubResp,
    /// 婚后姓氏
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "tertiary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub tertiary: String,
    /// 头衔，可通过 [【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：social
    ///
    /// - object_api_name：person_name
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "title",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub title: EnumSubResp,
    /// 本地中间名
    ///
    /// **示例值**: "大"
    #[serde(
        rename = "local_middle_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_middle_name: String,
    /// 第二姓氏 - 本地文字
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "local_secondary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_secondary: String,
    /// 展示姓名（本地和西方文字）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "display_name_local_and_western_script",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub display_name_local_and_western_script: String,
    /// 展示姓名（本地文字）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "display_name_local_script",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub display_name_local_script: String,
    /// 展示姓名（西方文字）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "display_name_western_script",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub display_name_western_script: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PhoneSubResp {
    /// 国家区号，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，按如下参数查询即可：
    ///
    /// - custom_api_name：international_area_code
    ///
    /// - object_api_name：phone
    #[serde(
        rename = "international_area_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub international_area_code: EnumSubResp,
    /// 电话号码
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "010-12345678"
    #[serde(
        rename = "phone_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_number: String,
    /// 完整电话号码
    ///
    /// **示例值**: "+86 010-12345678"
    #[serde(
        rename = "formatted_phone_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub formatted_phone_number: String,
    /// 设备类型，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)设备类型（device_type）枚举定义获得
    #[serde(
        rename = "device_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub device_type: EnumSubResp,
    /// 电话用途，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)电话用途（phone_usage）枚举定义获得
    #[serde(
        rename = "phone_usage",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_usage: EnumSubResp,
    /// 主要电话
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_primary: bool,
    /// 公开电话
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_public",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_public: bool,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct AddressSubResp {
    /// 完整地址（本地文字）
    ///
    /// **示例值**: "中国北京北京"
    #[serde(
        rename = "full_address_local_script",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub full_address_local_script: String,
    /// 完整地址（西方文字）
    ///
    /// **示例值**: "Beijing, Beijing, China,"
    #[serde(
        rename = "full_address_western_script",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub full_address_western_script: String,
    /// 地址 ID，用于[【更新个人信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/person/patch)联系地址
    ///
    /// **示例值**: "6989822217869624863"
    #[serde(
        rename = "address_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_id: String,
    /// 国家/地区，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 主要行政区
    ///
    /// **示例值**: "6863326815667095047"
    #[serde(
        rename = "region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub region_id: String,
    /// 地址行 1
    ///
    /// **示例值**: "丹佛测试地址-纽埃时区"
    #[serde(
        rename = "address_line1",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line1: String,
    /// 地址行 2
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "address_line2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line2: String,
    /// 地址行 3
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "address_line3",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line3: String,
    /// 地址行 4
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line4",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line4: String,
    /// 地址行 5
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line5",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line5: String,
    /// 地址行 6
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line6",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line6: String,
    /// 地址行 7
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line7",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line7: String,
    /// 地址行 8
    ///
    /// **示例值**: "rafSu"
    #[serde(
        rename = "address_line8",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line8: String,
    /// 地址行 9
    ///
    /// **示例值**: "McPRG"
    #[serde(
        rename = "address_line9",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line9: String,
    /// 地址行 1（非拉丁语系的本地文字）
    ///
    /// **示例值**: "丹佛测试地址-纽埃时区"
    #[serde(
        rename = "local_address_line1",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line1: String,
    /// 地址行 2（非拉丁语系的本地文字）
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "local_address_line2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line2: String,
    /// 地址行 3（非拉丁语系的本地文字）
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "local_address_line3",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line3: String,
    /// 地址行 4（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line4",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line4: String,
    /// 地址行 5（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line5",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line5: String,
    /// 地址行 6（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line6",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line6: String,
    /// 地址行 7（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line7",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line7: String,
    /// 地址行 8（非拉丁语系的本地文字）
    ///
    /// **示例值**: "rafSu"
    #[serde(
        rename = "local_address_line8",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line8: String,
    /// 地址行 9（非拉丁语系的本地文字）
    ///
    /// **示例值**: "McPRG"
    #[serde(
        rename = "local_address_line9",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line9: String,
    /// 邮政编码
    ///
    /// **示例值**: "611530"
    #[serde(
        rename = "postal_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub postal_code: String,
    /// 地址类型
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "address_type_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_type_list: Vec<EnumSubResp>,
    /// 主要地址
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_primary: bool,
    /// 公开地址
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_public",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_public: bool,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EmailSubResp {
    /// 邮箱地址
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "1234567@example.feishu.cn"
    #[serde(
        rename = "email",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email: String,
    /// 是否为主要邮箱
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_primary: bool,
    /// 是否为公开邮箱
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_public",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_public: bool,
    /// 邮箱用途，枚举值可通过文档[枚举常量介绍](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)邮箱用途（email_usage）枚举定义获得
    #[serde(
        rename = "email_usage",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email_usage: EnumSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct WorkExperienceInfoSubResp {
    /// 公司 / 组织
    #[serde(
        rename = "company_organization",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub company_organization: Vec<I18nSubResp>,
    /// 部门
    #[serde(
        rename = "department",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub department: Vec<I18nSubResp>,
    /// 岗位
    #[serde(
        rename = "job",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job: Vec<I18nSubResp>,
    /// 工作描述
    #[serde(
        rename = "description",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub description: Vec<I18nSubResp>,
    /// 开始日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_date: String,
    /// 结束日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_date: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct BankAccountSubResp {
    /// 银行名称。当在飞书人事找不到银行下拉选项，手动填写文本时，请通过此字段获取结果
    ///
    /// **示例值**: "中国农业银行"
    #[serde(
        rename = "bank_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_name: String,
    /// 银行账号
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6231200000001223"
    #[serde(
        rename = "bank_account_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_number: String,
    /// 开户人姓名
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "孟十五"
    #[serde(
        rename = "account_holder",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub account_holder: String,
    /// 支行名称。当在飞书人事找不到支行下拉选项，手动填写文本时，请通过此字段获取结果
    ///
    /// **示例值**: "中国农业银行支行"
    #[serde(
        rename = "branch_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub branch_name: String,
    /// 银行 ID，详细信息可通过[【查询银行信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-bank/search)查询。当在飞书人事选择具体银行下拉选项时，请通过此字段获取结果
    ///
    /// **示例值**: "MDBH00000001"
    #[serde(
        rename = "bank_id_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_id_v2: String,
    /// 支行 ID，要求必须为填入银行的支行，详细信息可通过[【查询支行信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-bank_branch/search)查询。当在飞书人事选择具体支行下拉选项时，请通过此字段获取结果
    ///
    /// **示例值**: "MDBK00000017"
    #[serde(
        rename = "branch_id_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub branch_id_v2: String,
    /// 国家/地区 ID，详细信息可通过[【查询国家/地区信息v2】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)查询
    ///
    /// **示例值**: "12"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 银行卡用途，枚举值可通过文档[枚举常量介绍](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)银行卡用途（Bank Account Usage）枚举定义部分获得
    #[serde(
        rename = "bank_account_usage",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_usage: Vec<EnumSubResp>,
    /// 银行卡类型，枚举值可通过文档[枚举常量介绍](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)银行卡类型（Bank Account Type）枚举定义部分获得
    #[serde(
        rename = "bank_account_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_type: EnumSubResp,
    /// 货币id，可通过[【查询货币信息v2】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-currency/search)查询
    ///
    /// **示例值**: "12QueryCountryRegionSubdivisionDataReq"
    #[serde(
        rename = "currency_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub currency_id: String,
    /// 国际银行账号
    ///
    /// **示例值**: "CH56 0483 5012 3456 7800 9"
    #[serde(
        rename = "IBAN",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub iban: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct NationalIdSubResp {
    /// 国家证件类型，可通过[【查询单个国家证件类型】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/national_id_type/get)获取详细信息
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6863330041896371725"
    #[serde(
        rename = "national_id_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_type_id: String,
    /// 证件号码
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "1231131333"
    #[serde(
        rename = "national_id_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_number: String,
    /// 证件签发日期
    ///
    /// **示例值**: "2020-04-01"
    #[serde(
        rename = "issue_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub issue_date: String,
    /// 证件到期日期
    ///
    /// **示例值**: "2020-05-21"
    #[serde(
        rename = "expiration_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub expiration_date: String,
    /// 国家/地区，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 证件签发机构
    ///
    /// **示例值**: "北京市公安局"
    #[serde(
        rename = "issued_by",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub issued_by: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct DependentSubResp {
    /// 姓名
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: PersonNameSubResp,
    /// 关系，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)亲属关系（relationship）枚举定义获得
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "relationship",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub relationship: EnumSubResp,
    /// 性别，枚举值可查询[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：gender
    ///
    /// - object_api_name：person
    #[serde(
        rename = "gender",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub gender: EnumSubResp,
    /// 生日
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "date_of_birth",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub date_of_birth: String,
    /// 国籍 ID，可通过[【查询国籍信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-nationality/search)查询
    ///
    /// **示例值**: "6862995745046267401"
    #[serde(
        rename = "nationality_id_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub nationality_id_v2: String,
    /// 证件号码
    #[serde(
        rename = "national_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_list: Vec<NationalIdSubResp>,
    /// 配偶工作状态，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：spouses_working_status
    ///
    /// - object_api_name：dependent
    #[serde(
        rename = "spouses_working_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub spouses_working_status: EnumSubResp,
    /// 包含家属医疗保险
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_this_person_covered_by_health_insurance",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_this_person_covered_by_health_insurance: bool,
    /// 允许家属抵扣税款
    ///
    /// **示例值**: "false"
    #[serde(
        rename = "is_this_person_allowed_for_tax_deduction",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_this_person_allowed_for_tax_deduction: bool,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
    /// 家庭成员姓名
    ///
    /// **示例值**: "张三"
    #[serde(
        rename = "dependent_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub dependent_name: String,
    /// 工作单位
    ///
    /// **示例值**: "海淀区交警大队"
    #[serde(
        rename = "employer",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employer: String,
    /// 岗位
    ///
    /// **示例值**: "保安"
    #[serde(
        rename = "job",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job: String,
    /// 电话
    #[serde(
        rename = "phone",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone: PhoneSubResp,
    /// 联系地址
    #[serde(
        rename = "address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address: AddressSubResp,
    /// 出生证明
    #[serde(
        rename = "birth_certificate_of_child",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub birth_certificate_of_child: Vec<FileSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EmergencyContactSubResp {
    /// 姓名
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: PersonNameSubResp,
    /// 关系，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)亲属关系（relationship）枚举定义获取
    #[serde(
        rename = "relationship",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub relationship: EnumSubResp,
    /// 电话
    #[serde(
        rename = "phone_ist",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_ist: Vec<PhoneSubResp>,
    /// 电话
    #[serde(
        rename = "phone_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_list: Vec<PhoneSubResp>,
    /// 法定姓名
    ///
    /// **示例值**: "张三"
    #[serde(
        rename = "legal_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub legal_name: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PersonalProfileSubResp {
    /// 资料类型，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：profile_type
    ///
    /// - object_api_name：personal_profile
    #[serde(
        rename = "personal_profile_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub personal_profile_type: EnumSubResp,
    /// 上传文件列表
    #[serde(
        rename = "files",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub files: Vec<FileSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct ResidentTaxSubResp {
    /// 年度
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "2023"
    #[serde(
        rename = "year_resident_tax",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub year_resident_tax: String,
    /// 居民身份，枚举值 api_name 可通过[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口查询，查询参数如下：
    ///
    /// - object_api_name：resident_tax
    ///
    /// - custom_api_name：resident_status
    #[serde(
        rename = "resident_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub resident_status: EnumSubResp,
    /// 国家/地区，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取
    ///
    /// **示例值**: "中国"
    #[serde(
        rename = "tax_country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub tax_country_region_id: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<ObjectFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct CustomNameSubResp {
    /// 中文
    ///
    /// **示例值**: "自定义姓名"
    #[serde(
        rename = "zh_cn",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub zh_cn: String,
    /// 英文
    ///
    /// **示例值**: "Custom Name"
    #[serde(
        rename = "en_us",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub en_us: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct FileSubResp {
    /// 上传文件ID
    ///
    /// **示例值**: "150018109586e8ea745e47ae8feb3722dbe1d03a181336393633393133303431393831343930373235150200"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 文件名
    ///
    /// **示例值**: "document.txt"
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: String,
}

#[cfg(feature = "test-util")]
mod test_utils {
    use std::sync::Arc;

    use self::gen::core_hr::CoreHrServiceMocker;
    use crate::core::mocker::*;

    use super::*;
    use crate::api::*;
    use crate::core::model::*;

    pub struct Mocker;

    pub trait MockFunc:
        Fn(BatchGetCoreHrEmployeeReq) -> Result<(BatchGetCoreHrEmployeeResp, CommonResponse), Error>
        + Send
        + Sync
        + 'static
    {
    }
    impl<
            T: Fn(
                    BatchGetCoreHrEmployeeReq,
                ) -> Result<(BatchGetCoreHrEmployeeResp, CommonResponse), Error>
                + Send
                + Sync
                + 'static,
        > MockFunc for T
    {
    }

    impl<'c, IStore: Store, IClient: HttpClient> CoreHrServiceMocker<'c, IStore, IClient> {
        pub fn mock_batch_get_core_hr_employee<F: MockFunc>(
            &self,
            f: F,
        ) -> MockerBuilder<
            Mocker,
            BatchGetCoreHrEmployeeReq,
            BatchGetCoreHrEmployeeResp,
            Arc<dyn MockFunc>,
        > {
            MockerBuilder::new(self.cli.instance_id, Arc::new(f))
        }

        pub(super) fn get_mock_batch_get_core_hr_employee(
            &self,
            req: &BatchGetCoreHrEmployeeReq,
        ) -> Option<Arc<dyn MockFunc>> {
            do_mock::<
                Mocker,
                BatchGetCoreHrEmployeeReq,
                BatchGetCoreHrEmployeeResp,
                Arc<dyn MockFunc>,
            >(self.cli.instance_id, req)
        }
    }
}

#[cfg(feature = "test-util")]
#[cfg(test)]
mod test {
    use crate::{
        api::gen::core_hr::batch_get_core_hr_employee::{
            BatchGetCoreHrEmployeeReq, BatchGetCoreHrEmployeeResp, BatchGetCoreHrEmployeeRespInner,
        },
        core::{model::CommonResponse, Lark},
    };

    #[tokio::test]
    async fn test_mock() {
        let lark = Lark::new("".to_owned(), "".into());
        let mocker = lark
            .core_hr()
            .mock()
            .mock_batch_get_core_hr_employee(|_| {
                Ok((
                    BatchGetCoreHrEmployeeResp::default(),
                    CommonResponse::default(),
                ))
            })
            .build();
        let res = lark
            .core_hr()
            .batch_get_core_hr_employee(BatchGetCoreHrEmployeeReq::default())
            .await;
        assert!(res.is_ok());
        mocker.clear();
        let res = lark
            .core_hr()
            .batch_get_core_hr_employee(BatchGetCoreHrEmployeeReq::default())
            .await;
        assert!(res.is_err());
    }

    const REQ: &str = r#"{
    "fields": [
        "person_info.phone_number"
    ],
    "employment_ids": [
        "7140964208476371111"
    ],
    "person_ids": [
        "7051837122449458732"
    ],
    "work_emails": [
        "zhangsan@example.feishu.cn"
    ]
}"#;

    #[test]
    fn test_req() {
        if REQ == "{}" {
            return;
        }
        if let Err(e) = serde_json::from_str::<super::BatchGetCoreHrEmployeeReqBody>(REQ) {
            panic!("{}", e);
        }
    }

    const RESP: &str = r#"{
    "code": 0,
    "msg": "success",
    "data": {
        "items": [
            {
                "employment_id": "6893014062142064135",
                "ats_application_id": "6838119494196871234",
                "prehire_id": "7023239238976141133",
                "employee_number": "1000000",
                "employee_type_id": "6971090097697521314",
                "department_id": "6893014062142064135",
                "job_level_id": "6893014062142064135",
                "job_level": {
                    "id": "4692446793125560154",
                    "level_order": 9999,
                    "code": "VQzo/BSonp8l6PmcZ+VlDhkd2595LMkhyBAGX6HAlCY=",
                    "name": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ],
                    "description": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ],
                    "active": true,
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "name": {
                                "zh_cn": "自定义姓名",
                                "en_us": "Custom Name"
                            },
                            "type": 1,
                            "value": "\"231\""
                        }
                    ]
                },
                "job_grade_id": "6893014062142064135",
                "work_location_id": "6893014062142064135",
                "job_family_id": "6893014062142064135",
                "job_family": {
                    "id": "4698019107896524633",
                    "name": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ],
                    "active": true,
                    "parent_id": "4698020757495316313",
                    "effective_time": "2020-05-01 00:00:00",
                    "expiration_time": "2020-05-02 00:00:00",
                    "code": "123456",
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "name": {
                                "zh_cn": "自定义姓名",
                                "en_us": "Custom Name"
                            },
                            "type": 1,
                            "value": "\"231\""
                        }
                    ]
                },
                "position_id": "6893014062142064135",
                "position": {
                    "position_id": "4692446793125560154",
                    "code": "A01234",
                    "names": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ],
                    "descriptions": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ],
                    "active": true,
                    "job_family_id_list": [
                        "4719519211875096301"
                    ],
                    "cost_center_id": "4719519211875096301",
                    "job_id": "4719519211875096302",
                    "job_level_id_list": [
                        "4719519211875096301"
                    ],
                    "employee_type_id_list": [
                        "4719519211875096301"
                    ],
                    "job_grade_id_list": [
                        "4719519211875096301"
                    ],
                    "work_location_id_list": [
                        "4719519211875096301"
                    ],
                    "working_hours_type_id": "4719519211875096301",
                    "department_id": "4719519211875096301",
                    "direct_leader_id": "4719519211875096301",
                    "dotted_line_leader_id": "4719519211875096301",
                    "is_key_position": true,
                    "effective_time": "2020-05-01",
                    "expiration_time": "2020-05-01",
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "name": {
                                "zh_cn": "自定义姓名",
                                "en_us": "Custom Name"
                            },
                            "type": 1,
                            "value": "\"231\""
                        }
                    ]
                },
                "job_id": "6893014062142064135",
                "job": {
                    "id": "4698040628992333549",
                    "code": "JP422119",
                    "name": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ],
                    "description": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ],
                    "active": true,
                    "job_title": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ],
                    "job_family_id_list": [
                        "4719519211875096301"
                    ],
                    "job_level_id_list": [
                        "4719519212005299950"
                    ],
                    "working_hours_type_id": "6890452208593372679",
                    "effective_time": "2020-01-01 00:00:00",
                    "expiration_time": "2021-01-01 00:00:00",
                    "custom_fields": [
                        {
                            "field_name": "name",
                            "value": "Sandy"
                        }
                    ]
                },
                "company_id": "6893014062142064135",
                "working_hours_type_id": "6893014062142064135",
                "tenure": "0.01",
                "seniority_date": "2021-03-16",
                "effective_date": "2021-03-16",
                "primary_employment": true,
                "probation_period": 16,
                "on_probation": true,
                "probation_end_date": "2022-08-01",
                "direct_manager_id": "7027024823985411287",
                "dotted_line_manager_id": "7027024823985411782",
                "employment_type": {
                    "enum_name": "employee",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ]
                },
                "employment_status": {
                    "enum_name": "hired",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ]
                },
                "expiration_date": "2022-08-16",
                "reason_for_offboarding": {
                    "enum_name": "voluntary",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ]
                },
                "email_address": "test@163.com",
                "work_email_list": [
                    {
                        "email": "1234567@example.feishu.cn",
                        "email_usage": {
                            "enum_name": "home",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ]
                        }
                    }
                ],
                "cost_center_list": [
                    {
                        "cost_center_id": "6950635856373745165",
                        "rate": 100
                    }
                ],
                "rehire": {
                    "enum_name": "yes",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ]
                },
                "rehire_employment_id": "7164286667866966659",
                "person_info": {
                    "person_id": "6919733936050406926",
                    "phone_number": "13649211111",
                    "legal_name": "张三",
                    "preferred_name": "刘梓新(Henry)",
                    "preferred_local_full_name": "刘梓新",
                    "preferred_english_full_name": "Henry",
                    "name_list": [
                        {
                            "local_primary": "黄",
                            "local_first_name": "四",
                            "country_region_id": "6862995757234914824",
                            "name_type": {
                                "enum_name": "legal_name",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "local_first_name_2": "五",
                            "local_primary_2": "王",
                            "additional_name_type": {
                                "enum_name": "legal_name",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "first_name": "帅",
                            "full_name": "王大帅",
                            "hereditary": "王",
                            "custom_name": "王大帅",
                            "custom_local_name": "王大帅",
                            "middle_name": "大",
                            "name_primary": "王",
                            "secondary": "王",
                            "social": {
                                "enum_name": "example",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "tertiary": "王",
                            "title": {
                                "enum_name": "example",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "local_middle_name": "大",
                            "local_secondary": "王",
                            "display_name_local_and_western_script": "王大帅",
                            "display_name_local_script": "王大帅",
                            "display_name_western_script": "王大帅"
                        }
                    ],
                    "gender": {
                        "enum_name": "male",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "中文示例"
                            }
                        ]
                    },
                    "date_of_birth": "2020-01-01",
                    "race": {
                        "enum_name": "example",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "中文示例"
                            }
                        ]
                    },
                    "marital_status": {
                        "enum_name": "example",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "中文示例"
                            }
                        ]
                    },
                    "phone_list": [
                        {
                            "international_area_code": {
                                "enum_name": "86_china",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "phone_number": "010-12345678",
                            "formatted_phone_number": "+86 010-12345678",
                            "device_type": {
                                "enum_name": "mobile_phone",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "phone_usage": {
                                "enum_name": "home",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "is_primary": true,
                            "is_public": true
                        }
                    ],
                    "address_list": [
                        {
                            "full_address_local_script": "中国北京北京",
                            "full_address_western_script": "Beijing, Beijing, China,",
                            "address_id": "6989822217869624863",
                            "country_region_id": "6862995757234914824",
                            "region_id": "6863326815667095047",
                            "address_line1": "丹佛测试地址-纽埃时区",
                            "address_line2": "PoewH",
                            "address_line3": "PoewH",
                            "address_line4": "jmwJc",
                            "address_line5": "jmwJc",
                            "address_line6": "jmwJc",
                            "address_line7": "jmwJc",
                            "address_line8": "rafSu",
                            "address_line9": "McPRG",
                            "local_address_line1": "丹佛测试地址-纽埃时区",
                            "local_address_line2": "PoewH",
                            "local_address_line3": "PoewH",
                            "local_address_line4": "jmwJc",
                            "local_address_line5": "jmwJc",
                            "local_address_line6": "jmwJc",
                            "local_address_line7": "jmwJc",
                            "local_address_line8": "rafSu",
                            "local_address_line9": "McPRG",
                            "postal_code": "611530",
                            "address_type_list": [
                                {
                                    "enum_name": "home_address",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                }
                            ],
                            "is_primary": true,
                            "is_public": true,
                            "custom_fields": [
                                {
                                    "custom_api_name": "name",
                                    "name": {
                                        "zh_cn": "自定义姓名",
                                        "en_us": "Custom Name"
                                    },
                                    "type": 1,
                                    "value": "\"231\""
                                }
                            ]
                        }
                    ],
                    "email_list": [
                        {
                            "email": "1234567@example.feishu.cn",
                            "is_primary": true,
                            "is_public": true,
                            "email_usage": {
                                "enum_name": "home",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            }
                        }
                    ],
                    "work_experience_list": [
                        {
                            "company_organization": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ],
                            "department": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ],
                            "job": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ],
                            "description": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ],
                            "start_date": "2020-01-01",
                            "end_date": "2020-01-01",
                            "custom_fields": [
                                {
                                    "custom_api_name": "name",
                                    "name": {
                                        "zh_cn": "自定义姓名",
                                        "en_us": "Custom Name"
                                    },
                                    "type": 1,
                                    "value": "\"231\""
                                }
                            ]
                        }
                    ],
                    "education_list": [
                        {
                            "school": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ],
                            "level_of_education": {
                                "enum_name": "phd",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "start_date": "2011-09-01",
                            "end_date": "2015-06-30",
                            "field_of_study": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ],
                            "degree": {
                                "enum_name": "phd",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "school_name": {
                                "enum_name": "example",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "field_of_study_name": {
                                "enum_name": "example",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "country_region_id": "1",
                            "expected_end_date": "2011-09-01",
                            "custom_fields": [
                                {
                                    "custom_api_name": "name",
                                    "name": {
                                        "zh_cn": "自定义姓名",
                                        "en_us": "Custom Name"
                                    },
                                    "type": 1,
                                    "value": "\"231\""
                                }
                            ]
                        }
                    ],
                    "bank_account_list": [
                        {
                            "bank_name": "中国农业银行",
                            "bank_account_number": "6231200000001223",
                            "account_holder": "孟十五",
                            "branch_name": "中国农业银行支行",
                            "bank_id_v2": "MDBH00000001",
                            "branch_id_v2": "MDBK00000017",
                            "country_region_id": "12",
                            "bank_account_usage": [
                                {
                                    "enum_name": "payment",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                }
                            ],
                            "bank_account_type": {
                                "enum_name": "checking",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "currency_id": "12QueryCountryRegionSubdivisionDataReq",
                            "IBAN": "CH56 0483 5012 3456 7800 9",
                            "custom_fields": [
                                {
                                    "custom_api_name": "name",
                                    "name": {
                                        "zh_cn": "自定义姓名",
                                        "en_us": "Custom Name"
                                    },
                                    "type": 1,
                                    "value": "\"231\""
                                }
                            ]
                        }
                    ],
                    "national_id_list": [
                        {
                            "national_id_type_id": "6863330041896371725",
                            "national_id_number": "1231131333",
                            "issue_date": "2020-04-01",
                            "expiration_date": "2020-05-21",
                            "country_region_id": "6862995757234914824",
                            "issued_by": "北京市公安局",
                            "custom_fields": [
                                {
                                    "custom_api_name": "name",
                                    "name": {
                                        "zh_cn": "自定义姓名",
                                        "en_us": "Custom Name"
                                    },
                                    "type": 1,
                                    "value": "\"231\""
                                }
                            ]
                        }
                    ],
                    "dependent_list": [
                        {
                            "name": {
                                "local_primary": "黄",
                                "local_first_name": "四",
                                "country_region_id": "6862995757234914824",
                                "name_type": {
                                    "enum_name": "legal_name",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                },
                                "local_first_name_2": "五",
                                "local_primary_2": "王",
                                "additional_name_type": {
                                    "enum_name": "legal_name",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                },
                                "first_name": "帅",
                                "full_name": "王大帅",
                                "hereditary": "王",
                                "custom_name": "王大帅",
                                "custom_local_name": "王大帅",
                                "middle_name": "大",
                                "name_primary": "王",
                                "secondary": "王",
                                "social": {
                                    "enum_name": "example",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                },
                                "tertiary": "王",
                                "title": {
                                    "enum_name": "exmaple",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                },
                                "local_middle_name": "大",
                                "local_secondary": "王",
                                "display_name_local_and_western_script": "王大帅",
                                "display_name_local_script": "王大帅",
                                "display_name_western_script": "王大帅"
                            },
                            "relationship": {
                                "enum_name": "parent",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "gender": {
                                "enum_name": "male",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "date_of_birth": "2020-01-01",
                            "nationality_id_v2": "6862995745046267401",
                            "national_id_list": [
                                {
                                    "national_id_type_id": "6863330041896371725",
                                    "national_id_number": "1231131333",
                                    "issue_date": "2020-04-01",
                                    "expiration_date": "2020-05-21",
                                    "country_region_id": "6862995757234914824",
                                    "issued_by": "北京市公安局",
                                    "custom_fields": [
                                        {
                                            "custom_api_name": "name",
                                            "name": {
                                                "zh_cn": "自定义姓名",
                                                "en_us": "Custom Name"
                                            },
                                            "type": 1,
                                            "value": "\"231\""
                                        }
                                    ]
                                }
                            ],
                            "spouses_working_status": {
                                "enum_name": "example",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "is_this_person_covered_by_health_insurance": true,
                            "is_this_person_allowed_for_tax_deduction": false,
                            "custom_fields": [
                                {
                                    "custom_api_name": "name",
                                    "name": {
                                        "zh_cn": "自定义姓名",
                                        "en_us": "Custom Name"
                                    },
                                    "type": 1,
                                    "value": "\"231\""
                                }
                            ],
                            "dependent_name": "张三",
                            "employer": "海淀区交警大队",
                            "job": "保安",
                            "phone": {
                                "international_area_code": {
                                    "enum_name": "86_china",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                },
                                "phone_number": "010-12345678",
                                "formatted_phone_number": "+86 010-12345678",
                                "device_type": {
                                    "enum_name": "mobile_phone",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                },
                                "phone_usage": {
                                    "enum_name": "home",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                },
                                "is_primary": true,
                                "is_public": true
                            },
                            "address": {
                                "full_address_local_script": "中国北京北京",
                                "full_address_western_script": "Beijing, Beijing, China,",
                                "address_id": "6989822217869624863",
                                "country_region_id": "6862995757234914824",
                                "region_id": "6863326815667095047",
                                "address_line1": "丹佛测试地址-纽埃时区",
                                "address_line2": "PoewH",
                                "address_line3": "PoewH",
                                "address_line4": "jmwJc",
                                "address_line5": "jmwJc",
                                "address_line6": "jmwJc",
                                "address_line7": "jmwJc",
                                "address_line8": "rafSu",
                                "address_line9": "McPRG",
                                "local_address_line1": "丹佛测试地址-纽埃时区",
                                "local_address_line2": "PoewH",
                                "local_address_line3": "PoewH",
                                "local_address_line4": "jmwJc",
                                "local_address_line5": "jmwJc",
                                "local_address_line6": "jmwJc",
                                "local_address_line7": "jmwJc",
                                "local_address_line8": "rafSu",
                                "local_address_line9": "McPRG",
                                "postal_code": "611530",
                                "address_type_list": [
                                    {
                                        "enum_name": "home_address",
                                        "display": [
                                            {
                                                "lang": "zh-CN",
                                                "value": "中文示例"
                                            }
                                        ]
                                    }
                                ],
                                "is_primary": true,
                                "is_public": true,
                                "custom_fields": [
                                    {
                                        "custom_api_name": "name",
                                        "name": {
                                            "zh_cn": "自定义姓名",
                                            "en_us": "Custom Name"
                                        },
                                        "type": 1,
                                        "value": "\"231\""
                                    }
                                ]
                            },
                            "birth_certificate_of_child": [
                                {
                                    "id": "150018109586e8ea745e47ae8feb3722dbe1d03a181336393633393133303431393831343930373235150200",
                                    "name": "document.txt"
                                }
                            ]
                        }
                    ],
                    "emergency_contact_list": [
                        {
                            "name": {
                                "local_primary": "黄",
                                "local_first_name": "四",
                                "country_region_id": "6862995757234914824",
                                "name_type": {
                                    "enum_name": "legal_name",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                },
                                "local_first_name_2": "五",
                                "local_primary_2": "王",
                                "additional_name_type": {
                                    "enum_name": "legal_name",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                },
                                "first_name": "帅",
                                "full_name": "王大帅",
                                "hereditary": "王",
                                "custom_name": "王大帅",
                                "custom_local_name": "王大帅",
                                "middle_name": "大",
                                "name_primary": "王",
                                "secondary": "王",
                                "social": {
                                    "enum_name": "example",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                },
                                "tertiary": "王",
                                "title": {
                                    "enum_name": "example",
                                    "display": [
                                        {
                                            "lang": "zh-CN",
                                            "value": "中文示例"
                                        }
                                    ]
                                },
                                "local_middle_name": "大",
                                "local_secondary": "王",
                                "display_name_local_and_western_script": "王大帅",
                                "display_name_local_script": "王大帅",
                                "display_name_western_script": "王大帅"
                            },
                            "relationship": {
                                "enum_name": "parent",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "phone_ist": [
                                {
                                    "international_area_code": {
                                        "enum_name": "86_china",
                                        "display": [
                                            {
                                                "lang": "zh-CN",
                                                "value": "中文示例"
                                            }
                                        ]
                                    },
                                    "phone_number": "010-12345678",
                                    "formatted_phone_number": "+86 010-12345678",
                                    "device_type": {
                                        "enum_name": "mobile_phone",
                                        "display": [
                                            {
                                                "lang": "zh-CN",
                                                "value": "中文示例"
                                            }
                                        ]
                                    },
                                    "phone_usage": {
                                        "enum_name": "home",
                                        "display": [
                                            {
                                                "lang": "zh-CN",
                                                "value": "中文示例"
                                            }
                                        ]
                                    },
                                    "is_primary": true,
                                    "is_public": true
                                }
                            ],
                            "phone_list": [
                                {
                                    "international_area_code": {
                                        "enum_name": "86_china",
                                        "display": [
                                            {
                                                "lang": "zh-CN",
                                                "value": "中文示例"
                                            }
                                        ]
                                    },
                                    "phone_number": "010-12345678",
                                    "formatted_phone_number": "+86 010-12345678",
                                    "device_type": {
                                        "enum_name": "mobile_phone",
                                        "display": [
                                            {
                                                "lang": "zh-CN",
                                                "value": "中文示例"
                                            }
                                        ]
                                    },
                                    "phone_usage": {
                                        "enum_name": "home",
                                        "display": [
                                            {
                                                "lang": "zh-CN",
                                                "value": "中文示例"
                                            }
                                        ]
                                    },
                                    "is_primary": true,
                                    "is_public": true
                                }
                            ],
                            "legal_name": "张三",
                            "custom_fields": [
                                {
                                    "custom_api_name": "name",
                                    "name": {
                                        "zh_cn": "自定义姓名",
                                        "en_us": "Custom Name"
                                    },
                                    "type": 1,
                                    "value": "\"231\""
                                }
                            ]
                        }
                    ],
                    "date_entered_workforce": "2020-10-01",
                    "working_years": 2,
                    "profile_image_id": "dfysuc8x76dsfsw",
                    "email_address": "test@163.com",
                    "age": 22,
                    "highest_level_of_education": {
                        "school": [
                            {
                                "lang": "zh-CN",
                                "value": "中文示例"
                            }
                        ],
                        "level_of_education": {
                            "enum_name": "phd",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ]
                        },
                        "start_date": "2011-09-01",
                        "end_date": "2015-06-30",
                        "field_of_study": [
                            {
                                "lang": "zh-CN",
                                "value": "中文示例"
                            }
                        ],
                        "degree": {
                            "enum_name": "phd",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ]
                        },
                        "school_name": {
                            "enum_name": "example",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ]
                        },
                        "field_of_study_name": {
                            "enum_name": "example",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ]
                        },
                        "country_region_id": "1",
                        "expected_end_date": "2011-09-01",
                        "custom_fields": [
                            {
                                "custom_api_name": "name",
                                "name": {
                                    "zh_cn": "自定义姓名",
                                    "en_us": "Custom Name"
                                },
                                "type": 1,
                                "value": "\"231\""
                            }
                        ]
                    },
                    "highest_degree_of_education": {
                        "school": [
                            {
                                "lang": "zh-CN",
                                "value": "中文示例"
                            }
                        ],
                        "level_of_education": {
                            "enum_name": "phd",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ]
                        },
                        "start_date": "2011-09-01",
                        "end_date": "2015-06-30",
                        "field_of_study": [
                            {
                                "lang": "zh-CN",
                                "value": "中文示例"
                            }
                        ],
                        "degree": {
                            "enum_name": "phd",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ]
                        },
                        "school_name": {
                            "enum_name": "example",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ]
                        },
                        "field_of_study_name": {
                            "enum_name": "exmple",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ]
                        },
                        "country_region_id": "1",
                        "expected_end_date": "2011-09-01",
                        "custom_fields": [
                            {
                                "custom_api_name": "name",
                                "name": {
                                    "zh_cn": "自定义姓名",
                                    "en_us": "Custom Name"
                                },
                                "type": 1,
                                "value": "\"231\""
                            }
                        ]
                    },
                    "personal_profile": [
                        {
                            "personal_profile_type": {
                                "enum_name": "example",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "files": [
                                {
                                    "id": "150018109586e8ea745e47ae8feb3722dbe1d03a181336393633393133303431393831343930373235150200",
                                    "name": "document.txt"
                                }
                            ]
                        }
                    ],
                    "native_region": "6863326262618752111",
                    "hukou_type": {
                        "enum_name": "local_urban_residence",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "中文示例"
                            }
                        ]
                    },
                    "hukou_location": "山东省平阴县",
                    "political_affiliations": [
                        {
                            "enum_name": "communist_party_of_china",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "中文示例"
                                }
                            ]
                        }
                    ],
                    "talent_id": "6863326262618752123",
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "name": {
                                "zh_cn": "自定义姓名",
                                "en_us": "Custom Name"
                            },
                            "type": 1,
                            "value": "\"231\""
                        }
                    ],
                    "national_id_number": "11010000000000",
                    "family_address": "6863326262618752123",
                    "born_country_region": "中国",
                    "is_disabled": true,
                    "disable_card_number": "1110000",
                    "is_martyr_family": true,
                    "martyr_card_number": "1110000",
                    "is_old_alone": true,
                    "resident_taxes": [
                        {
                            "year_resident_tax": "2023",
                            "resident_status": {
                                "enum_name": "example",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "中文示例"
                                    }
                                ]
                            },
                            "tax_country_region_id": "中国",
                            "custom_fields": [
                                {
                                    "field_name": "name",
                                    "value": "Sandy"
                                }
                            ]
                        }
                    ],
                    "first_entry_time": "2021-01-02",
                    "leave_time": "2022-01-02",
                    "religion": {
                        "enum_name": "example",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "中文示例"
                            }
                        ]
                    },
                    "working_years_v2": 2.1,
                    "created_at": "2022-01-02",
                    "updated_at": "2022-01-02",
                    "created_by": "69928404442626824",
                    "updated_by": "69928404442626824",
                    "bank_account_number": "69928404442626824",
                    "passport_number": "6919733936050406926",
                    "former_employer": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ]
                },
                "custom_fields": [
                    {
                        "custom_api_name": "name",
                        "name": {
                            "zh_cn": "自定义姓名",
                            "en_us": "Custom Name"
                        },
                        "type": 1,
                        "value": "\"231\""
                    }
                ],
                "noncompete_status": {
                    "enum_name": "example",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ]
                },
                "past_offboarding": true,
                "regular_employee_start_date": "2020-01-01",
                "external_id": "10000000",
                "times_employed": 16,
                "recruitment_type": {
                    "enum_name": "example",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ]
                },
                "avatar_url": "https://internal-api-lark-file.feishu-boe.cn/static-resource/v1/v2_a550d36b-28ef-48ad-9e50-58004beb386j~?image_size=noop&cut_type=&quality=&format=png&sticker_format=.webp",
                "primary_contract_id": "7164286667866966659",
                "contract_start_date": "2020-01-01",
                "contract_end_date": "2020-01-01",
                "contract_expected_end_date": "2020-01-01",
                "pay_group_id": "7164286667866966659",
                "international_assignment": true,
                "work_calendar_id": "7164286667866966659",
                "department": {
                    "id": "4719456877659520852",
                    "department_name": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ]
                },
                "direct_manager": {
                    "employment_id": "6893014062142064135",
                    "employee_number": "1000000",
                    "email_address": "test@163.com",
                    "person_info": {
                        "person_id": "6919733936050406926",
                        "preferred_name": "刘梓新",
                        "preferred_local_full_name": "刘梓新",
                        "preferred_english_full_name": "Henry"
                    }
                },
                "dotted_line_manager": {
                    "employment_id": "6893014062142064135",
                    "employee_number": "1000000",
                    "email_address": "test@163.com",
                    "person_info": {
                        "person_id": "6919733936050406926",
                        "preferred_name": "刘梓新",
                        "preferred_local_full_name": "刘梓新",
                        "preferred_english_full_name": "Henry"
                    }
                },
                "time_zone": "Asia/Shanghai",
                "service_company": "7174374910734141112",
                "compensation_type": {
                    "enum_name": "example",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ]
                },
                "work_shift": {
                    "enum_name": "example",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "中文示例"
                        }
                    ]
                }
            }
        ]
    }
}"#;
    #[test]
    fn test_resp() {
        let res = serde_json::from_str::<BatchGetCoreHrEmployeeRespInner>(RESP);
        if let Err(e) = res {
            panic!("{}", e);
        }
        if let Ok(v) = serde_json::from_str::<serde_json::Value>(RESP) {
            if v.get("data").is_some() {
                assert!(res.unwrap().data.is_some());
            }
        }
    }
}

//! doc url: <https://open.larkoffice.com/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/person/create>
// Code generated by gen_api. DO NOT EDIT.

use serde::{Deserialize, Serialize};

use crate::api::BaseResp;
use crate::api::HasBaseResp;
use crate::core::model::{ApiRequest, CommonResponse, MethodOption, ReqParam, StreamReqParam};
use crate::{
    core::{http_client::HttpClient, store::Store},
    error::Error,
};

use crate::api::gen::core_hr::CoreHrService;

impl<'c, IStore: Store, IClient: HttpClient> CoreHrService<'c, IStore, IClient> {
    /// **api 版本: 2024-07-24T03:06:46+00:00**
    ///
    /// ## 创建个人信息
    ///
    /// 创建员工的个人信息，包括姓名、个人电话、邮箱、联系地址、政治面貌、户口信息等
    ///
    /// - 非必填字段，不传时默认为空
    ///
    /// doc: <https://open.larkoffice.com/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/person/create>
    ///
    /// new doc: <https://open.larkoffice.com/document/server-docs/corehr-v1/employee/person/create-2>
    ///
    /// api url: <https://open.feishu.cn/document_portal/v1/document/get_detail?fullPath=%2Fserver-docs%2Fcorehr-v1%2Femployee%2Fperson%2Fcreate-2>
    pub async fn create_core_hr_person(
        &self,
        req: CreateCoreHrPersonReq,
    ) -> Result<(CreateCoreHrPersonResp, CommonResponse), Error> {
        self.create_core_hr_person_with_opt(req, Default::default())
            .await
    }

    /// 参见 [create_core_hr_person](#method.create_core_hr_person) 函数
    pub async fn create_core_hr_person_with_opt(
        &self,
        req: CreateCoreHrPersonReq,
        method_option: MethodOption,
    ) -> Result<(CreateCoreHrPersonResp, CommonResponse), Error> {
        #[cfg(feature = "test-util")]
        {
            if let Some(f) = self.mock().get_mock_create_core_hr_person(&req) {
                tracing::info!("[lark] CoreHr#CreateCoreHrPerson **mocking** api");
                return f(req);
            }
        }

        tracing::info!("[lark] CoreHr#CreateCoreHrPerson call api");

        let req = ApiRequest {
            scope: "CoreHr",
            api: "CreateCoreHrPerson",
            method: http::Method::POST,
            url: String::new() + self.cli.open_base_url.as_ref() + "/open-apis/corehr/v2/persons",
            param_data: req.gen_param(),
            method_option,
            need_tenant_access_token: true,
            ..Default::default()
        };

        let (resp, common_resp): (CreateCoreHrPersonRespInner, _) = self.cli.do_req(req).await?;
        let data = match resp.data {
            Some(data) => data,
            None => {
                return Err(Error::ErrResponse(
                    anyhow::anyhow!("missing response data"),
                    common_resp,
                ));
            }
        };
        Ok((data, common_resp))
    }
}

#[derive(Debug, Serialize, Deserialize, Clone, Default, lark_bot_sdk_macros::ApiReqParams)]
pub struct CreateCoreHrPersonReq {
    /// 操作的唯一标识，用于幂等的进行更新操作，格式为标准的 UUIDV4。此值为空表示将发起一次新的请求，此值非空表示幂等的进行更新操作。
    ///
    /// **示例值**: ""fe599b60-450f-46ff-b2ef-9f6675625b97""
    #[api(
        kind = "query",
        name = "client_token",
        v_type = "var",
        option = "false"
    )]
    pub client_token: String,
    /// 姓名列表，当用于[【创建雇佣】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/employment/create) 的离职重聘时，该字段必填
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写法定姓名信息(corehr:person.legal_name:write)
    #[api(kind = "body", name = "name_list")]
    pub name_list: Vec<Option<PersonNameSubReq>>,
    /// 性别，枚举值 api_name 可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口查询，查询参数如下：
    ///
    /// - object_api_name = "person"
    ///
    /// - custom_api_name = "gender"
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写性别信息(corehr:person.gender:write)
    #[api(kind = "body", name = "gender")]
    pub gender: Option<EnumSubReq>,
    /// 出生日期
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写生日信息(corehr:person.date_of_birth:write)
    ///
    /// **示例值**: "2020-01-01"
    #[api(kind = "body", name = "date_of_birth")]
    pub date_of_birth: Option<String>,
    /// 国籍 ID，可通过[【查询国籍信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-nationality/search)接口查询
    ///
    /// **示例值**: "6862995757234914821"
    #[api(kind = "body", name = "nationality_id_v2")]
    pub nationality_id_v2: Option<String>,
    /// 民族 / 种族，枚举值 api_name 可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口查询，查询参数如下：
    ///
    /// - object_api_name = "person"
    ///
    /// - custom_api_name = "race"
    #[api(kind = "body", name = "race")]
    pub race: Option<EnumSubReq>,
    /// 婚姻状况，枚举值 api_name 可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口查询，查询参数如下：
    ///
    /// - object_api_name = "person"
    ///
    /// - custom_api_name = "marital_status"
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写婚姻状况信息(corehr:person.marital_status:write)
    #[api(kind = "body", name = "marital_status")]
    pub marital_status: Option<EnumSubReq>,
    /// 电话列表
    #[api(kind = "body", name = "phone_list")]
    pub phone_list: Vec<Option<PhoneSubReq>>,
    /// 地址列表
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读取个人地址信息(corehr:person.address:write)
    #[api(kind = "body", name = "address_list")]
    pub address_list: Vec<Option<AddressSubReq>>,
    /// 邮箱列表
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写个人邮箱信息(corehr:person.email:write)
    #[api(kind = "body", name = "email_list")]
    pub email_list: Vec<Option<EmailSubReq>>,
    /// 工作经历列表
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写工作履历信息(corehr:person.work_experience:write)
    #[api(kind = "body", name = "work_experience_list")]
    pub work_experience_list: Vec<Option<WorkExperienceInfoSubReq>>,
    /// 教育经历列表
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写教育经历信息(corehr:person.education:write)
    #[api(kind = "body", name = "education_list")]
    pub education_list: Vec<Option<EducationSubReq>>,
    /// 银行账户
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写银行账号列表信息(corehr:person.bank_account:write)
    #[api(kind = "body", name = "bank_account_list")]
    pub bank_account_list: Vec<Option<BankAccountSubReq>>,
    /// 证件列表
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写证件信息(corehr:person.national_id:write)
    #[api(kind = "body", name = "national_id_list")]
    pub national_id_list: Vec<Option<NationalIdSubReq>>,
    /// 家庭成员列表
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写家庭成员信息(corehr:person.dependent:write)
    #[api(kind = "body", name = "dependent_list")]
    pub dependent_list: Vec<Option<DependentSubReq>>,
    /// 紧急联系人列表
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写紧急联系人信息(corehr:person.emergency_contact:write)
    #[api(kind = "body", name = "emergency_contact_list")]
    pub emergency_contact_list: Vec<Option<EmergencyContactSubReq>>,
    /// 参加工作日期
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写参加工作日期(corehr:person.date_entered_workforce:write)
    ///
    /// **示例值**: "2020-10-01"
    #[api(kind = "body", name = "date_entered_workforce")]
    pub date_entered_workforce: Option<String>,
    /// 头像资源的 ID
    ///
    /// **示例值**: "dfysuc8x76dsfsw"
    #[api(kind = "body", name = "profile_image_id")]
    pub profile_image_id: Option<String>,
    /// 个人资料附件
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写个人资料信息(corehr:person.personal_profile:write)
    #[api(kind = "body", name = "personal_profile")]
    pub personal_profile: Vec<Option<PersonalProfileSubReq>>,
    /// 籍贯 ID，可通过[【查询省份/主要行政区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/subdivision/get)接口查询
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写籍贯信息(corehr:person.native_region:write)
    ///
    /// **示例值**: "6863326262618752111"
    #[api(kind = "body", name = "native_region")]
    pub native_region: Option<String>,
    /// 户口类型，可通过文档 [【枚举常量介绍】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)户口类型（hukou_type）枚举定义获得
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写户口信息(corehr:person.hukou:write)
    #[api(kind = "body", name = "hukou_type")]
    pub hukou_type: Option<EnumSubReq>,
    /// 户口所在地
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写户口信息(corehr:person.hukou:write)
    ///
    /// **示例值**: "山东省平阴县"
    #[api(kind = "body", name = "hukou_location")]
    pub hukou_location: Option<String>,
    /// 政治面貌，可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)政治面貌（political_affiliation）枚举定义获得
    #[api(kind = "body", name = "political_affiliations")]
    pub political_affiliations: Vec<Option<EnumSubReq>>,
    /// 人才ID，可通过[【获取人才列表】](https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent/list)获取
    ///
    /// **示例值**: "6863326262618752123"
    #[api(kind = "body", name = "talent_id")]
    pub talent_id: Option<String>,
    /// 自定义字段
    #[api(kind = "body", name = "custom_fields")]
    pub custom_fields: Vec<Option<CustomFieldDataSubReq>>,
    /// 出生国家/地区
    ///
    /// **示例值**: "中国"
    #[api(kind = "body", name = "born_country_region")]
    pub born_country_region: Option<String>,
    /// 是否残疾
    ///
    /// **示例值**: "true"
    #[api(kind = "body", name = "is_disabled")]
    pub is_disabled: Option<bool>,
    /// 残疾证号
    ///
    /// **示例值**: "1110000"
    #[api(kind = "body", name = "disable_card_number")]
    pub disable_card_number: Option<String>,
    /// 是否烈属
    ///
    /// **示例值**: "true"
    #[api(kind = "body", name = "is_martyr_family")]
    pub is_martyr_family: Option<bool>,
    /// 烈属证号
    ///
    /// **示例值**: "1110000"
    #[api(kind = "body", name = "martyr_card_number")]
    pub martyr_card_number: Option<String>,
    /// 是否孤老
    ///
    /// **示例值**: "true"
    #[api(kind = "body", name = "is_old_alone")]
    pub is_old_alone: Option<bool>,
    /// 居民身份信息
    ///
    /// **示例值**: "6863326262618752123"
    #[api(kind = "body", name = "resident_taxes")]
    pub resident_taxes: Vec<Option<ResidentTaxSubReq>>,
    /// 首次入境日期
    ///
    /// **示例值**: "2021-01-02"
    #[api(kind = "body", name = "first_entry_time")]
    pub first_entry_time: Option<String>,
    /// 预计离境日期
    ///
    /// **示例值**: "2022-01-02"
    #[api(kind = "body", name = "leave_time")]
    pub leave_time: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EnumSubReq {
    /// 枚举值
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "male"
    #[serde(
        rename = "enum_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub enum_name: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PersonNameSubReq {
    /// 姓 - 本地文字
    ///
    /// **示例值**: "黄"
    #[serde(
        rename = "local_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_primary: Option<String>,
    /// 名 - 本地文字
    ///
    /// **示例值**: "四"
    #[serde(
        rename = "local_first_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_first_name: Option<String>,
    /// 国家/地区，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 姓名类型，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)姓名类型（name_type）枚举定义获得
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "name_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name_type: EnumSubReq,
    /// 名 - 第二本地文字
    ///
    /// **示例值**: "五"
    #[serde(
        rename = "local_first_name_2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_first_name_2: Option<String>,
    /// 姓 - 第二本地文字
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "local_primary_2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_primary_2: Option<String>,
    /// 补充姓名类型，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：additional_name_type
    ///
    /// - object_api_name：person_name
    #[serde(
        rename = "additional_name_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub additional_name_type: Option<EnumSubReq>,
    /// 名
    ///
    /// **示例值**: "帅"
    #[serde(
        rename = "first_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub first_name: Option<String>,
    /// 全名
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "full_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub full_name: Option<String>,
    /// 姓氏称谓
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "hereditary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub hereditary: Option<String>,
    /// 自定义姓名（未传入时，姓名将默认根据所属国家 / 地区规则对相关姓、名字段拼接）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "custom_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_name: Option<String>,
    /// 本地文字的自定义姓名（未传入时，本地文字的姓名将默认根据所属国家 / 地区规则对本地文字的相关姓、名字段拼接）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "custom_local_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_local_name: Option<String>,
    /// 中间名
    ///
    /// **示例值**: "大"
    #[serde(
        rename = "middle_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub middle_name: Option<String>,
    /// 姓
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "name_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name_primary: Option<String>,
    /// 第二姓氏
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "secondary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub secondary: Option<String>,
    /// 尊称，可通过 [【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：social
    ///
    /// - object_api_name：person_name
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "social",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub social: Option<EnumSubReq>,
    /// 婚后姓氏
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "tertiary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub tertiary: Option<String>,
    /// 头衔，可通过 [【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：social
    ///
    /// - object_api_name：person_name
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "title",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub title: Option<EnumSubReq>,
    /// 本地中间名
    ///
    /// **示例值**: "大"
    #[serde(
        rename = "local_middle_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_middle_name: Option<String>,
    /// 第二姓氏 - 本地文字
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "local_secondary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_secondary: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PhoneSubReq {
    /// 国家区号，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，按如下参数查询即可：
    ///
    /// - custom_api_name：international_area_code
    ///
    /// - object_api_name：phone
    #[serde(
        rename = "international_area_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub international_area_code: Option<EnumSubReq>,
    /// 电话号码
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "010-12345678"
    #[serde(
        rename = "phone_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_number: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct AddressSubReq {
    /// 地址 ID，首次创建可不填
    ///
    /// **示例值**: "6989822217869624863"
    #[serde(
        rename = "address_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_id: Option<String>,
    /// 国家/地区，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 主要行政区，可通过[【查询省份/主要行政区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region_subdivision/search)获取
    ///
    /// **示例值**: "6863326815667095047"
    #[serde(
        rename = "region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub region_id: Option<String>,
    /// 地址行 1
    ///
    /// **示例值**: "丹佛测试地址-纽埃时区"
    #[serde(
        rename = "address_line1",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line1: Option<String>,
    /// 地址行 2
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "address_line2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line2: Option<String>,
    /// 地址行 3
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "address_line3",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line3: Option<String>,
    /// 地址行 4
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line4",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line4: Option<String>,
    /// 地址行 5
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line5",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line5: Option<String>,
    /// 地址行 6
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line6",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line6: Option<String>,
    /// 地址行 7
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line7",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line7: Option<String>,
    /// 地址行 8
    ///
    /// **示例值**: "rafSu"
    #[serde(
        rename = "address_line8",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line8: Option<String>,
    /// 地址行 9
    ///
    /// **示例值**: "McPRG"
    #[serde(
        rename = "address_line9",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line9: Option<String>,
    /// 地址行 1（非拉丁语系的本地文字）
    ///
    /// **示例值**: "丹佛测试地址-纽埃时区"
    #[serde(
        rename = "local_address_line1",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line1: Option<String>,
    /// 地址行 2（非拉丁语系的本地文字）
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "local_address_line2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line2: Option<String>,
    /// 地址行 3（非拉丁语系的本地文字）
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "local_address_line3",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line3: Option<String>,
    /// 地址行 4（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line4",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line4: Option<String>,
    /// 地址行 5（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line5",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line5: Option<String>,
    /// 地址行 6（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line6",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line6: Option<String>,
    /// 地址行 7（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line7",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line7: Option<String>,
    /// 地址行 8（非拉丁语系的本地文字）
    ///
    /// **示例值**: "rafSu"
    #[serde(
        rename = "local_address_line8",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line8: Option<String>,
    /// 地址行 9（非拉丁语系的本地文字）
    ///
    /// **示例值**: "McPRG"
    #[serde(
        rename = "local_address_line9",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line9: Option<String>,
    /// 邮政编码
    ///
    /// **示例值**: "611530"
    #[serde(
        rename = "postal_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub postal_code: Option<String>,
    /// 地址类型，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)地址类型（address_type）枚举定义获得
    ///
    /// 默认：home_address
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "address_type_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_type_list: Vec<Option<EnumSubReq>>,
    /// 主要地址，默认 false
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_primary: bool,
    /// 公开地址，默认 true
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_public",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_public: bool,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<Option<CustomFieldDataSubReq>>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EmailSubReq {
    /// 邮箱地址
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "1234567@example.feishu.cn"
    #[serde(
        rename = "email",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email: String,
    /// 是否为主要邮箱，默认 true
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_primary: Option<bool>,
    /// 是否为公开邮箱，默认 true
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_public",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_public: Option<bool>,
    /// 邮箱用途，可通过[【枚举常量介绍】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)邮箱用途（email_usage）枚举定义获得
    ///
    /// - 请勿填写 work 枚举，工作邮箱在雇佣信息中操作
    ///
    /// - 默认：emergency_contact
    #[serde(
        rename = "email_usage",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email_usage: Option<EnumSubReq>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct WorkExperienceInfoSubReq {
    /// 公司 / 组织
    #[serde(
        rename = "company_organization",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub company_organization: Vec<Option<I18nSubReq>>,
    /// 部门
    #[serde(
        rename = "department",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub department: Vec<Option<I18nSubReq>>,
    /// 岗位
    #[serde(
        rename = "job",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job: Vec<Option<I18nSubReq>>,
    /// 工作描述
    #[serde(
        rename = "description",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub description: Vec<Option<I18nSubReq>>,
    /// 开始日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_date: Option<String>,
    /// 结束日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_date: Option<String>,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<Option<CustomFieldDataSubReq>>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EducationSubReq {
    /// 学校
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "school",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub school: Vec<Option<I18nSubReq>>,
    /// 学历，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)学历（level_of_education）枚举定义获得
    #[serde(
        rename = "level_of_education",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub level_of_education: Option<EnumSubReq>,
    /// 开始日期
    ///
    /// **示例值**: "2011-09-01"
    #[serde(
        rename = "start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_date: Option<String>,
    /// 结束日期
    ///
    /// **示例值**: "2015-06-30"
    #[serde(
        rename = "end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_date: Option<String>,
    /// 专业名称
    #[serde(
        rename = "field_of_study",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_of_study: Vec<Option<I18nSubReq>>,
    /// 学位，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)学位（degree）枚举定义获得
    #[serde(
        rename = "degree",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub degree: Option<EnumSubReq>,
    /// 学校名称，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：school_name
    ///
    /// - object_api_name：education
    #[serde(
        rename = "school_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub school_name: Option<EnumSubReq>,
    /// 专业名称，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：field_of_study_name
    ///
    /// - object_api_name：education
    #[serde(
        rename = "field_of_study_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_of_study_name: Option<EnumSubReq>,
    /// 国家/地区ID，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取
    ///
    /// **示例值**: "1"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: Option<String>,
    /// 预期结束日期
    ///
    /// **示例值**: "2011-09-01"
    #[serde(
        rename = "expected_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub expected_end_date: Option<String>,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<Option<CustomFieldDataSubReq>>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct BankAccountSubReq {
    /// 银行名称
    ///
    /// **示例值**: "中国农业银行"
    #[serde(
        rename = "bank_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_name: Option<String>,
    /// 银行账号
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6231200000001223"
    #[serde(
        rename = "bank_account_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_number: String,
    /// 开户人姓名
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "孟十五"
    #[serde(
        rename = "account_holder",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub account_holder: String,
    /// 支行名称
    ///
    /// **示例值**: "中国农业银行支行"
    #[serde(
        rename = "branch_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub branch_name: Option<String>,
    /// 银行 ID，可通过[【查询银行信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-bank/search)接口查询获得
    ///
    /// **示例值**: "MDBH00000001"
    #[serde(
        rename = "bank_id_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_id_v2: Option<String>,
    /// 支行 ID，要求必须为填入银行的支行，可通过[【查询支行信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-bank_branch/search)接口查询获得
    ///
    /// **示例值**: "MDBK00000017"
    #[serde(
        rename = "branch_id_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub branch_id_v2: Option<String>,
    /// 国家/地区ID，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取
    ///
    /// **示例值**: "12"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: Option<String>,
    /// 银行卡用途，可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)银行卡用途（Bank Account Usage）枚举定义获得
    #[serde(
        rename = "bank_account_usage",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_usage: Vec<Option<EnumSubReq>>,
    /// 银行卡类型，可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)银行卡类型（Bank Account Type）枚举定义获得
    #[serde(
        rename = "bank_account_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_type: Option<EnumSubReq>,
    /// 货币id
    ///
    /// **示例值**: "12QueryCountryRegionSubdivisionDataReq"
    #[serde(
        rename = "currency_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub currency_id: Option<String>,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<Option<CustomFieldDataSubReq>>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct NationalIdSubReq {
    /// 国家证件类型，可通过[【批量查询国家证件类型】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/national_id_type/list)获得
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6863330041896371725"
    #[serde(
        rename = "national_id_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_type_id: String,
    /// 证件号码
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "1231131333"
    #[serde(
        rename = "national_id_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_number: String,
    /// 证件签发日期
    ///
    /// **示例值**: "2020-04-01"
    #[serde(
        rename = "issue_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub issue_date: Option<String>,
    /// 证件到期日期
    ///
    /// **示例值**: "2020-05-21"
    #[serde(
        rename = "expiration_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub expiration_date: Option<String>,
    /// 国家/地区ID，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 证件签发机构
    ///
    /// **示例值**: "北京市公安局"
    #[serde(
        rename = "issued_by",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub issued_by: Option<String>,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<Option<CustomFieldDataSubReq>>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct DependentSubReq {
    /// 亲属关系，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)亲属关系（relationship）枚举定义获得
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "relationship",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub relationship: EnumSubReq,
    /// 性别，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)性别（gender）枚举定义获得
    #[serde(
        rename = "gender",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub gender: Option<EnumSubReq>,
    /// 生日
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "date_of_birth",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub date_of_birth: Option<String>,
    /// 国籍 ID，可通过[【查询国籍信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-nationality/search)接口查询
    ///
    /// **示例值**: "6862995745046267401"
    #[serde(
        rename = "nationality_id_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub nationality_id_v2: Option<String>,
    /// 证件号码
    #[serde(
        rename = "national_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_list: Vec<Option<NationalIdSubReq>>,
    /// 配偶工作状态，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：spouses_working_status
    ///
    /// - object_api_name：dependent
    #[serde(
        rename = "spouses_working_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub spouses_working_status: Option<EnumSubReq>,
    /// 包含家属医疗保险
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_this_person_covered_by_health_insurance",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_this_person_covered_by_health_insurance: Option<bool>,
    /// 允许家属抵扣税款
    ///
    /// **示例值**: "false"
    #[serde(
        rename = "is_this_person_allowed_for_tax_deduction",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_this_person_allowed_for_tax_deduction: Option<bool>,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<Option<CustomFieldDataSubReq>>,
    /// 家庭成员姓名
    ///
    /// **示例值**: "张三"
    #[serde(
        rename = "dependent_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub dependent_name: Option<String>,
    /// 工作单位
    ///
    /// **示例值**: "海淀区交警大队"
    #[serde(
        rename = "employer",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employer: Option<String>,
    /// 岗位
    ///
    /// **示例值**: "保安"
    #[serde(
        rename = "job",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job: Option<String>,
    /// 电话
    #[serde(
        rename = "phone",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone: Option<PhoneSubReq>,
    /// 联系地址
    #[serde(
        rename = "address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address: Option<AddressSubReq>,
    /// 出生证明
    #[serde(
        rename = "birth_certificate_of_child",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub birth_certificate_of_child: Vec<Option<FileSubReq>>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EmergencyContactSubReq {
    /// 姓名
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: Option<PersonNameSubReq>,
    /// 关系，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)亲属关系（relationship）枚举定义获取
    #[serde(
        rename = "relationship",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub relationship: Option<EnumSubReq>,
    /// 电话
    #[serde(
        rename = "phone_ist",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_ist: Vec<Option<PhoneSubReq>>,
    /// 法定姓名
    ///
    /// **示例值**: "张三"
    #[serde(
        rename = "legal_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub legal_name: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PersonalProfileSubReq {
    /// 资料类型，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：profile_type
    ///
    /// - object_api_name：personal_profile
    #[serde(
        rename = "personal_profile_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub personal_profile_type: Option<EnumSubReq>,
    /// 上传文件列表
    #[serde(
        rename = "files",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub files: Vec<Option<FileSubReq>>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct CustomFieldDataSubReq {
    /// 自定义字段 apiname，即自定义字段的唯一标识
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "name"
    #[serde(
        rename = "custom_api_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_api_name: String,
    /// 字段值，是 json 转义后的字符串，根据元数据定义不同，字段格式不同。使用方式可参考[【操作手册】如何通过 OpenAPI 维护自定义字段](https://feishu.feishu.cn/docx/QlUudBfCtosWMbxx3vxcOFDknn7)
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "\"231\""
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct ResidentTaxSubReq {
    /// 年度
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "2023"
    #[serde(
        rename = "year_resident_tax",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub year_resident_tax: String,
    /// 居民身份，枚举值 api_name 可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口查询，查询参数如下： - object_api_name = "resident_tax" - custom_api_name = "resident_status"
    #[serde(
        rename = "resident_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub resident_status: Option<EnumSubReq>,
    /// 国家/地区，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)接口查询
    ///
    /// **示例值**: "中国"
    #[serde(
        rename = "tax_country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub tax_country_region_id: Option<String>,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<Option<ObjectFieldDataSubReq>>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct I18nSubReq {
    /// 语言
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "zh-CN"
    #[serde(
        rename = "lang",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub lang: String,
    /// 内容
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "张三"
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct FileSubReq {
    /// 上传文件ID，可通过[【上传文件】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/person/upload)获取
    ///
    /// **示例值**: "150018109586e8ea745e47ae8feb3722dbe1d03a181336393633393133303431393831343930373235150200"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct ObjectFieldDataSubReq {
    /// 字段名
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "name"
    #[serde(
        rename = "field_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_name: String,
    /// 字段值，是json转义后的字符串，根据元数据定义不同，字段格式不同(123, 123.23, true, [\"id1\",\"id2\], 2006-01-02 15:04:05])
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "Sandy"
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, lark_bot_sdk_macros::ApiBaseResp)]
struct CreateCoreHrPersonRespInner {
    #[serde(flatten)]
    data: Option<CreateCoreHrPersonResp>,
    #[serde(flatten)]
    base: BaseResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
pub struct CreateCoreHrPersonResp {
    /// \-
    #[serde(
        rename = "data",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub data: DataSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct DataSubResp {
    /// 个人信息
    #[serde(
        rename = "person",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub person: PersonInfoSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PersonInfoSubResp {
    /// 个人信息 ID，可通过[【批量查询员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/batch_get)获取详细信息
    ///
    /// **示例值**: "6919733936050406926"
    #[serde(
        rename = "person_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub person_id: String,
    /// 个人电话
    ///
    /// **示例值**: "13649211111"
    #[serde(
        rename = "phone_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_number: String,
    /// 法定姓名
    ///
    /// **示例值**: "张三"
    #[serde(
        rename = "legal_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub legal_name: String,
    /// 常用名
    ///
    /// **示例值**: "刘梓新(Henry)"
    #[serde(
        rename = "preferred_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub preferred_name: String,
    /// 常用本地全名
    ///
    /// **示例值**: "刘梓新"
    #[serde(
        rename = "preferred_local_full_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub preferred_local_full_name: String,
    /// 常用英文全名
    ///
    /// **示例值**: "Henry"
    #[serde(
        rename = "preferred_english_full_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub preferred_english_full_name: String,
    /// 姓名列表
    #[serde(
        rename = "name_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name_list: Vec<PersonNameSubResp>,
    /// 性别，枚举值可查询[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可： - custom_api_name：gender - object_api_name：person
    #[serde(
        rename = "gender",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub gender: EnumSubResp,
    /// 出生日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "date_of_birth",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub date_of_birth: String,
    /// 国籍 ID，可通过[【查询国籍信息】](/ssl:ttdo/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-nationality/search)接口查询
    ///
    /// **示例值**: "6862995757234914821"
    #[serde(
        rename = "nationality_id_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub nationality_id_v2: String,
    /// 民族 / 种族，枚举值 api_name 可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口查询，查询参数如下：
    ///
    /// - object_api_name = "person"
    ///
    /// - custom_api_name = "race"
    #[serde(
        rename = "race",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub race: EnumSubResp,
    /// 婚姻状况，枚举值 api_name 可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口查询，查询参数如下：
    ///
    /// - object_api_name = "person"
    ///
    /// - custom_api_name = "marital_status"
    ///
    /// <br><b>字段权限要求：</b>
    ///
    /// <br>读写婚姻状况信息(corehr:person.marital_status:write)
    #[serde(
        rename = "marital_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub marital_status: EnumSubResp,
    /// 电话列表
    #[serde(
        rename = "phone_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_list: Vec<PhoneSubResp>,
    /// 地址列表
    #[serde(
        rename = "address_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_list: Vec<AddressSubResp>,
    /// 邮箱列表
    #[serde(
        rename = "email_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email_list: Vec<EmailSubResp>,
    /// 工作经历列表
    #[serde(
        rename = "work_experience_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub work_experience_list: Vec<WorkExperienceInfoSubResp>,
    /// 教育经历列表
    #[serde(
        rename = "education_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub education_list: Vec<EducationSubResp>,
    /// 银行账户
    #[serde(
        rename = "bank_account_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_list: Vec<BankAccountSubResp>,
    /// 证件
    #[serde(
        rename = "national_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_list: Vec<NationalIdSubResp>,
    /// 家庭成员列表
    #[serde(
        rename = "dependent_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub dependent_list: Vec<DependentSubResp>,
    /// 紧急联系人列表
    #[serde(
        rename = "emergency_contact_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub emergency_contact_list: Vec<EmergencyContactSubResp>,
    /// 参加工作日期
    ///
    /// **示例值**: "2020-10-01"
    #[serde(
        rename = "date_entered_workforce",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub date_entered_workforce: String,
    /// 工龄
    ///
    /// **示例值**: "2"
    #[serde(
        rename = "working_years",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub working_years: i64,
    /// 头像资源的 ID
    ///
    /// **示例值**: "dfysuc8x76dsfsw"
    #[serde(
        rename = "profile_image_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub profile_image_id: String,
    /// 邮箱地址
    ///
    /// **示例值**: "test@example.feishu.cn"
    #[serde(
        rename = "email_address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email_address: String,
    /// 年龄
    ///
    /// **示例值**: "22"
    #[serde(
        rename = "age",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub age: i64,
    /// 最高学历教育经历
    #[serde(
        rename = "highest_level_of_education",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub highest_level_of_education: EducationSubResp,
    /// 最高学位教育经历
    #[serde(
        rename = "highest_degree_of_education",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub highest_degree_of_education: EducationSubResp,
    /// 个人资料附件
    #[serde(
        rename = "personal_profile",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub personal_profile: Vec<PersonalProfileSubResp>,
    /// 籍贯 ID，详细信息可通过[【查询省份/行政区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region_subdivision/search)接口查询获得
    ///
    /// **示例值**: "6863326262618752111"
    #[serde(
        rename = "native_region",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub native_region: String,
    /// 户口类型，可通过文档 [【枚举常量介绍】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)户口类型（hukou_type）枚举定义获得
    #[serde(
        rename = "hukou_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub hukou_type: EnumSubResp,
    /// 户口所在地
    ///
    /// **示例值**: "山东省平阴县"
    #[serde(
        rename = "hukou_location",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub hukou_location: String,
    /// 人才 ID
    ///
    /// **示例值**: "6863326262618752123"
    #[serde(
        rename = "talent_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub talent_id: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
    /// 居民身份证件号码
    ///
    /// **示例值**: "11010000000000"
    #[serde(
        rename = "national_id_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_number: String,
    /// 家庭地址
    ///
    /// **示例值**: "6863326262618752123"
    #[serde(
        rename = "family_address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub family_address: String,
    /// 出生国家/地区
    ///
    /// **示例值**: "中国"
    #[serde(
        rename = "born_country_region",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub born_country_region: String,
    /// 是否残疾
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_disabled",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_disabled: bool,
    /// 残疾证号
    ///
    /// **示例值**: "1110000"
    #[serde(
        rename = "disable_card_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub disable_card_number: String,
    /// 是否烈属
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_martyr_family",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_martyr_family: bool,
    /// 烈属证号
    ///
    /// **示例值**: "1110000"
    #[serde(
        rename = "martyr_card_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub martyr_card_number: String,
    /// 是否孤老
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_old_alone",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_old_alone: bool,
    /// 居民身份信息
    ///
    /// **示例值**: "6863326262618752123"
    #[serde(
        rename = "resident_taxes",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub resident_taxes: Vec<ResidentTaxSubResp>,
    /// 首次入境日期
    ///
    /// **示例值**: "2021-01-02"
    #[serde(
        rename = "first_entry_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub first_entry_time: String,
    /// 预计离境日期
    ///
    /// **示例值**: "2022-01-02"
    #[serde(
        rename = "leave_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub leave_time: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EnumSubResp {
    /// 枚举值
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "male"
    #[serde(
        rename = "enum_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub enum_name: String,
    /// 枚举多语展示
    #[serde(
        rename = "display",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub display: Vec<I18nSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EducationSubResp {
    /// 学校
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "school",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub school: Vec<I18nSubResp>,
    /// 学历，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)学历（level_of_education）枚举定义获得
    #[serde(
        rename = "level_of_education",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub level_of_education: EnumSubResp,
    /// 开始日期
    ///
    /// **示例值**: "2011-09-01"
    #[serde(
        rename = "start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_date: String,
    /// 结束日期
    ///
    /// **示例值**: "2015-06-30"
    #[serde(
        rename = "end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_date: String,
    /// 专业
    #[serde(
        rename = "field_of_study",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_of_study: Vec<I18nSubResp>,
    /// 学位，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)学位（degree）枚举定义获得
    #[serde(
        rename = "degree",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub degree: EnumSubResp,
    /// 学校名称，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：school_name
    ///
    /// - object_api_name：education
    #[serde(
        rename = "school_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub school_name: EnumSubResp,
    /// 专业名称，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：field_of_study_name
    ///
    /// - object_api_name：education
    #[serde(
        rename = "field_of_study_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_of_study_name: EnumSubResp,
    /// 国家地区 ID，详细信息可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)接口查询获得
    ///
    /// **示例值**: "1"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 预期结束日期
    ///
    /// **示例值**: "2011-09-01"
    #[serde(
        rename = "expected_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub expected_end_date: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PersonNameSubResp {
    /// 姓 - 本地文字
    ///
    /// **示例值**: "黄"
    #[serde(
        rename = "local_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_primary: String,
    /// 名 - 本地文字
    ///
    /// **示例值**: "四"
    #[serde(
        rename = "local_first_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_first_name: String,
    /// 国家 / 地区，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取详细信息
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 姓名类型，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)姓名类型（name_type）枚举定义获得
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "name_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name_type: EnumSubResp,
    /// 名 - 第二本地文字
    ///
    /// **示例值**: "五"
    #[serde(
        rename = "local_first_name_2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_first_name_2: String,
    /// 姓 - 第二本地文字
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "local_primary_2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_primary_2: String,
    /// 补充姓名类型，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：additional_name_type
    ///
    /// - object_api_name：person_name
    #[serde(
        rename = "additional_name_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub additional_name_type: EnumSubResp,
    /// 名
    ///
    /// **示例值**: "帅"
    #[serde(
        rename = "first_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub first_name: String,
    /// 全名
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "full_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub full_name: String,
    /// 姓氏称谓
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "hereditary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub hereditary: String,
    /// 自定义姓名（未传入时，姓名将默认根据所属国家 / 地区规则对相关姓、名字段拼接）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "custom_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_name: String,
    /// 本地文字的自定义姓名（未传入时，本地文字的姓名将默认根据所属国家 / 地区规则对本地文字的相关姓、名字段拼接）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "custom_local_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_local_name: String,
    /// 中间名
    ///
    /// **示例值**: "大"
    #[serde(
        rename = "middle_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub middle_name: String,
    /// 姓
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "name_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name_primary: String,
    /// 第二姓氏
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "secondary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub secondary: String,
    /// 尊称，可通过 [【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：social
    ///
    /// - object_api_name：person_name
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "social",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub social: EnumSubResp,
    /// 婚后姓氏
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "tertiary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub tertiary: String,
    /// 头衔，可通过 [【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：social
    ///
    /// - object_api_name：person_name
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "title",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub title: EnumSubResp,
    /// 本地中间名
    ///
    /// **示例值**: "大"
    #[serde(
        rename = "local_middle_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_middle_name: String,
    /// 第二姓氏 - 本地文字
    ///
    /// **示例值**: "王"
    #[serde(
        rename = "local_secondary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_secondary: String,
    /// 展示姓名（本地和西方文字）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "display_name_local_and_western_script",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub display_name_local_and_western_script: String,
    /// 展示姓名（本地文字）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "display_name_local_script",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub display_name_local_script: String,
    /// 展示姓名（西方文字）
    ///
    /// **示例值**: "王大帅"
    #[serde(
        rename = "display_name_western_script",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub display_name_western_script: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PhoneSubResp {
    /// 国家区号，枚举值 api_name 可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口查询，查询参数如下：
    ///
    /// - object_api_name = "phone"
    ///
    /// - custom_api_name = "international_area_code"
    #[serde(
        rename = "international_area_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub international_area_code: EnumSubResp,
    /// 电话号码
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "010-12345678"
    #[serde(
        rename = "phone_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_number: String,
    /// 完整电话号码
    ///
    /// **示例值**: "+86 010-12345678"
    #[serde(
        rename = "formatted_phone_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub formatted_phone_number: String,
    /// 设备类型，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)设备类型（device_type）枚举定义获得
    #[serde(
        rename = "device_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub device_type: EnumSubResp,
    /// 电话用途，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)电话用途（phone_usage）枚举定义获得
    #[serde(
        rename = "phone_usage",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_usage: EnumSubResp,
    /// 主要电话
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_primary: bool,
    /// 公开电话
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_public",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_public: bool,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct AddressSubResp {
    /// 完整地址（本地文字）
    ///
    /// **示例值**: "中国北京北京"
    #[serde(
        rename = "full_address_local_script",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub full_address_local_script: String,
    /// 完整地址（西方文字）
    ///
    /// **示例值**: "Beijing, Beijing, China,"
    #[serde(
        rename = "full_address_western_script",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub full_address_western_script: String,
    /// 地址 ID，可用于[【更新个人信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/person/patch)联系地址更新
    ///
    /// **示例值**: "6989822217869624863"
    #[serde(
        rename = "address_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_id: String,
    /// 国家 / 地区，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)查询
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 主要行政区，可通过[【查询省份/主要行政区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region_subdivision/search)查询
    ///
    /// **示例值**: "6863326815667095047"
    #[serde(
        rename = "region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub region_id: String,
    /// 地址行 1
    ///
    /// **示例值**: "丹佛测试地址-纽埃时区"
    #[serde(
        rename = "address_line1",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line1: String,
    /// 地址行 2
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "address_line2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line2: String,
    /// 地址行 3
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "address_line3",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line3: String,
    /// 地址行 4
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line4",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line4: String,
    /// 地址行 5
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line5",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line5: String,
    /// 地址行 6
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line6",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line6: String,
    /// 地址行 7
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "address_line7",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line7: String,
    /// 地址行 8
    ///
    /// **示例值**: "rafSu"
    #[serde(
        rename = "address_line8",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line8: String,
    /// 地址行 9
    ///
    /// **示例值**: "McPRG"
    #[serde(
        rename = "address_line9",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_line9: String,
    /// 地址行 1（非拉丁语系的本地文字）
    ///
    /// **示例值**: "丹佛测试地址-纽埃时区"
    #[serde(
        rename = "local_address_line1",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line1: String,
    /// 地址行 2（非拉丁语系的本地文字）
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "local_address_line2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line2: String,
    /// 地址行 3（非拉丁语系的本地文字）
    ///
    /// **示例值**: "PoewH"
    #[serde(
        rename = "local_address_line3",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line3: String,
    /// 地址行 4（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line4",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line4: String,
    /// 地址行 5（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line5",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line5: String,
    /// 地址行 6（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line6",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line6: String,
    /// 地址行 7（非拉丁语系的本地文字）
    ///
    /// **示例值**: "jmwJc"
    #[serde(
        rename = "local_address_line7",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line7: String,
    /// 地址行 8（非拉丁语系的本地文字）
    ///
    /// **示例值**: "rafSu"
    #[serde(
        rename = "local_address_line8",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line8: String,
    /// 地址行 9（非拉丁语系的本地文字）
    ///
    /// **示例值**: "McPRG"
    #[serde(
        rename = "local_address_line9",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line9: String,
    /// 邮政编码
    ///
    /// **示例值**: "611530"
    #[serde(
        rename = "postal_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub postal_code: String,
    /// 地址类型，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)地址类型（address_type）枚举定义部分获得
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "address_type_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_type_list: Vec<EnumSubResp>,
    /// 主要地址
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_primary: bool,
    /// 公开地址
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_public",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_public: bool,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EmailSubResp {
    /// 邮箱地址
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "1234567@ example.feishu.cn"
    #[serde(
        rename = "email",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email: String,
    /// 是否为主要邮箱
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_primary: bool,
    /// 是否为公开邮箱
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_public",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_public: bool,
    /// 邮箱用途，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)邮箱用途（email_usage）枚举定义获得
    #[serde(
        rename = "email_usage",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email_usage: EnumSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct WorkExperienceInfoSubResp {
    /// 公司 / 组织
    #[serde(
        rename = "company_organization",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub company_organization: Vec<I18nSubResp>,
    /// 部门
    #[serde(
        rename = "department",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub department: Vec<I18nSubResp>,
    /// 岗位
    #[serde(
        rename = "job",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job: Vec<I18nSubResp>,
    /// 工作描述
    #[serde(
        rename = "description",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub description: Vec<I18nSubResp>,
    /// 开始日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_date: String,
    /// 结束日期
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_date: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct BankAccountSubResp {
    /// 银行名称
    ///
    /// **示例值**: "中国农业银行"
    #[serde(
        rename = "bank_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_name: String,
    /// 银行账号
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6231200000001223"
    #[serde(
        rename = "bank_account_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_number: String,
    /// 开户人姓名
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "孟十五"
    #[serde(
        rename = "account_holder",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub account_holder: String,
    /// 支行名称
    ///
    /// **示例值**: "中国农业银行支行"
    #[serde(
        rename = "branch_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub branch_name: String,
    /// 银行 ID，详细信息可通过[【查询银行信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-bank/search)接口查询获得
    ///
    /// **示例值**: "MDBH00000001"
    #[serde(
        rename = "bank_id_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_id_v2: String,
    /// 支行 ID，要求必须为填入银行的支行，详细信息可通过[【查询支行信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-bank_branch/search)接口查询获得
    ///
    /// **示例值**: "MDBK00000017"
    #[serde(
        rename = "branch_id_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub branch_id_v2: String,
    /// 国家/地区 ID，详细信息可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)接口查询获得
    ///
    /// **示例值**: "12"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 银行卡用途，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)银行卡用途（Bank Account Usage）枚举定义部分获得
    #[serde(
        rename = "bank_account_usage",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_usage: Vec<EnumSubResp>,
    /// 银行卡类型，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)银行卡类型（Bank Account Type）枚举定义部分获得
    #[serde(
        rename = "bank_account_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_type: EnumSubResp,
    /// 货币 ID，详细信息可通过[【查询货币信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-currency/search)接口查询获得
    ///
    /// **示例值**: "12QueryCountryRegionSubdivisionDataReq"
    #[serde(
        rename = "currency_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub currency_id: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct NationalIdSubResp {
    /// 国家证件类型，可通过[【查询单个国家证件类型】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/national_id_type/get)获取详细信息
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6863330041896371725"
    #[serde(
        rename = "national_id_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_type_id: String,
    /// 证件号码
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "1231131333"
    #[serde(
        rename = "national_id_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_number: String,
    /// 证件签发日期
    ///
    /// **示例值**: "2020-04-01"
    #[serde(
        rename = "issue_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub issue_date: String,
    /// 证件到期日期
    ///
    /// **示例值**: "2020-05-21"
    #[serde(
        rename = "expiration_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub expiration_date: String,
    /// 国家/地区ID，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获取
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 证件签发机构
    ///
    /// **示例值**: "北京市公安局"
    #[serde(
        rename = "issued_by",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub issued_by: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct DependentSubResp {
    /// 姓名
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: PersonNameSubResp,
    /// 关系，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)亲属关系（relationship）枚举定义获取
    ///
    /// **是否必填**: 是
    #[serde(
        rename = "relationship",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub relationship: EnumSubResp,
    /// 性别，枚举值可查询[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：gender
    ///
    /// - object_api_name：person
    #[serde(
        rename = "gender",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub gender: EnumSubResp,
    /// 生日
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "date_of_birth",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub date_of_birth: String,
    /// 国籍 ID，可通过[【查询国籍信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-nationality/search)接口查询
    ///
    /// **示例值**: "6862995745046267401"
    #[serde(
        rename = "nationality_id_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub nationality_id_v2: String,
    /// 证件号码
    #[serde(
        rename = "national_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_list: Vec<NationalIdSubResp>,
    /// 配偶工作状态，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：spouses_working_status
    ///
    /// - object_api_name：dependent
    #[serde(
        rename = "spouses_working_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub spouses_working_status: EnumSubResp,
    /// 包含家属医疗保险
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_this_person_covered_by_health_insurance",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_this_person_covered_by_health_insurance: bool,
    /// 允许家属抵扣税款
    ///
    /// **示例值**: "false"
    #[serde(
        rename = "is_this_person_allowed_for_tax_deduction",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_this_person_allowed_for_tax_deduction: bool,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
    /// 家庭成员姓名
    ///
    /// **示例值**: "张三"
    #[serde(
        rename = "dependent_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub dependent_name: String,
    /// 工作单位
    ///
    /// **示例值**: "海淀区交警大队"
    #[serde(
        rename = "employer",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employer: String,
    /// 岗位
    ///
    /// **示例值**: "保安"
    #[serde(
        rename = "job",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job: String,
    /// 电话
    #[serde(
        rename = "phone",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone: PhoneSubResp,
    /// 联系地址
    #[serde(
        rename = "address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address: AddressSubResp,
    /// 出生证明
    #[serde(
        rename = "birth_certificate_of_child",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub birth_certificate_of_child: Vec<FileSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EmergencyContactSubResp {
    /// 姓名
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: PersonNameSubResp,
    /// 关系，可通过[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)亲属关系（relationship）枚举定义获取
    #[serde(
        rename = "relationship",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub relationship: EnumSubResp,
    /// 电话
    #[serde(
        rename = "phone_ist",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_ist: Vec<PhoneSubResp>,
    /// 电话
    #[serde(
        rename = "phone_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_list: Vec<PhoneSubResp>,
    /// 法定姓名
    ///
    /// **示例值**: "张三"
    #[serde(
        rename = "legal_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub legal_name: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PersonalProfileSubResp {
    /// 资料类型，可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)获取，查询参数：
    ///
    /// - custom_api_name：profile_type
    ///
    /// - object_api_name：personal_profile
    #[serde(
        rename = "personal_profile_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub personal_profile_type: EnumSubResp,
    /// 上传文件列表
    #[serde(
        rename = "files",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub files: Vec<FileSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct CustomFieldDataSubResp {
    /// 自定义字段 apiname，即自定义字段的唯一标识
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "name"
    #[serde(
        rename = "custom_api_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_api_name: String,
    /// 自定义字段名称
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: CustomNameSubResp,
    /// 自定义字段类型
    ///
    /// **示例值**: "1"
    #[serde(
        rename = "type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub body_type: i64,
    /// 字段值，是 json 转义后的字符串，根据元数据定义不同，字段格式不同。使用方式可参考[【操作手册】如何通过 OpenAPI 维护自定义字段](https://feishu.feishu.cn/docx/QlUudBfCtosWMbxx3vxcOFDknn7)
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "\"231\""
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct ResidentTaxSubResp {
    /// 年度
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "2023"
    #[serde(
        rename = "year_resident_tax",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub year_resident_tax: String,
    /// 居民身份，枚举值 api_name 可通过[【获取字段详情】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口查询，查询参数如下： - object_api_name = "resident_tax" - custom_api_name = "resident_status"
    #[serde(
        rename = "resident_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub resident_status: EnumSubResp,
    /// 国家/地区，可通过[【查询国家/地区信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)接口查询
    ///
    /// **示例值**: "中国"
    #[serde(
        rename = "tax_country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub tax_country_region_id: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<ObjectFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct I18nSubResp {
    /// 语言
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "zh-CN"
    #[serde(
        rename = "lang",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub lang: String,
    /// 内容
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "张三"
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct CustomNameSubResp {
    /// 中文
    ///
    /// **示例值**: "自定义姓名"
    #[serde(
        rename = "zh_cn",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub zh_cn: String,
    /// 英文
    ///
    /// **示例值**: "Custom Name"
    #[serde(
        rename = "en_us",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub en_us: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct FileSubResp {
    /// 文件 ID，可用于[【下载文件】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/file/get)
    ///
    /// **示例值**: "150018109586e8ea745e47ae8feb3722dbe1d03a181336393633393133303431393831343930373235150200"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 文件名
    ///
    /// **示例值**: "document.txt"
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct ObjectFieldDataSubResp {
    /// 字段名
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "name"
    #[serde(
        rename = "field_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_name: String,
    /// 字段值，是json转义后的字符串，根据元数据定义不同，字段格式不同(123, 123.23, true, [\"id1\",\"id2\], 2006-01-02 15:04:05])
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "Sandy"
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: String,
}

#[cfg(feature = "test-util")]
mod test_utils {
    use std::sync::Arc;

    use self::gen::core_hr::CoreHrServiceMocker;
    use crate::core::mocker::*;

    use super::*;
    use crate::api::*;
    use crate::core::model::*;

    pub struct Mocker;

    pub trait MockFunc:
        Fn(CreateCoreHrPersonReq) -> Result<(CreateCoreHrPersonResp, CommonResponse), Error>
        + Send
        + Sync
        + 'static
    {
    }
    impl<
            T: Fn(CreateCoreHrPersonReq) -> Result<(CreateCoreHrPersonResp, CommonResponse), Error>
                + Send
                + Sync
                + 'static,
        > MockFunc for T
    {
    }

    impl<'c, IStore: Store, IClient: HttpClient> CoreHrServiceMocker<'c, IStore, IClient> {
        pub fn mock_create_core_hr_person<F: MockFunc>(
            &self,
            f: F,
        ) -> MockerBuilder<Mocker, CreateCoreHrPersonReq, CreateCoreHrPersonResp, Arc<dyn MockFunc>>
        {
            MockerBuilder::new(self.cli.instance_id, Arc::new(f))
        }

        pub(super) fn get_mock_create_core_hr_person(
            &self,
            req: &CreateCoreHrPersonReq,
        ) -> Option<Arc<dyn MockFunc>> {
            do_mock::<Mocker, CreateCoreHrPersonReq, CreateCoreHrPersonResp, Arc<dyn MockFunc>>(
                self.cli.instance_id,
                req,
            )
        }
    }
}

#[cfg(feature = "test-util")]
#[cfg(test)]
mod test {
    use crate::{
        api::gen::core_hr::create_core_hr_person::{
            CreateCoreHrPersonReq, CreateCoreHrPersonResp, CreateCoreHrPersonRespInner,
        },
        core::{model::CommonResponse, Lark},
    };

    #[tokio::test]
    async fn test_mock() {
        let lark = Lark::new("".to_owned(), "".into());
        let mocker = lark
            .core_hr()
            .mock()
            .mock_create_core_hr_person(|_| {
                Ok((CreateCoreHrPersonResp::default(), CommonResponse::default()))
            })
            .build();
        let res = lark
            .core_hr()
            .create_core_hr_person(CreateCoreHrPersonReq::default())
            .await;
        assert!(res.is_ok());
        mocker.clear();
        let res = lark
            .core_hr()
            .create_core_hr_person(CreateCoreHrPersonReq::default())
            .await;
        assert!(res.is_err());
    }

    const REQ: &str = r#"{
    "name_list": [
        {
            "local_primary": "黄",
            "local_first_name": "四",
            "country_region_id": "6862995757234914824",
            "name_type": {
                "enum_name": "legal_name"
            },
            "local_first_name_2": "五",
            "local_primary_2": "王",
            "additional_name_type": {
                "enum_name": "legal_name"
            },
            "first_name": "帅",
            "full_name": "王大帅",
            "hereditary": "王",
            "custom_name": "王大帅",
            "custom_local_name": "王大帅",
            "middle_name": "大",
            "name_primary": "王",
            "secondary": "王",
            "social": {
                "enum_name": "example"
            },
            "tertiary": "王",
            "title": {
                "enum_name": "example"
            },
            "local_middle_name": "大",
            "local_secondary": "王"
        }
    ],
    "gender": {
        "enum_name": "male"
    },
    "date_of_birth": "2020-01-01",
    "nationality_id_v2": "6862995757234914821",
    "race": {
        "enum_name": "example"
    },
    "marital_status": {
        "enum_name": "example"
    },
    "phone_list": [
        {
            "international_area_code": {
                "enum_name": "86_china"
            },
            "phone_number": "010-12345678"
        }
    ],
    "address_list": [
        {
            "address_id": "6989822217869624863",
            "country_region_id": "6862995757234914824",
            "region_id": "6863326815667095047",
            "address_line1": "丹佛测试地址-纽埃时区",
            "address_line2": "PoewH",
            "address_line3": "PoewH",
            "address_line4": "jmwJc",
            "address_line5": "jmwJc",
            "address_line6": "jmwJc",
            "address_line7": "jmwJc",
            "address_line8": "rafSu",
            "address_line9": "McPRG",
            "local_address_line1": "丹佛测试地址-纽埃时区",
            "local_address_line2": "PoewH",
            "local_address_line3": "PoewH",
            "local_address_line4": "jmwJc",
            "local_address_line5": "jmwJc",
            "local_address_line6": "jmwJc",
            "local_address_line7": "jmwJc",
            "local_address_line8": "rafSu",
            "local_address_line9": "McPRG",
            "postal_code": "611530",
            "address_type_list": [
                {
                    "enum_name": "home_address"
                }
            ],
            "is_primary": true,
            "is_public": true,
            "custom_fields": [
                {
                    "custom_api_name": "name",
                    "value": "\"231\""
                }
            ]
        }
    ],
    "email_list": [
        {
            "email": "1234567@example.feishu.cn",
            "is_primary": true,
            "is_public": true,
            "email_usage": {
                "enum_name": "emergency_contact"
            }
        }
    ],
    "work_experience_list": [
        {
            "company_organization": [
                {
                    "lang": "zh-CN",
                    "value": "张三"
                }
            ],
            "department": [
                {
                    "lang": "zh-CN",
                    "value": "张三"
                }
            ],
            "job": [
                {
                    "lang": "zh-CN",
                    "value": "张三"
                }
            ],
            "description": [
                {
                    "lang": "zh-CN",
                    "value": "张三"
                }
            ],
            "start_date": "2020-01-01",
            "end_date": "2020-01-01",
            "custom_fields": [
                {
                    "custom_api_name": "name",
                    "value": "\"231\""
                }
            ]
        }
    ],
    "education_list": [
        {
            "school": [
                {
                    "lang": "zh-CN",
                    "value": "张三"
                }
            ],
            "level_of_education": {
                "enum_name": "phd"
            },
            "start_date": "2011-09-01",
            "end_date": "2015-06-30",
            "field_of_study": [
                {
                    "lang": "zh-CN",
                    "value": "张三"
                }
            ],
            "degree": {
                "enum_name": "mba"
            },
            "school_name": {
                "enum_name": "example"
            },
            "field_of_study_name": {
                "enum_name": "example"
            },
            "country_region_id": "1",
            "expected_end_date": "2011-09-01",
            "custom_fields": [
                {
                    "custom_api_name": "name",
                    "value": "\"231\""
                }
            ]
        }
    ],
    "bank_account_list": [
        {
            "bank_name": "中国农业银行",
            "bank_account_number": "6231200000001223",
            "account_holder": "孟十五",
            "branch_name": "中国农业银行支行",
            "bank_id_v2": "MDBH00000001",
            "branch_id_v2": "MDBK00000017",
            "country_region_id": "12",
            "bank_account_usage": [
                {
                    "enum_name": "payment"
                }
            ],
            "bank_account_type": {
                "enum_name": "checking"
            },
            "currency_id": "12QueryCountryRegionSubdivisionDataReq",
            "custom_fields": [
                {
                    "custom_api_name": "name",
                    "value": "\"231\""
                }
            ]
        }
    ],
    "national_id_list": [
        {
            "national_id_type_id": "6863330041896371725",
            "national_id_number": "1231131333",
            "issue_date": "2020-04-01",
            "expiration_date": "2020-05-21",
            "country_region_id": "6862995757234914824",
            "issued_by": "北京市公安局",
            "custom_fields": [
                {
                    "custom_api_name": "name",
                    "value": "\"231\""
                }
            ]
        }
    ],
    "dependent_list": [
        {
            "relationship": {
                "enum_name": "parent"
            },
            "gender": {
                "enum_name": "male"
            },
            "date_of_birth": "2020-01-01",
            "nationality_id_v2": "6862995745046267401",
            "national_id_list": [
                {
                    "national_id_type_id": "6863330041896371725",
                    "national_id_number": "1231131333",
                    "issue_date": "2020-04-01",
                    "expiration_date": "2020-05-21",
                    "country_region_id": "6862995757234914824",
                    "issued_by": "北京市公安局",
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "value": "\"231\""
                        }
                    ]
                }
            ],
            "spouses_working_status": {
                "enum_name": "example"
            },
            "is_this_person_covered_by_health_insurance": true,
            "is_this_person_allowed_for_tax_deduction": false,
            "custom_fields": [
                {
                    "custom_api_name": "name",
                    "value": "\"231\""
                }
            ],
            "dependent_name": "张三",
            "employer": "海淀区交警大队",
            "job": "保安",
            "phone": {
                "international_area_code": {
                    "enum_name": "86_china"
                },
                "phone_number": "010-12345678"
            },
            "address": {
                "address_id": "6989822217869624863",
                "country_region_id": "6862995757234914824",
                "region_id": "6863326815667095047",
                "address_line1": "丹佛测试地址-纽埃时区",
                "address_line2": "PoewH",
                "address_line3": "PoewH",
                "address_line4": "jmwJc",
                "address_line5": "jmwJc",
                "address_line6": "jmwJc",
                "address_line7": "jmwJc",
                "address_line8": "rafSu",
                "address_line9": "McPRG",
                "local_address_line1": "丹佛测试地址-纽埃时区",
                "local_address_line2": "PoewH",
                "local_address_line3": "PoewH",
                "local_address_line4": "jmwJc",
                "local_address_line5": "jmwJc",
                "local_address_line6": "jmwJc",
                "local_address_line7": "jmwJc",
                "local_address_line8": "rafSu",
                "local_address_line9": "McPRG",
                "postal_code": "611530",
                "custom_fields": [
                    {
                        "custom_api_name": "name",
                        "value": "\"231\""
                    }
                ]
            },
            "birth_certificate_of_child": [
                {
                    "id": "150018109586e8ea745e47ae8feb3722dbe1d03a181336393633393133303431393831343930373235150200"
                }
            ]
        }
    ],
    "emergency_contact_list": [
        {
            "name": {
                "local_primary": "黄",
                "local_first_name": "四",
                "country_region_id": "6862995757234914824",
                "name_type": {
                    "enum_name": "legal_name"
                },
                "local_first_name_2": "五",
                "local_primary_2": "王",
                "additional_name_type": {
                    "enum_name": "legal_name"
                },
                "first_name": "帅",
                "full_name": "王大帅",
                "hereditary": "王",
                "custom_name": "王大帅",
                "custom_local_name": "王大帅",
                "middle_name": "大",
                "name_primary": "王",
                "secondary": "王",
                "social": {
                    "enum_name": "example"
                },
                "tertiary": "王",
                "title": {
                    "enum_name": "example"
                },
                "local_middle_name": "大",
                "local_secondary": "王"
            },
            "relationship": {
                "enum_name": "parent"
            },
            "phone_ist": [
                {
                    "international_area_code": {
                        "enum_name": "86_china"
                    },
                    "phone_number": "010-12345678"
                }
            ],
            "legal_name": "张三"
        }
    ],
    "date_entered_workforce": "2020-10-01",
    "profile_image_id": "dfysuc8x76dsfsw",
    "personal_profile": [
        {
            "personal_profile_type": {
                "enum_name": "example"
            },
            "files": [
                {
                    "id": "150018109586e8ea745e47ae8feb3722dbe1d03a181336393633393133303431393831343930373235150200"
                }
            ]
        }
    ],
    "native_region": "6863326262618752111",
    "hukou_type": {
        "enum_name": "local_urban_residence"
    },
    "hukou_location": "山东省平阴县",
    "political_affiliations": [
        {
            "enum_name": "communist_party_of_china"
        }
    ],
    "talent_id": "6863326262618752123",
    "custom_fields": [
        {
            "custom_api_name": "name",
            "value": "\"231\""
        }
    ],
    "born_country_region": "中国",
    "is_disabled": true,
    "disable_card_number": "1110000",
    "is_martyr_family": true,
    "martyr_card_number": "1110000",
    "is_old_alone": true,
    "resident_taxes": [
        {
            "year_resident_tax": "2023",
            "resident_status": {
                "enum_name": "example"
            },
            "tax_country_region_id": "中国",
            "custom_fields": [
                {
                    "field_name": "name",
                    "value": "Sandy"
                }
            ]
        }
    ],
    "first_entry_time": "2021-01-02",
    "leave_time": "2022-01-02"
}"#;

    #[test]
    fn test_req() {
        if REQ == "{}" {
            return;
        }
        if let Err(e) = serde_json::from_str::<super::CreateCoreHrPersonReqBody>(REQ) {
            panic!("{}", e);
        }
    }

    const RESP: &str = r#"{
    "code": 0,
    "msg": "success",
    "data": {
        "person": {
            "person_id": "6919733936050406926",
            "phone_number": "13649211111",
            "legal_name": "张三",
            "preferred_name": "刘梓新(Henry)",
            "preferred_local_full_name": "刘梓新",
            "preferred_english_full_name": "Henry",
            "name_list": [
                {
                    "local_primary": "黄",
                    "local_first_name": "四",
                    "country_region_id": "6862995757234914824",
                    "name_type": {
                        "enum_name": "legal_name",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "local_first_name_2": "五",
                    "local_primary_2": "王",
                    "additional_name_type": {
                        "enum_name": "legal_name",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "first_name": "帅",
                    "full_name": "王大帅",
                    "hereditary": "王",
                    "custom_name": "王大帅",
                    "custom_local_name": "王大帅",
                    "middle_name": "大",
                    "name_primary": "王",
                    "secondary": "王",
                    "social": {
                        "enum_name": "example",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "tertiary": "王",
                    "title": {
                        "enum_name": "example",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "local_middle_name": "大",
                    "local_secondary": "王",
                    "display_name_local_and_western_script": "王大帅",
                    "display_name_local_script": "王大帅",
                    "display_name_western_script": "王大帅"
                }
            ],
            "gender": {
                "enum_name": "male",
                "display": [
                    {
                        "lang": "zh-CN",
                        "value": "张三"
                    }
                ]
            },
            "date_of_birth": "2020-01-01",
            "nationality_id_v2": "6862995757234914821",
            "race": {
                "enum_name": "example",
                "display": [
                    {
                        "lang": "zh-CN",
                        "value": "张三"
                    }
                ]
            },
            "marital_status": {
                "enum_name": "example",
                "display": [
                    {
                        "lang": "zh-CN",
                        "value": "张三"
                    }
                ]
            },
            "phone_list": [
                {
                    "international_area_code": {
                        "enum_name": "86_china",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "phone_number": "010-12345678",
                    "formatted_phone_number": "+86 010-12345678",
                    "device_type": {
                        "enum_name": "mobile_phone",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "phone_usage": {
                        "enum_name": "home",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "is_primary": true,
                    "is_public": true
                }
            ],
            "address_list": [
                {
                    "full_address_local_script": "中国北京北京",
                    "full_address_western_script": "Beijing, Beijing, China,",
                    "address_id": "6989822217869624863",
                    "country_region_id": "6862995757234914824",
                    "region_id": "6863326815667095047",
                    "address_line1": "丹佛测试地址-纽埃时区",
                    "address_line2": "PoewH",
                    "address_line3": "PoewH",
                    "address_line4": "jmwJc",
                    "address_line5": "jmwJc",
                    "address_line6": "jmwJc",
                    "address_line7": "jmwJc",
                    "address_line8": "rafSu",
                    "address_line9": "McPRG",
                    "local_address_line1": "丹佛测试地址-纽埃时区",
                    "local_address_line2": "PoewH",
                    "local_address_line3": "PoewH",
                    "local_address_line4": "jmwJc",
                    "local_address_line5": "jmwJc",
                    "local_address_line6": "jmwJc",
                    "local_address_line7": "jmwJc",
                    "local_address_line8": "rafSu",
                    "local_address_line9": "McPRG",
                    "postal_code": "611530",
                    "address_type_list": [
                        {
                            "enum_name": "example",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        }
                    ],
                    "is_primary": true,
                    "is_public": true,
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "name": {
                                "zh_cn": "自定义姓名",
                                "en_us": "Custom Name"
                            },
                            "type": 1,
                            "value": "\"231\""
                        }
                    ]
                }
            ],
            "email_list": [
                {
                    "email": "1234567@ example.feishu.cn",
                    "is_primary": true,
                    "is_public": true,
                    "email_usage": {
                        "enum_name": "home",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    }
                }
            ],
            "work_experience_list": [
                {
                    "company_organization": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ],
                    "department": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ],
                    "job": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ],
                    "description": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ],
                    "start_date": "2020-01-01",
                    "end_date": "2020-01-01",
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "name": {
                                "zh_cn": "自定义姓名",
                                "en_us": "Custom Name"
                            },
                            "type": 1,
                            "value": "\"231\""
                        }
                    ]
                }
            ],
            "education_list": [
                {
                    "school": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ],
                    "level_of_education": {
                        "enum_name": "phd",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "start_date": "2011-09-01",
                    "end_date": "2015-06-30",
                    "field_of_study": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ],
                    "degree": {
                        "enum_name": "mba",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "school_name": {
                        "enum_name": "example",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "field_of_study_name": {
                        "enum_name": "example",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "country_region_id": "1",
                    "expected_end_date": "2011-09-01",
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "name": {
                                "zh_cn": "自定义姓名",
                                "en_us": "Custom Name"
                            },
                            "type": 1,
                            "value": "\"231\""
                        }
                    ]
                }
            ],
            "bank_account_list": [
                {
                    "bank_name": "中国农业银行",
                    "bank_account_number": "6231200000001223",
                    "account_holder": "孟十五",
                    "branch_name": "中国农业银行支行",
                    "bank_id_v2": "MDBH00000001",
                    "branch_id_v2": "MDBK00000017",
                    "country_region_id": "12",
                    "bank_account_usage": [
                        {
                            "enum_name": "checking",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        }
                    ],
                    "bank_account_type": {
                        "enum_name": "checking",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "currency_id": "12QueryCountryRegionSubdivisionDataReq",
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "name": {
                                "zh_cn": "自定义姓名",
                                "en_us": "Custom Name"
                            },
                            "type": 1,
                            "value": "\"231\""
                        }
                    ]
                }
            ],
            "national_id_list": [
                {
                    "national_id_type_id": "6863330041896371725",
                    "national_id_number": "1231131333",
                    "issue_date": "2020-04-01",
                    "expiration_date": "2020-05-21",
                    "country_region_id": "6862995757234914824",
                    "issued_by": "北京市公安局",
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "name": {
                                "zh_cn": "自定义姓名",
                                "en_us": "Custom Name"
                            },
                            "type": 1,
                            "value": "\"231\""
                        }
                    ]
                }
            ],
            "dependent_list": [
                {
                    "name": {
                        "local_primary": "黄",
                        "local_first_name": "四",
                        "country_region_id": "6862995757234914824",
                        "name_type": {
                            "enum_name": "legal_name",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        },
                        "local_first_name_2": "五",
                        "local_primary_2": "王",
                        "additional_name_type": {
                            "enum_name": "legal_name",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        },
                        "first_name": "帅",
                        "full_name": "王大帅",
                        "hereditary": "王",
                        "custom_name": "王大帅",
                        "custom_local_name": "王大帅",
                        "middle_name": "大",
                        "name_primary": "王",
                        "secondary": "王",
                        "social": {
                            "enum_name": "example",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        },
                        "tertiary": "王",
                        "title": {
                            "enum_name": "example",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        },
                        "local_middle_name": "大",
                        "local_secondary": "王",
                        "display_name_local_and_western_script": "王大帅",
                        "display_name_local_script": "王大帅",
                        "display_name_western_script": "王大帅"
                    },
                    "relationship": {
                        "enum_name": "parent",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "gender": {
                        "enum_name": "male",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "date_of_birth": "2020-01-01",
                    "nationality_id_v2": "6862995745046267401",
                    "national_id_list": [
                        {
                            "national_id_type_id": "6863330041896371725",
                            "national_id_number": "1231131333",
                            "issue_date": "2020-04-01",
                            "expiration_date": "2020-05-21",
                            "country_region_id": "6862995757234914824",
                            "issued_by": "北京市公安局",
                            "custom_fields": [
                                {
                                    "custom_api_name": "name",
                                    "name": {
                                        "zh_cn": "自定义姓名",
                                        "en_us": "Custom Name"
                                    },
                                    "type": 1,
                                    "value": "\"231\""
                                }
                            ]
                        }
                    ],
                    "spouses_working_status": {
                        "enum_name": "example",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "is_this_person_covered_by_health_insurance": true,
                    "is_this_person_allowed_for_tax_deduction": false,
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "name": {
                                "zh_cn": "自定义姓名",
                                "en_us": "Custom Name"
                            },
                            "type": 1,
                            "value": "\"231\""
                        }
                    ],
                    "dependent_name": "张三",
                    "employer": "海淀区交警大队",
                    "job": "保安",
                    "phone": {
                        "international_area_code": {
                            "enum_name": "86_china",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        },
                        "phone_number": "010-12345678",
                        "formatted_phone_number": "+86 010-12345678",
                        "device_type": {
                            "enum_name": "fax",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        },
                        "phone_usage": {
                            "enum_name": "home",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        },
                        "is_primary": true,
                        "is_public": true
                    },
                    "address": {
                        "full_address_local_script": "中国北京北京",
                        "full_address_western_script": "Beijing, Beijing, China,",
                        "address_id": "6989822217869624863",
                        "country_region_id": "6862995757234914824",
                        "region_id": "6863326815667095047",
                        "address_line1": "丹佛测试地址-纽埃时区",
                        "address_line2": "PoewH",
                        "address_line3": "PoewH",
                        "address_line4": "jmwJc",
                        "address_line5": "jmwJc",
                        "address_line6": "jmwJc",
                        "address_line7": "jmwJc",
                        "address_line8": "rafSu",
                        "address_line9": "McPRG",
                        "local_address_line1": "丹佛测试地址-纽埃时区",
                        "local_address_line2": "PoewH",
                        "local_address_line3": "PoewH",
                        "local_address_line4": "jmwJc",
                        "local_address_line5": "jmwJc",
                        "local_address_line6": "jmwJc",
                        "local_address_line7": "jmwJc",
                        "local_address_line8": "rafSu",
                        "local_address_line9": "McPRG",
                        "postal_code": "611530",
                        "address_type_list": [
                            {
                                "enum_name": "home_address",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "张三"
                                    }
                                ]
                            }
                        ],
                        "is_primary": true,
                        "is_public": true,
                        "custom_fields": [
                            {
                                "custom_api_name": "name",
                                "name": {
                                    "zh_cn": "自定义姓名",
                                    "en_us": "Custom Name"
                                },
                                "type": 1,
                                "value": "\"231\""
                            }
                        ]
                    },
                    "birth_certificate_of_child": [
                        {
                            "id": "150018109586e8ea745e47ae8feb3722dbe1d03a181336393633393133303431393831343930373235150200",
                            "name": "document.txt"
                        }
                    ]
                }
            ],
            "emergency_contact_list": [
                {
                    "name": {
                        "local_primary": "黄",
                        "local_first_name": "四",
                        "country_region_id": "6862995757234914824",
                        "name_type": {
                            "enum_name": "legal_name",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        },
                        "local_first_name_2": "五",
                        "local_primary_2": "王",
                        "additional_name_type": {
                            "enum_name": "emergency_contact_name",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        },
                        "first_name": "帅",
                        "full_name": "王大帅",
                        "hereditary": "王",
                        "custom_name": "王大帅",
                        "custom_local_name": "王大帅",
                        "middle_name": "大",
                        "name_primary": "王",
                        "secondary": "王",
                        "social": {
                            "enum_name": "example",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        },
                        "tertiary": "王",
                        "title": {
                            "enum_name": "example",
                            "display": [
                                {
                                    "lang": "zh-CN",
                                    "value": "张三"
                                }
                            ]
                        },
                        "local_middle_name": "大",
                        "local_secondary": "王",
                        "display_name_local_and_western_script": "王大帅",
                        "display_name_local_script": "王大帅",
                        "display_name_western_script": "王大帅"
                    },
                    "relationship": {
                        "enum_name": "parent",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "phone_ist": [
                        {
                            "international_area_code": {
                                "enum_name": "86_china",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "张三"
                                    }
                                ]
                            },
                            "phone_number": "010-12345678",
                            "formatted_phone_number": "+86 010-12345678",
                            "device_type": {
                                "enum_name": "fax",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "张三"
                                    }
                                ]
                            },
                            "phone_usage": {
                                "enum_name": "home",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "张三"
                                    }
                                ]
                            },
                            "is_primary": true,
                            "is_public": true
                        }
                    ],
                    "phone_list": [
                        {
                            "international_area_code": {
                                "enum_name": "86_china",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "张三"
                                    }
                                ]
                            },
                            "phone_number": "010-12345678",
                            "formatted_phone_number": "+86 010-12345678",
                            "device_type": {
                                "enum_name": "fax",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "张三"
                                    }
                                ]
                            },
                            "phone_usage": {
                                "enum_name": "home",
                                "display": [
                                    {
                                        "lang": "zh-CN",
                                        "value": "张三"
                                    }
                                ]
                            },
                            "is_primary": true,
                            "is_public": true
                        }
                    ],
                    "legal_name": "张三",
                    "custom_fields": [
                        {
                            "custom_api_name": "name",
                            "name": {
                                "zh_cn": "自定义姓名",
                                "en_us": "Custom Name"
                            },
                            "type": 1,
                            "value": "\"231\""
                        }
                    ]
                }
            ],
            "date_entered_workforce": "2020-10-01",
            "working_years": 2,
            "profile_image_id": "dfysuc8x76dsfsw",
            "email_address": "test@example.feishu.cn",
            "age": 22,
            "highest_level_of_education": {
                "school": [
                    {
                        "lang": "zh-CN",
                        "value": "张三"
                    }
                ],
                "level_of_education": {
                    "enum_name": "phd",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ]
                },
                "start_date": "2011-09-01",
                "end_date": "2015-06-30",
                "field_of_study": [
                    {
                        "lang": "zh-CN",
                        "value": "张三"
                    }
                ],
                "degree": {
                    "enum_name": "mba",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ]
                },
                "school_name": {
                    "enum_name": "example",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ]
                },
                "field_of_study_name": {
                    "enum_name": "example",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ]
                },
                "country_region_id": "1",
                "expected_end_date": "2011-09-01",
                "custom_fields": [
                    {
                        "custom_api_name": "name",
                        "name": {
                            "zh_cn": "自定义姓名",
                            "en_us": "Custom Name"
                        },
                        "type": 1,
                        "value": "\"231\""
                    }
                ]
            },
            "highest_degree_of_education": {
                "school": [
                    {
                        "lang": "zh-CN",
                        "value": "张三"
                    }
                ],
                "level_of_education": {
                    "enum_name": "phd",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ]
                },
                "start_date": "2011-09-01",
                "end_date": "2015-06-30",
                "field_of_study": [
                    {
                        "lang": "zh-CN",
                        "value": "张三"
                    }
                ],
                "degree": {
                    "enum_name": "mba",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ]
                },
                "school_name": {
                    "enum_name": "example",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ]
                },
                "field_of_study_name": {
                    "enum_name": "example",
                    "display": [
                        {
                            "lang": "zh-CN",
                            "value": "张三"
                        }
                    ]
                },
                "country_region_id": "1",
                "expected_end_date": "2011-09-01",
                "custom_fields": [
                    {
                        "custom_api_name": "name",
                        "name": {
                            "zh_cn": "自定义姓名",
                            "en_us": "Custom Name"
                        },
                        "type": 1,
                        "value": "\"231\""
                    }
                ]
            },
            "personal_profile": [
                {
                    "personal_profile_type": {
                        "enum_name": "example",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "files": [
                        {
                            "id": "150018109586e8ea745e47ae8feb3722dbe1d03a181336393633393133303431393831343930373235150200",
                            "name": "document.txt"
                        }
                    ]
                }
            ],
            "native_region": "6863326262618752111",
            "hukou_type": {
                "enum_name": "example",
                "display": [
                    {
                        "lang": "zh-CN",
                        "value": "张三"
                    }
                ]
            },
            "hukou_location": "山东省平阴县",
            "talent_id": "6863326262618752123",
            "custom_fields": [
                {
                    "custom_api_name": "name",
                    "name": {
                        "zh_cn": "自定义姓名",
                        "en_us": "Custom Name"
                    },
                    "type": 1,
                    "value": "\"231\""
                }
            ],
            "national_id_number": "11010000000000",
            "family_address": "6863326262618752123",
            "born_country_region": "中国",
            "is_disabled": true,
            "disable_card_number": "1110000",
            "is_martyr_family": true,
            "martyr_card_number": "1110000",
            "is_old_alone": true,
            "resident_taxes": [
                {
                    "year_resident_tax": "2023",
                    "resident_status": {
                        "enum_name": "example",
                        "display": [
                            {
                                "lang": "zh-CN",
                                "value": "张三"
                            }
                        ]
                    },
                    "tax_country_region_id": "中国",
                    "custom_fields": [
                        {
                            "field_name": "name",
                            "value": "Sandy"
                        }
                    ]
                }
            ],
            "first_entry_time": "2021-01-02",
            "leave_time": "2022-01-02"
        }
    }
}"#;
    #[test]
    fn test_resp() {
        let res = serde_json::from_str::<CreateCoreHrPersonRespInner>(RESP);
        if let Err(e) = res {
            panic!("{}", e);
        }
        if let Ok(v) = serde_json::from_str::<serde_json::Value>(RESP) {
            if v.get("data").is_some() {
                assert!(res.unwrap().data.is_some());
            }
        }
    }
}

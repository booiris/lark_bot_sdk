//! doc url: <https://open.larkoffice.com/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/pre_hire/create>
// Code generated by gen_api. DO NOT EDIT.

use serde::{Deserialize, Serialize};

use crate::api::BaseResp;
use crate::api::HasBaseResp;
use crate::core::model::{ApiRequest, CommonResponse, MethodOption, ReqParam, StreamReqParam};
use crate::{
    core::{http_client::HttpClient, store::Store},
    error::Error,
};

use crate::api::gen::core_hr::CoreHrService;

impl<'c, IStore: Store, IClient: HttpClient> CoreHrService<'c, IStore, IClient> {
    /// **api 版本: 2024-07-26T07:17:06+00:00**
    ///
    /// ## 直接创建待入职
    ///
    /// 使用指定数据创建一个待入职人员。
    ///

    ///
    /// doc: <https://open.larkoffice.com/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/pre_hire/create>
    ///
    /// new doc: <https://open.larkoffice.com/document/server-docs/corehr-v1/pre_hire/create>
    ///
    /// api url: <https://open.feishu.cn/document_portal/v1/document/get_detail?fullPath=%2Fserver-docs%2Fcorehr-v1%2Fpre_hire%2Fcreate>
    pub async fn create_core_hr_pre_hire(
        &self,
        req: CreateCoreHrPreHireReq,
    ) -> Result<(CreateCoreHrPreHireResp, CommonResponse), Error> {
        self.create_core_hr_pre_hire_with_opt(req, Default::default())
            .await
    }

    /// 参见 [create_core_hr_pre_hire](#method.create_core_hr_pre_hire) 函数
    pub async fn create_core_hr_pre_hire_with_opt(
        &self,
        req: CreateCoreHrPreHireReq,
        method_option: MethodOption,
    ) -> Result<(CreateCoreHrPreHireResp, CommonResponse), Error> {
        #[cfg(feature = "test-util")]
        {
            if let Some(f) = self.mock().get_mock_create_core_hr_pre_hire(&req) {
                tracing::info!("[lark] CoreHr#CreateCoreHrPreHire **mocking** api");
                return f(req);
            }
        }

        tracing::info!("[lark] CoreHr#CreateCoreHrPreHire call api");

        let req = ApiRequest {
            scope: "CoreHr",
            api: "CreateCoreHrPreHire",
            method: http::Method::POST,
            url: String::new() + self.cli.open_base_url.as_ref() + "/open-apis/corehr/v2/pre_hires",
            param_data: req.gen_param(),
            method_option,
            need_tenant_access_token: true,
            ..Default::default()
        };

        let (resp, common_resp): (CreateCoreHrPreHireRespInner, _) = self.cli.do_req(req).await?;
        let data = match resp.data {
            Some(data) => data,
            None => {
                return Err(Error::ErrResponse(
                    anyhow::anyhow!("missing response data"),
                    common_resp,
                ));
            }
        };
        Ok((data, common_resp))
    }
}

#[derive(Debug, Serialize, Deserialize, Clone, Default, lark_bot_sdk_macros::ApiReqParams)]
pub struct CreateCoreHrPreHireReq {
    /// 个人信息
    ///
    /// **是否必填**: 是
    #[api(kind = "body", name = "basic_info")]
    pub basic_info: BasicInfoSubReq,
    /// 职位信息
    ///
    /// **是否必填**: 是
    #[api(kind = "body", name = "offer_info")]
    pub offer_info: OfferInfoSubReq,
    /// 教育经历
    #[api(kind = "body", name = "education_info")]
    pub education_info: Vec<Option<EducationInfoSubReq>>,
    /// 工作经历
    #[api(kind = "body", name = "work_experience")]
    pub work_experience: Vec<Option<WorkExperienceSubReq>>,
    /// 招聘应用 ID，仅支持飞书招聘 ID，可以通过[获取投递列表](https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/application/list)接口获取
    ///
    /// **示例值**: "7140946969586010376"
    #[api(kind = "body", name = "ats_application_id")]
    pub ats_application_id: Option<String>,
    /// 外部业务唯一编码，用于支持幂等创建
    ///
    /// **示例值**: "7140946969586010376"
    #[api(kind = "body", name = "out_biz_id")]
    pub out_biz_id: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct BasicInfoSubReq {
    /// 常用名
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: Option<NameSubReq>,
    /// 手机号
    ///
    /// **示例值**: "31123227"
    #[serde(
        rename = "phone_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_number: Option<String>,
    /// 区号，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name = phone
    ///
    /// - custom_api_name = international_area_code
    ///
    /// **示例值**: "86_china"
    #[serde(
        rename = "international_area_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub international_area_code: Option<String>,
    /// 个人邮箱
    ///
    /// **示例值**: "1234567@bytedance.com"
    #[serde(
        rename = "email",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email: Option<String>,
    /// 生日
    ///
    /// **示例值**: "2011-09-09"
    #[serde(
        rename = "date_of_birth",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub date_of_birth: Option<String>,
    /// 证件号（待废弃，建议使用national_id_list）
    ///
    /// **示例值**: "31123127"
    #[serde(
        rename = "personal_id_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub personal_id_number: Option<String>,
    /// 证件类型（待废弃，建议使用national_id_list），可以通过[批量查询国家证件类型](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/national_id_type/list)接口获取
    ///
    /// **示例值**: "6862995757234914823"
    #[serde(
        rename = "personal_id_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub personal_id_type: Option<String>,
    /// 参加工作日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2010-09-09"
    #[serde(
        rename = "date_entered_workforce",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub date_entered_workforce: Option<String>,
    /// 性别，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name = person
    ///
    /// - custom_api_name = gender
    ///
    /// **示例值**: "male"
    #[serde(
        rename = "gender_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub gender_id: Option<String>,
    /// 国籍（新），可以通过[查询国籍信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-nationality/search)接口获得
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "nationality_v2_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub nationality_v2_id: Option<String>,
    /// 其他国籍，可以通过[查询国籍信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-nationality/search)接口获得
    ///
    /// **示例值**: "[6862995757234914824]"
    #[serde(
        rename = "additional_nationality_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub additional_nationality_id_list: Vec<Option<String>>,
    /// 公民身份，如需获取具体值，请联系人员档案管理员
    ///
    /// **示例值**: "[6862995757234914824]"
    #[serde(
        rename = "citizenship_status_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub citizenship_status_id_list: Vec<Option<String>>,
    /// 家庭地址（待废弃）
    ///
    /// **示例值**: "home addr"
    #[serde(
        rename = "home_address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub home_address: Option<String>,
    /// 人员编号
    ///
    /// **示例值**: "DDD00001"
    #[serde(
        rename = "worker_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub worker_id: Option<String>,
    /// 数据驻留地（部分租户开通此功能），枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取。
    ///
    /// 按如下参数查询即可：
    ///
    /// - object_api_name = pre_hire
    ///
    /// - custom_api_name = user_geo
    ///
    /// **示例值**: "cn"
    #[serde(
        rename = "user_geo",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub user_geo: Option<String>,
    /// 法定姓名
    #[serde(
        rename = "legal_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub legal_name: Option<NameSubReq>,
    /// 纳税身份信息
    #[serde(
        rename = "resident_tax_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub resident_tax_list: Vec<Option<ResidentTaxForUpdateSubReq>>,
    /// 出生国家/地区，可以通过[查询国家/地区信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)接口获取
    ///
    /// **示例值**: "cn"
    #[serde(
        rename = "born_country_region",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub born_country_region: Option<String>,
    /// 是否残疾
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_disabled",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_disabled: Option<bool>,
    /// 残疾证号
    ///
    /// **示例值**: "身份证号+残疾类型（1-7）+ 残疾程度分级（1-4）+[补发编号]"
    #[serde(
        rename = "disable_card_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub disable_card_number: Option<String>,
    /// 是否孤老
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_old_alone",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_old_alone: Option<bool>,
    /// 是否烈属
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_martyr_family",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_martyr_family: Option<bool>,
    /// 烈属证号
    ///
    /// **示例值**: "00001"
    #[serde(
        rename = "martyr_card_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub martyr_card_number: Option<String>,
    /// 家庭成员
    #[serde(
        rename = "dependent_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub dependent_list: Vec<Option<DependentForUpdateSubReq>>,
    /// 宗教信仰，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：person
    ///
    /// - custom_api_name：religion
    ///
    /// **示例值**: "buddism"
    #[serde(
        rename = "religion",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub religion: Option<String>,
    /// 银行账号
    #[serde(
        rename = "bank_account_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_list: Vec<Option<BankAccountForUpdateSubReq>>,
    /// 国家证件
    #[serde(
        rename = "national_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_list: Vec<Option<NationalIdForUpdateSubReq>>,
    /// 个人资料
    #[serde(
        rename = "personal_profile_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub personal_profile_list: Vec<Option<PersonalProfileForUpdateSubReq>>,
    /// 紧急联系人
    #[serde(
        rename = "emergency_contact_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub emergency_contact_list: Vec<Option<EmergencyContactForUpdateSubReq>>,
    /// 联系地址
    #[serde(
        rename = "address_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_list: Vec<Option<AddressForUpdateSubReq>>,
    /// 婚姻状况，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：person
    ///
    /// - custom_api_name：marital_status
    ///
    /// **示例值**: "single"
    #[serde(
        rename = "marital_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub marital_status: Option<String>,
    /// 民族 / 种族，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：person
    ///
    /// - custom_api_name：ethnicity_race
    ///
    /// **示例值**: "han"
    #[serde(
        rename = "ethnicity_race",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub ethnicity_race: Option<String>,
    /// 籍贯，可以通过[查询省份/行政区信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region_subdivision/search)接口获取
    ///
    /// **示例值**: "6822114062122064111"
    #[serde(
        rename = "native_region",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub native_region: Option<String>,
    /// 户口类型，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：person_info_chn
    ///
    /// - custom_api_name：hukou_type
    ///
    /// **示例值**: "local_urban_residence"
    #[serde(
        rename = "hukou_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub hukou_type: Option<String>,
    /// 户口所在地
    ///
    /// **示例值**: "北京市海淀区北三环西路"
    #[serde(
        rename = "hukou_location",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub hukou_location: Option<String>,
    /// person对象上的自定义字段，可以通过[获取自定义字段列表](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/query)接口获得
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<Option<ObjectFieldDataSubReq>>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct OfferInfoSubReq {
    /// Offer ID，仅支持飞书招聘 ID，可以通过飞书招聘[获取Offer列表](https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/offer/list)接口获取，如果未使用飞书招聘请置空
    ///
    /// **示例值**: "7032210902531327521"
    #[serde(
        rename = "offer_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub offer_id: Option<String>,
    /// Offer HR 雇佣 ID，可以通过[批量查询员工信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/batch_get)接口获取
    ///
    /// **示例值**: "7032210902531327521"
    #[serde(
        rename = "offer_hr_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub offer_hr_id: Option<String>,
    /// 部门 ID，可以通过[批量查询部门](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/department/batch_get)接口获取
    ///
    /// **示例值**: "7147562782945478177"
    #[serde(
        rename = "department_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub department_id: Option<String>,
    /// 直属领导的雇佣 ID，可以通过[批量查询员工信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/batch_get)接口获取
    ///
    /// **示例值**: "7032210902531327521"
    #[serde(
        rename = "direct_leader_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub direct_leader_id: Option<String>,
    /// 职务 ID，可以通过[批量查询职务](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job/list)接口获取
    ///
    /// **示例值**: "6977976735715378724"
    #[serde(
        rename = "job_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_id: Option<String>,
    /// 序列 ID，可以通过[批量查询序列](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_family/list)接口获取
    ///
    /// **示例值**: "6977972856625939999"
    #[serde(
        rename = "job_family_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_family_id: Option<String>,
    /// 职级 ID，可以通过[批量查询职级](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_level/list)接口获取
    ///
    /// **示例值**: "6977971894960145950"
    #[serde(
        rename = "job_level_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_level_id: Option<String>,
    /// 职务头衔（待废弃）
    ///
    /// **示例值**: "java"
    #[serde(
        rename = "job_title",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_title: Option<String>,
    /// 试用期开始日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2022-07-29"
    #[serde(
        rename = "probation_start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub probation_start_date: Option<String>,
    /// 试用期结束日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2023-04-07"
    #[serde(
        rename = "probation_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub probation_end_date: Option<String>,
    /// 合同开始日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2022-10-08"
    #[serde(
        rename = "contract_start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub contract_start_date: Option<String>,
    /// 合同结束日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2025-10-07"
    #[serde(
        rename = "contract_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub contract_end_date: Option<String>,
    /// 合同期限时长
    ///
    /// **示例值**: "3"
    #[serde(
        rename = "duration_period",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub duration_period: Option<f64>,
    /// 合同期限单位，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name = pre_hire
    ///
    /// - custom_api_name = duration_unit
    ///
    /// **示例值**: "year"
    #[serde(
        rename = "duration_unit",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub duration_unit: Option<String>,
    /// 入职日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2022-10-08"
    #[serde(
        rename = "onboarding_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub onboarding_date: Option<String>,
    /// 入职地点 ID，可以通过[批量查询地点](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/location/list)接口获取
    ///
    /// **示例值**: "6977976687350924832"
    #[serde(
        rename = "onboarding_location_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub onboarding_location_id: Option<String>,
    /// 办公地点 ID，可以通过[批量查询地点](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/location/list)接口获取
    ///
    /// **示例值**: "6977976687350924832"
    #[serde(
        rename = "office_location_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub office_location_id: Option<String>,
    /// 招聘来源，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：pre_hire
    ///
    /// - custom_api_name：recruitment_type
    ///
    /// **示例值**: "experienced_professionals"
    #[serde(
        rename = "recruitment_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub recruitment_type_id: Option<String>,
    /// 试用期时长
    ///
    /// **示例值**: "6"
    #[serde(
        rename = "probation_period",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub probation_period: Option<String>,
    /// 人员类型 ID，可以通过接口[批量查询人员类型](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/employee_type/list)获取
    ///
    /// **示例值**: "6977973225846343171"
    #[serde(
        rename = "employee_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employee_type_id: Option<String>,
    /// 雇佣类型， 枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：pre_hire
    ///
    /// - custom_api_name：employment_type
    ///
    /// **示例值**: "6977973225846343171"
    #[serde(
        rename = "employment_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employment_type_id: Option<String>,
    /// 工作邮箱
    ///
    /// **示例值**: "joshua@bytedance.com"
    #[serde(
        rename = "work_email",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub work_email: Option<String>,
    /// 期限类型， 枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：pre_hire
    ///
    /// - custom_api_name：duration_type
    ///
    /// **示例值**: "fixed_term"
    #[serde(
        rename = "duration_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub duration_type_id: Option<String>,
    /// 签订类型，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：pre_hire
    ///
    /// - custom_api_name：signing_type
    ///
    /// **示例值**: "new"
    #[serde(
        rename = "signing_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub signing_type_id: Option<String>,
    /// 入职方式，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：pre_hire
    ///
    /// - custom_api_name：onboarding_method
    ///
    /// **示例值**: "onsite"
    #[serde(
        rename = "entry_mode",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub entry_mode: Option<String>,
    /// 社保城市 ID，可以通过[批量查询地点](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/location/list)接口获取
    ///
    /// **示例值**: "6977976687350924833"
    #[serde(
        rename = "social_security_city_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub social_security_city_id: Option<String>,
    /// 合同类型，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：pre_hire
    ///
    /// - custom_api_name：contract_type
    ///
    /// **示例值**: "internship_agreement"
    #[serde(
        rename = "contract_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub contract_type: Option<String>,
    /// 公司 ID，可以通过[批量查询公司](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/company/list)接口获取
    ///
    /// **示例值**: "6738317738688661772"
    #[serde(
        rename = "company",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub company: Option<String>,
    /// 成本中心分摊信息
    #[serde(
        rename = "cost_center_rate",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub cost_center_rate: Vec<Option<JobDataCostCenterSubReq>>,
    /// 职等ID，可以通过[查询职等](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job_grade/query)接口获取
    ///
    /// **示例值**: "6738317738688661772"
    #[serde(
        rename = "job_grade_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_grade_id: Option<String>,
    /// pre_hire对象上的自定义字段，可以通过[获取自定义字段列表](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/query)接口获得
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<Option<ObjectFieldDataSubReq>>,
    /// 任职公司
    ///
    /// **示例值**: "6738317738688661772"
    #[serde(
        rename = "service_company",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub service_company: Option<String>,
    /// 排班，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：pre_hire
    ///
    /// - custom_api_name：work_shift
    ///
    /// **示例值**: "work_shift"
    #[serde(
        rename = "work_shift",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub work_shift: Option<String>,
    /// 薪资类型，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：pre_hire
    ///
    /// - custom_api_name：compensation_type
    ///
    /// **示例值**: "hourly"
    #[serde(
        rename = "compensation_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub compensation_type: Option<String>,
    /// 工作地点ID，可以通过[批量查询地点](https://open.larkoffice.com/document/server-docs/corehr-v1/organization-management/location/list)接口获取
    ///
    /// **示例值**: "6977976687350924833"
    #[serde(
        rename = "work_location_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub work_location_id: Option<String>,
    /// 入职地址ID，可以通过[批量查询地点](https://open.larkoffice.com/document/server-docs/corehr-v1/organization-management/location/list)接口获取
    ///
    /// **示例值**: "6977976687350924833"
    #[serde(
        rename = "onboarding_address_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub onboarding_address_id: Option<String>,
    /// 办公地址ID，，可以通过[批量查询地点](https://open.larkoffice.com/document/server-docs/corehr-v1/organization-management/location/list)接口获取
    ///
    /// **示例值**: "6977976687350924833"
    #[serde(
        rename = "office_address_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub office_address_id: Option<String>,
    /// 岗位ID
    ///
    /// **示例值**: "6977976687350924833"
    #[serde(
        rename = "position_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub position_id: Option<String>,
    /// 工作日历ID
    ///
    /// **示例值**: "6977976687350924833"
    #[serde(
        rename = "working_calendar_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub working_calendar_id: Option<String>,
    /// 工时制度，可以通过[批量查询工时制度](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/working_hours_type/list)接口获得
    ///
    /// **示例值**: "6890452208593372679"
    #[serde(
        rename = "working_hours_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub working_hours_type: Option<String>,
    /// 薪资组
    ///
    /// **示例值**: "6977976687350924833"
    #[serde(
        rename = "pay_group_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub pay_group_id: Option<String>,
    /// 入职流程ID
    ///
    /// **示例值**: "64377642c0ec3f23c79c6916"
    #[serde(
        rename = "flow_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub flow_id: Option<String>,
    /// 签到日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2024-12-31"
    #[serde(
        rename = "check_in_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub check_in_time: Option<String>,
    /// 签到方式，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：pre_hire
    ///
    /// - custom_api_name：onboarding_method
    ///
    /// **示例值**: "onsite"
    #[serde(
        rename = "check_in_method",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub check_in_method: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct NameSubReq {
    /// 全名
    ///
    /// **示例值**: "李一一"
    #[serde(
        rename = "full_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub full_name: Option<String>,
    /// 名
    ///
    /// **示例值**: "一"
    #[serde(
        rename = "first_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub first_name: Option<String>,
    /// 中间名
    ///
    /// **示例值**: "一"
    #[serde(
        rename = "middle_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub middle_name: Option<String>,
    /// 姓
    ///
    /// **示例值**: "李"
    #[serde(
        rename = "name_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name_primary: Option<String>,
    /// 名 - 本地文字
    ///
    /// **示例值**: "一"
    #[serde(
        rename = "local_first_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_first_name: Option<String>,
    /// 本地中间名
    ///
    /// **示例值**: "一"
    #[serde(
        rename = "local_middle_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_middle_name: Option<String>,
    /// 姓 - 本地文字
    ///
    /// **示例值**: "李"
    #[serde(
        rename = "local_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_primary: Option<String>,
    /// 国家 / 地区，可以通过接口[查询国家/地区信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获得
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: Option<String>,
    /// 本地文字的自定义姓名
    ///
    /// **示例值**: "李一一"
    #[serde(
        rename = "custom_local_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_local_name: Option<String>,
    /// 西方文字的自定义姓名
    ///
    /// **示例值**: "YiyiLi"
    #[serde(
        rename = "custom_western_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_western_name: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EducationInfoSubReq {
    /// 学校名称
    ///
    /// **示例值**: "长安大学"
    #[serde(
        rename = "school_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub school_name: Option<String>,
    /// 学历，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：education
    ///
    /// - custom_api_name：level_of_education
    ///
    /// **示例值**: "phd"
    #[serde(
        rename = "education",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub education: Option<String>,
    /// 开始时间，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2017-04-01"
    #[serde(
        rename = "start_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_time: Option<String>,
    /// 结束时间，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2018-04-01"
    #[serde(
        rename = "end_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_time: Option<String>,
    /// 专业
    ///
    /// **示例值**: "医学影像技术"
    #[serde(
        rename = "field_of_study",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_of_study: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct WorkExperienceSubReq {
    /// 公司名称
    ///
    /// **示例值**: "猎豹"
    #[serde(
        rename = "company_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub company_name: Option<String>,
    /// 开始时间，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2015-02-01"
    #[serde(
        rename = "start_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_time: Option<String>,
    /// 结束时间，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2017-02-01"
    #[serde(
        rename = "end_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_time: Option<String>,
    /// 岗位
    ///
    /// **示例值**: "产品经理"
    #[serde(
        rename = "job_title",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_title: Option<String>,
    /// 工作描述
    ///
    /// **示例值**: "app"
    #[serde(
        rename = "description",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub description: Option<String>,
    /// 部门
    ///
    /// **示例值**: "部门名称"
    #[serde(
        rename = "department",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub department: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct ResidentTaxForUpdateSubReq {
    /// 国家 / 地区ID，可以通过接口[查询国家/地区信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)获得
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "tax_country_region",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub tax_country_region: Option<String>,
    /// 居民身份，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name = resident_tax
    ///
    /// - custom_api_name = resident_status
    ///
    /// **示例值**: "tax_residence"
    #[serde(
        rename = "resident_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub resident_status: Option<String>,
    /// 纳税地址
    #[serde(
        rename = "tax_address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub tax_address: Option<AddressForUpdateSubReq>,
    /// 居民纳税身份说明
    ///
    /// **示例值**: "文本内容，对纳税身份的补充说明信息"
    #[serde(
        rename = "resident_status_specification",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub resident_status_specification: Option<String>,
    /// 年度
    ///
    /// **示例值**: "2006-01-01"
    #[serde(
        rename = "year_resident_tax",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub year_resident_tax: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct DependentForUpdateSubReq {
    /// 关系 ，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：dependent
    ///
    /// - custom_api_name：relationship_with_dependent
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "parent"
    #[serde(
        rename = "relationship",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub relationship: String,
    /// 性别 ，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：person
    ///
    /// - custom_api_name：gender
    ///
    /// **示例值**: "male"
    #[serde(
        rename = "gender",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub gender: Option<String>,
    /// 生日
    ///
    /// **示例值**: "2020-01-01"
    #[serde(
        rename = "date_of_birth",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub date_of_birth: Option<String>,
    /// 证件号码
    ///
    /// **数据校验规则**：
    ///
    /// - **长度范围**: `1` 字符- `1000` 字符
    #[serde(
        rename = "national_ids",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_ids: Vec<Option<NationalIdForUpdateSubReq>>,
    /// 配偶工作状态，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：dependent
    ///
    /// - custom_api_name：spouses_working_status
    ///
    /// **示例值**: "working"
    #[serde(
        rename = "spouses_working_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub spouses_working_status: Option<String>,
    /// 包含家属医疗保险
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_this_person_covered_by_health_insurance",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_this_person_covered_by_health_insurance: Option<bool>,
    /// 允许家属抵扣税款
    ///
    /// **示例值**: "false"
    #[serde(
        rename = "is_this_person_allowed_for_tax_deduction",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_this_person_allowed_for_tax_deduction: Option<bool>,
    /// 家庭成员姓名
    ///
    /// **示例值**: "王冰"
    #[serde(
        rename = "dependent_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub dependent_name: Option<String>,
    /// 工作单位
    ///
    /// **示例值**: "海淀区交警大队"
    #[serde(
        rename = "employer",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employer: Option<String>,
    /// 岗位信息
    ///
    /// **示例值**: "保安"
    #[serde(
        rename = "job",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job: Option<String>,
    /// 电话
    #[serde(
        rename = "phone",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone: Option<PhoneForUpdateSubReq>,
    /// 联系地址
    #[serde(
        rename = "address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address: Option<AddressForUpdateSubReq>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct BankAccountForUpdateSubReq {
    /// 银行名称
    ///
    /// **示例值**: "中国农业银行"
    #[serde(
        rename = "bank_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_name: Option<String>,
    /// 支行名称
    ///
    /// **示例值**: "中国农业银行支行"
    #[serde(
        rename = "branch_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub branch_name: Option<String>,
    /// 银行账号
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6231200000001223"
    #[serde(
        rename = "bank_account_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_number: String,
    /// 开户人姓名
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "孟十五"
    #[serde(
        rename = "account_holder",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub account_holder: String,
    /// 国家/地区，可以通过[查询国家/地区信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)接口获取
    ///
    /// **示例值**: "6862995745889322510"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: Option<String>,
    /// 银行卡用途，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：bank_account_usage
    ///
    /// - object_api_name：bank_account
    ///
    /// **数据校验规则**：
    ///
    /// - **长度范围**: `0` 字符- `100` 字符
    #[serde(
        rename = "bank_account_usages",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_usages: Vec<Option<String>>,
    /// 银行卡类型，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：bank_account_type
    ///
    /// - object_api_name：bank_account
    ///
    /// **示例值**: "checking"
    #[serde(
        rename = "bank_account_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub bank_account_type: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct NationalIdForUpdateSubReq {
    /// 国家/地区，可以通过[查询国家/地区信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)接口获取
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 国家证件类型，可以通过[批量查询国家证件类型](https://open.larkoffice.com/document/server-docs/corehr-v1/basic-infomation/national_id_type/list)接口获取
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6863330041896371725"
    #[serde(
        rename = "national_id_type_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_type_id: String,
    /// 证件号码
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "1231131333"
    #[serde(
        rename = "national_id_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub national_id_number: String,
    /// 证件签发日期
    ///
    /// **示例值**: "2020-04-01"
    #[serde(
        rename = "issue_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub issue_date: Option<String>,
    /// 证件到期日期
    ///
    /// **示例值**: "2020-05-21"
    #[serde(
        rename = "expiration_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub expiration_date: Option<String>,
    /// 证件签发机构
    ///
    /// **示例值**: "北京市公安局"
    #[serde(
        rename = "issued_by",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub issued_by: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PersonalProfileForUpdateSubReq {
    /// 资料类型，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：personal_profile
    ///
    /// - custom_api_name：profile_type
    ///
    /// **示例值**: "profile_type_1_101_101011"
    #[serde(
        rename = "personal_profile_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub personal_profile_type: Option<String>,
    /// 资料文件列表
    ///
    /// **数据校验规则**：
    ///
    /// - **长度范围**: `0` 字符- `1000` 字符
    #[serde(
        rename = "files",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub files: Vec<Option<FileSubReq>>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EmergencyContactForUpdateSubReq {
    /// 紧急联系人姓名
    ///
    /// **示例值**: "王冰"
    #[serde(
        rename = "legal_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub legal_name: Option<String>,
    /// 紧急联系人与本人亲属关系，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：emergency_contact
    ///
    /// - custom_api_name：relationship
    ///
    /// **示例值**: "parent"
    #[serde(
        rename = "relationship",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub relationship: Option<String>,
    /// 电话
    ///
    /// **数据校验规则**：
    ///
    /// - **长度范围**: `0` 字符- `1000` 字符
    #[serde(
        rename = "phones",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phones: Vec<Option<PhoneForUpdateSubReq>>,
    /// 地址
    #[serde(
        rename = "address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address: Option<AddressForUpdateSubReq>,
    /// 邮箱
    #[serde(
        rename = "email",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email: Option<EmailForUpdateSubReq>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct AddressForUpdateSubReq {
    /// 国家 / 地区，可以通过[查询国家/地区信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region/search)接口获取
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6862995757234914824"
    #[serde(
        rename = "country_region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub country_region_id: String,
    /// 主要行政区，可以通过[查询省份/行政区信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/basic_info-country_region_subdivision/search)接口获取
    ///
    /// **示例值**: "6863326815667095047"
    #[serde(
        rename = "region_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub region_id: Option<String>,
    /// 地址行 1（非拉丁语系的本地文字）
    ///
    /// **示例值**: "北京市海淀区"
    #[serde(
        rename = "local_address_line1",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line1: Option<String>,
    /// 地址行 2（非拉丁语系的本地文字）
    ///
    /// **示例值**: "上海市杨浦区"
    #[serde(
        rename = "local_address_line2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line2: Option<String>,
    /// 地址行 3（非拉丁语系的本地文字）
    ///
    /// **示例值**: "北京市房山区"
    #[serde(
        rename = "local_address_line3",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line3: Option<String>,
    /// 地址行 4（非拉丁语系的本地文字）
    ///
    /// **示例值**: "天津滨海高新区"
    #[serde(
        rename = "local_address_line4",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line4: Option<String>,
    /// 地址行 5（非拉丁语系的本地文字）
    ///
    /// **示例值**: "成都市成华区"
    #[serde(
        rename = "local_address_line5",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line5: Option<String>,
    /// 地址行 6（非拉丁语系的本地文字）
    ///
    /// **示例值**: "深圳市南山区"
    #[serde(
        rename = "local_address_line6",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line6: Option<String>,
    /// 地址行 7（非拉丁语系的本地文字）
    ///
    /// **示例值**: "南京市鼓楼区"
    #[serde(
        rename = "local_address_line7",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line7: Option<String>,
    /// 地址行 8（非拉丁语系的本地文字）
    ///
    /// **示例值**: "杭州市滨江区"
    #[serde(
        rename = "local_address_line8",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line8: Option<String>,
    /// 地址行 9（非拉丁语系的本地文字）
    ///
    /// **示例值**: "郑州市中原区"
    #[serde(
        rename = "local_address_line9",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub local_address_line9: Option<String>,
    /// 邮政编码
    ///
    /// **示例值**: "611530"
    #[serde(
        rename = "postal_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub postal_code: Option<String>,
    /// 地址类型，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：address
    ///
    /// - custom_api_name：address_type
    ///
    /// **是否必填**: 是
    ///
    /// **数据校验规则**：
    ///
    /// - **长度范围**: `1` 字符- `1000` 字符
    #[serde(
        rename = "address_types",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub address_types: Vec<Option<String>>,
    /// 主要地址
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_primary: bool,
    /// 公开地址
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_public",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_public: bool,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct ObjectFieldDataSubReq {
    /// 字段名
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "custom_field_1__c"
    #[serde(
        rename = "field_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_name: String,
    /// 字段值，是json转义后的字符串，根据元数据定义不同，字段格式不同(123, 123.23, true, [\"id1\",\"id2\], 2006-01-02 15:04:05])
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "Sandy"
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct JobDataCostCenterSubReq {
    /// 成本中心 ID，可以通过[搜索成本中心信息](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/cost_center/search)接口获取
    ///
    /// **示例值**: "6950635856373745165"
    #[serde(
        rename = "cost_center_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub cost_center_id: Option<String>,
    /// 分摊比例，大于0小于等于100的正整数
    ///
    /// **示例值**: "100"
    #[serde(
        rename = "rate",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub rate: Option<i64>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct PhoneForUpdateSubReq {
    /// 手机区号，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：phone
    ///
    /// - custom_api_name：international_area_code
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "86_china"
    #[serde(
        rename = "international_area_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub international_area_code: String,
    /// 电话号码
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "010-12345678"
    #[serde(
        rename = "phone_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_number: String,
    /// 设备类型，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：phone
    ///
    /// - custom_api_name：device_type
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "mobile_phone"
    #[serde(
        rename = "device_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub device_type: String,
    /// 电话用途，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - custom_api_name：phone_usage
    ///
    /// - object_api_name：phone
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "home"
    #[serde(
        rename = "phone_usage",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub phone_usage: String,
    /// 主要电话，若有多个电话，只能有一个电话的「is_primary」为true
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_primary: bool,
    /// 公开电话
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_public",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_public: bool,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct EmailForUpdateSubReq {
    /// 邮箱地址
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "1234567@bytedance.com"
    #[serde(
        rename = "email",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email: String,
    /// 是否为主要邮箱，若有多个邮箱，只能有一个邮箱的「is_primary」为true
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_primary",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_primary: bool,
    /// 是否为公开邮箱
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "is_public",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_public: bool,
    /// 邮箱用途，枚举值可查询[获取字段详情](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/custom_field/get_by_param)接口获取，按如下参数查询即可：
    ///
    /// - object_api_name：email
    ///
    /// - custom_api_name：email_usage
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "work"
    #[serde(
        rename = "email_usage",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email_usage: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct FileSubReq {
    /// 上传文件ID，可以通过[上传文件](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/person/upload)接口获取
    ///
    /// **示例值**: "6655aa1b2ec326f983b91f9d_f9974583040c4b05ae71f92f5df16bbc"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, lark_bot_sdk_macros::ApiBaseResp)]
struct CreateCoreHrPreHireRespInner {
    #[serde(flatten)]
    data: Option<CreateCoreHrPreHireResp>,
    #[serde(flatten)]
    base: BaseResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
pub struct CreateCoreHrPreHireResp {
    /// \-
    #[serde(
        rename = "data",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub data: DataSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct DataSubResp {
    /// 待入职 ID
    ///
    /// **示例值**: "6966234786251671056"
    #[serde(
        rename = "pre_hire_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub pre_hire_id: String,
}

#[cfg(feature = "test-util")]
mod test_utils {
    use std::sync::Arc;

    use self::gen::core_hr::CoreHrServiceMocker;
    use crate::core::mocker::*;

    use super::*;
    use crate::api::*;
    use crate::core::model::*;

    pub struct Mocker;

    pub trait MockFunc:
        Fn(CreateCoreHrPreHireReq) -> Result<(CreateCoreHrPreHireResp, CommonResponse), Error>
        + Send
        + Sync
        + 'static
    {
    }
    impl<
            T: Fn(
                    CreateCoreHrPreHireReq,
                ) -> Result<(CreateCoreHrPreHireResp, CommonResponse), Error>
                + Send
                + Sync
                + 'static,
        > MockFunc for T
    {
    }

    impl<'c, IStore: Store, IClient: HttpClient> CoreHrServiceMocker<'c, IStore, IClient> {
        pub fn mock_create_core_hr_pre_hire<F: MockFunc>(
            &self,
            f: F,
        ) -> MockerBuilder<Mocker, CreateCoreHrPreHireReq, CreateCoreHrPreHireResp, Arc<dyn MockFunc>>
        {
            MockerBuilder::new(self.cli.instance_id, Arc::new(f))
        }

        pub(super) fn get_mock_create_core_hr_pre_hire(
            &self,
            req: &CreateCoreHrPreHireReq,
        ) -> Option<Arc<dyn MockFunc>> {
            do_mock::<Mocker, CreateCoreHrPreHireReq, CreateCoreHrPreHireResp, Arc<dyn MockFunc>>(
                self.cli.instance_id,
                req,
            )
        }
    }
}

#[cfg(feature = "test-util")]
#[cfg(test)]
mod test {
    use crate::{
        api::gen::core_hr::create_core_hr_pre_hire::{
            CreateCoreHrPreHireReq, CreateCoreHrPreHireResp, CreateCoreHrPreHireRespInner,
        },
        core::{model::CommonResponse, Lark},
    };

    #[tokio::test]
    async fn test_mock() {
        let lark = Lark::new("".to_owned(), "".into());
        let mocker = lark
            .core_hr()
            .mock()
            .mock_create_core_hr_pre_hire(|_| {
                Ok((
                    CreateCoreHrPreHireResp::default(),
                    CommonResponse::default(),
                ))
            })
            .build();
        let res = lark
            .core_hr()
            .create_core_hr_pre_hire(CreateCoreHrPreHireReq::default())
            .await;
        assert!(res.is_ok());
        mocker.clear();
        let res = lark
            .core_hr()
            .create_core_hr_pre_hire(CreateCoreHrPreHireReq::default())
            .await;
        assert!(res.is_err());
    }

    const REQ: &str = r#"{
    "basic_info": {
        "name": {
            "full_name": "李一一",
            "first_name": "一",
            "middle_name": "一",
            "name_primary": "李",
            "local_first_name": "一",
            "local_middle_name": "一",
            "local_primary": "李"
        },
        "phone_number": "31123127",
        "international_area_code": "86_china",
        "email": "1234567@bytedance.com",
        "date_of_birth": "2011-99-99",
        "personal_id_number": "31123127",
        "date_entered_workforce": "2100-09-09",
        "gender_id": "male",
        "nationality_id": "6862995757234914824",
        "home_address": "home addr",
        "worker_id": "6862995757234914824"
    },
    "offer_info": {
        "offer_id": "7032210902531327521",
        "offer_hr_id": "7032210902531327521",
        "department_id": "7147562782945478177",
        "direct_leader_id": "7032210902531327521",
        "job_id": "6977976735715378724",
        "job_family_id": "6977972856625939999",
        "job_level_id": "6977971894960145950",
        "job_title": "java",
        "probation_start_date": "2022-07-29",
        "probation_end_date": "2023-04-07",
        "contract_start_date": "2022-10-08",
        "contract_end_date": "2025-10-07",
        "onboarding_date": "2022-10-08",
        "onboarding_location_id": "6977976687350924832",
        "office_location_id": "6977976687350924832",
        "recruitment_type_id": "experienced_professionals",
        "probation_period": "6",
        "employee_type_id": "6977973225846343171",
        "employment_type_id": "6977973225846343171",
        "work_email": "joshua@bytedance.com",
        "duration_type_id": "6977973225846343171",
        "signing_type_id": "6738317738688661772",
        "entry_mode": "1",
        "social_security_city_id": "xxx",
        "contract_type": "6738317738688661772",
        "company": "6738317738688661772",
        "custom_fields": [
            {
                "field_name": "name",
                "value": "Sandy"
            }
        ]
    },
    "education_info": [
        {
            "school_name": "长安大学",
            "education": "phd",
            "start_time": "2017-04-01",
            "end_time": "2018-04-01",
            "field_of_study": "医学影像技术"
        }
    ],
    "work_experience": [
        {
            "company_name": "猎豹",
            "start_time": "2015-02-01",
            "end_time": "2017-02-01",
            "job_title": "产品经理",
            "description": "app"
        }
    ],
    "ats_application_id": "7140946969586010376",
    "out_biz_id": "7140946969586010376"
}"#;

    #[test]
    fn test_req() {
        if REQ == "{}" {
            return;
        }
        if let Err(e) = serde_json::from_str::<super::CreateCoreHrPreHireReqBody>(REQ) {
            panic!("{}", e);
        }
    }

    const RESP: &str = r#"{
    "code": 0,
    "msg": "success",
    "data": {
        "pre_hire_id": "6966234786251671053"
    }
}"#;
    #[test]
    fn test_resp() {
        let res = serde_json::from_str::<CreateCoreHrPreHireRespInner>(RESP);
        if let Err(e) = res {
            panic!("{}", e);
        }
        if let Ok(v) = serde_json::from_str::<serde_json::Value>(RESP) {
            if v.get("data").is_some() {
                assert!(res.unwrap().data.is_some());
            }
        }
    }
}

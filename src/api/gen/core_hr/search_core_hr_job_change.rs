//! doc url: <https://open.larkoffice.com/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job_change/search>
// Code generated by gen_api. DO NOT EDIT.

use serde::{Deserialize, Serialize};

use crate::api::BaseResp;
use crate::api::HasBaseResp;
use crate::core::model::{ApiRequest, CommonResponse, MethodOption, ReqParam, StreamReqParam};
use crate::{
    core::{http_client::HttpClient, store::Store},
    error::Error,
};

use crate::api::gen::core_hr::CoreHrService;

impl<'c, IStore: Store, IClient: HttpClient> CoreHrService<'c, IStore, IClient> {
    /// **api 版本: 2024-07-15T11:45:37+00:00**
    ///
    /// ## 搜索异动信息
    ///
    /// 搜索异动信息，该接口会按照应用拥有的「员工数据」的权限范围返回数据，请确定在「开发者后台 - 权限管理 - 数据权限」中有申请「员工资源」权限范围
    ///

    ///
    /// doc: <https://open.larkoffice.com/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job_change/search>
    ///
    /// new doc: <https://open.larkoffice.com/document/server-docs/corehr-v1/job_change/search>
    ///
    /// api url: <https://open.feishu.cn/document_portal/v1/document/get_detail?fullPath=%2Fserver-docs%2Fcorehr-v1%2Fjob_change%2Fsearch>
    pub async fn search_core_hr_job_change(
        &self,
        req: SearchCoreHrJobChangeReq,
    ) -> Result<(SearchCoreHrJobChangeResp, CommonResponse), Error> {
        self.search_core_hr_job_change_with_opt(req, Default::default())
            .await
    }

    /// 参见 [search_core_hr_job_change](#method.search_core_hr_job_change) 函数
    pub async fn search_core_hr_job_change_with_opt(
        &self,
        req: SearchCoreHrJobChangeReq,
        method_option: MethodOption,
    ) -> Result<(SearchCoreHrJobChangeResp, CommonResponse), Error> {
        #[cfg(feature = "test-util")]
        {
            if let Some(f) = self.mock().get_mock_search_core_hr_job_change(&req) {
                tracing::info!("[lark] CoreHr#SearchCoreHrJobChange **mocking** api");
                return f(req);
            }
        }

        tracing::info!("[lark] CoreHr#SearchCoreHrJobChange call api");

        let req = ApiRequest {
            scope: "CoreHr",
            api: "SearchCoreHrJobChange",
            method: http::Method::POST,
            url: String::new()
                + self.cli.open_base_url.as_ref()
                + "/open-apis/corehr/v2/job_changes/search",
            param_data: req.gen_param(),
            method_option,
            need_tenant_access_token: true,
            ..Default::default()
        };

        let (resp, common_resp): (SearchCoreHrJobChangeRespInner, _) = self.cli.do_req(req).await?;
        let data = match resp.data {
            Some(data) => data,
            None => {
                return Err(Error::ErrResponse(
                    anyhow::anyhow!("missing response data"),
                    common_resp,
                ));
            }
        };
        Ok((data, common_resp))
    }
}

#[derive(Debug, Serialize, Deserialize, Clone, Default, lark_bot_sdk_macros::ApiReqParams)]
pub struct SearchCoreHrJobChangeReq {
    /// 分页大小，最大 100
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "100"
    #[api(kind = "query", name = "page_size", v_type = "var", option = "false")]
    pub page_size: i64,
    /// 分页标记，第一次请求不填，表示从头开始遍历；分页查询结果还有更多项时会同时返回新的 page_token，下次遍历可采用该 page_token 获取查询结果
    ///
    /// **示例值**: "6891251722631890445"
    #[api(kind = "query", name = "page_token", v_type = "var", option = "false")]
    pub page_token: String,
    /// 用户 ID 类型
    ///
    /// **示例值**: "open_id"
    ///
    /// **可选值**:
    ///
    /// `open_id`: 标识一个用户在某个应用中的身份。同一个用户在不同应用中的 Open ID 不同。[了解更多：如何获取 Open ID](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-openid)
    ///
    /// `union_id`: 标识一个用户在某个应用开发商下的身份。同一用户在同一开发商下的应用中的 Union ID 是相同的，在不同开发商下的应用中的 Union ID 是不同的。通过 Union ID，应用开发商可以把同个用户在多个应用中的身份关联起来。[了解更多：如何获取 Union ID？](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-union-id)
    ///
    /// `user_id`: 标识一个用户在某个租户内的身份。同一个用户在租户 A 和租户 B 内的 User ID 是不同的。在同一个租户内，一个用户的 User ID 在所有应用（包括商店应用）中都保持一致。User ID 主要用于在不同的应用间打通用户数据。[了解更多：如何获取 User ID？](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-user-id)
    ///
    /// `people_corehr_id`: 以飞书人事的 ID 来识别用户
    #[api(
        kind = "query",
        name = "user_id_type",
        v_type = "var",
        option = "false"
    )]
    pub user_id_type: String,
    /// 此次调用中使用的部门 ID 类型
    ///
    /// **示例值**: "open_department_id"
    ///
    /// **可选值**:
    ///
    /// `open_department_id`: 以 open_department_id 来标识部门
    ///
    /// `department_id`: 以 department_id 来标识部门
    ///
    /// `people_corehr_department_id`: 以 people_corehr_department_id 来标识部门
    #[api(
        kind = "query",
        name = "department_id_type",
        v_type = "var",
        option = "false"
    )]
    pub department_id_type: String,
    /// 雇员 ID 列表，可通过[【搜索员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/search)接口获取
    ///
    /// **数据校验规则**：
    ///
    /// - **最大长度**: `30` 字符
    #[api(kind = "body", name = "employment_ids")]
    pub employment_ids: Vec<Option<String>>,
    /// 异动记录 ID 列表，可通过接口
    ///
    /// [搜索异动信息
    ///
    /// ](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job_change/search)获取详细信息
    ///
    /// **数据校验规则**：
    ///
    /// - **最大长度**: `10` 字符
    #[api(kind = "body", name = "job_change_ids")]
    pub job_change_ids: Vec<Option<String>>,
    /// 异动状态，多个状态之间为「或」的关系
    ///
    /// **示例值**: "Approved"
    ///
    /// **数据校验规则**：
    ///
    /// - **最大长度**: `10` 字符
    #[api(kind = "body", name = "statuses")]
    pub statuses: Vec<Option<String>>,
    /// 异动生效日期 - 搜索范围开始，需要与搜索范围结束一同使用，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2022-01-01"
    #[api(kind = "body", name = "effective_date_start")]
    pub effective_date_start: Option<String>,
    /// 异动生效日期 - 搜索范围结束，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2022-01-01"
    #[api(kind = "body", name = "effective_date_end")]
    pub effective_date_end: Option<String>,
    /// 异动更新时间 - 搜索范围开始，需要与搜索范围结束一同使用，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "1704084635000"
    #[api(kind = "body", name = "updated_time_start")]
    pub updated_time_start: Option<String>,
    /// 异动更新时间 - 搜索范围结束，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "1704084635000"
    #[api(kind = "body", name = "updated_time_end")]
    pub updated_time_end: Option<String>,
}

#[derive(Debug, Serialize, Deserialize, Clone, lark_bot_sdk_macros::ApiBaseResp)]
struct SearchCoreHrJobChangeRespInner {
    #[serde(flatten)]
    data: Option<SearchCoreHrJobChangeResp>,
    #[serde(flatten)]
    base: BaseResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
pub struct SearchCoreHrJobChangeResp {
    /// \-
    #[serde(
        rename = "data",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub data: DataSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct DataSubResp {
    /// 员工异动列表
    #[serde(
        rename = "items",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub items: Vec<JobChangeSubResp>,
    /// 是否还有更多项
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "has_more",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub has_more: bool,
    /// 分页标记，当 has_more 为 true 时，会同时返回新的 page_token，否则不返回 page_token
    ///
    /// **示例值**: "6891251722631890445"
    #[serde(
        rename = "page_token",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub page_token: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct JobChangeSubResp {
    /// 异动记录 id，可通过接口
    ///
    /// [搜索异动信息
    ///
    /// ](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job_change/search)获取详细信息
    ///
    /// **示例值**: "6991776076699549697"
    #[serde(
        rename = "job_change_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub job_change_id: String,
    /// 雇员 id，可通过[【搜索员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/search)接口获取
    ///
    /// **示例值**: "ou_a294793e8fa21529f2a60e3e9de45520"
    #[serde(
        rename = "employment_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employment_id: String,
    /// 异动状态
    ///
    /// **示例值**: "Approved"
    ///
    /// **可选值**:
    ///
    /// `Approving`: 审批中
    ///
    /// `Approved`: 审批通过
    ///
    /// `Transformed`: 已异动
    ///
    /// `Rejected`: 已拒绝
    ///
    /// `Cancelled`: 已撤销
    ///
    /// `NoNeedApproval`: 无需审批
    #[serde(
        rename = "status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub status: String,
    /// 异动类型，可通过接口
    ///
    /// [获取异动类型列表
    ///
    /// ](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/transfer_type/query)获取
    ///
    /// **示例值**: "direct_leader_change"
    #[serde(
        rename = "transfer_type_unique_identifier",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub transfer_type_unique_identifier: String,
    /// 异动原因，可通过接口
    ///
    /// [获取异动原因列表
    ///
    /// ](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/transfer_reason/query)获取详细信息
    ///
    /// **示例值**: "involuntary_transfer"
    #[serde(
        rename = "transfer_reason_unique_identifier",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub transfer_reason_unique_identifier: String,
    /// 异动流程 id，可通过【流程-获取单个流程详情】接口获取
    ///
    /// **示例值**: "6991776078461142564"
    #[serde(
        rename = "process_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub process_id: String,
    /// 生效时间，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2022-03-01"
    #[serde(
        rename = "effective_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub effective_date: String,
    /// 创建时间，毫秒级时间戳
    ///
    /// **示例值**: "1627899724000"
    #[serde(
        rename = "created_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub created_time: String,
    /// 更新时间，毫秒级时间戳
    ///
    /// **示例值**: "1647434443000"
    #[serde(
        rename = "updated_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub updated_time: String,
    /// 异动详细信息
    #[serde(
        rename = "transfer_info",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub transfer_info: TransferInfoSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TransferInfoSubResp {
    /// 备注
    ///
    /// **示例值**: "异动详情"
    #[serde(
        rename = "remark",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub remark: String,
    /// offer信息
    ///
    /// **示例值**: "优质人才，加急处理"
    #[serde(
        rename = "offer_info",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub offer_info: String,
    /// 是否撤销虚线上级
    ///
    /// **示例值**: "true"
    #[serde(
        rename = "target_dotted_manager_clean",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_dotted_manager_clean: bool,
    /// 是否有试用期
    ///
    /// **示例值**: "false"
    #[serde(
        rename = "probation_exist",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub probation_exist: bool,
    /// 原部门，可通过[【批量查询部门】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/department/batch_get)接口获取
    ///
    /// **示例值**: "6966236933198579208"
    #[serde(
        rename = "original_department",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_department: String,
    /// 新部门，可通过[【批量查询部门】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/department/batch_get)接口获取
    ///
    /// **示例值**: "6966236933198579208"
    #[serde(
        rename = "target_department",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_department: String,
    /// 新部门（新建部门审批完成前会返回 td_xxx 的临时 ID），可通过[【批量查询部门】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/department/batch_get)接口获取
    ///
    /// **示例值**: "6966236933198579208"
    #[serde(
        rename = "target_draft_department",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_draft_department: String,
    /// 原部门全路径
    #[serde(
        rename = "original_department_id_path",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_department_id_path: Vec<OrgdraftDepartmentIdSubResp>,
    /// 新部门全路径
    #[serde(
        rename = "target_department_id_path",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_department_id_path: Vec<OrgdraftDepartmentIdSubResp>,
    /// 原工作地点，可通过[【批量查询地点】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/location/list)接口获取
    ///
    /// **示例值**: "6967271100992587295"
    #[serde(
        rename = "original_work_location",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_work_location: String,
    /// 新工作地点，可通过[【批量查询地点】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/location/list)接口获取
    ///
    /// **示例值**: "6967271100992587295"
    #[serde(
        rename = "target_work_location",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_work_location: String,
    /// 原直属上级，可通过[【搜索员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/search)接口获取
    ///
    /// **示例值**: "6974641477444060708"
    #[serde(
        rename = "original_direct_manager",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_direct_manager: String,
    /// 新直属上级，可通过[【搜索员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/search)接口获取
    ///
    /// **示例值**: "7013619729281713671"
    #[serde(
        rename = "target_direct_manager",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_direct_manager: String,
    /// 原虚线上级，可通过[【搜索员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/search)接口获取
    ///
    /// **示例值**: "6974648866876573198"
    #[serde(
        rename = "original_dotted_manager",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_dotted_manager: String,
    /// 新虚线上级，可通过[【搜索员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/search)接口获取
    ///
    /// **示例值**: "7013328578351842852"
    #[serde(
        rename = "target_dotted_manager",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_dotted_manager: String,
    /// 原职务，
    ///
    /// 可通过[【批量查询职务】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job/list)接口获取
    ///
    /// **示例值**: "6969469398088287751"
    #[serde(
        rename = "original_job",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_job: String,
    /// 新职务，
    ///
    /// 可通过[【批量查询职务】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job/list)接口获取
    ///
    /// **示例值**: "6969469557836760606"
    #[serde(
        rename = "target_job",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_job: String,
    /// 原序列，可通过[【批量查询序列】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_family/list)接口获取
    ///
    /// **示例值**: "6967287547462419975"
    #[serde(
        rename = "original_job_family",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_job_family: String,
    /// 新序列，可通过[【批量查询序列】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_family/list)接口获取
    ///
    /// **示例值**: "6967287547462419975"
    #[serde(
        rename = "target_job_family",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_job_family: String,
    /// 原职级，
    ///
    /// 可通过[【批量查询职级】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_level/list)接口获取
    ///
    /// **示例值**: "6972085707674355214"
    #[serde(
        rename = "original_job_level",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_job_level: String,
    /// 新级别，
    ///
    /// 可通过[【批量查询职级】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/job_level/list)接口获取
    ///
    /// **示例值**: "6972085707674355214"
    #[serde(
        rename = "target_job_level",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_job_level: String,
    /// 原人员类型，可通过[【批量查询人员类型】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/employee_type/list)接口获取
    ///
    /// **示例值**: "6968386026792289828"
    #[serde(
        rename = "original_workforce_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_workforce_type: String,
    /// 新人员类型，可通过[【批量查询人员类型】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/employee_type/list)接口获取
    ///
    /// **示例值**: "7036268995372303885"
    #[serde(
        rename = "target_workforce_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_workforce_type: String,
    /// 原公司，详细信息可通过[【批量查询公司】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/company/list)接口查询获得
    ///
    /// **示例值**: "6974659700705068581"
    #[serde(
        rename = "original_company",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_company: String,
    /// 新公司，详细信息可通过[【批量查询公司】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/company/list)接口查询获得
    ///
    /// **示例值**: "6974659700705068581"
    #[serde(
        rename = "target_company",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_company: String,
    /// 原合同编号，可通过[【批量查询合同】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/contract/list)接口获取详细信息
    ///
    /// **示例值**: "55332"
    #[serde(
        rename = "original_contract_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_contract_number: String,
    /// 新合同编号，可通过[【批量查询合同】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/contract/list)接口获取详细信息
    ///
    /// **示例值**: "55333"
    #[serde(
        rename = "target_contract_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_contract_number: String,
    /// 原合同类型，可通过[【批量查询合同】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/contract/list)接口获取详细信息
    ///
    /// **示例值**: "labor_contract"
    #[serde(
        rename = "original_contract_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_contract_type: String,
    /// 新合同类型，可通过[【批量查询合同】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/contract/list)接口获取详细信息
    ///
    /// **示例值**: "labor_contract"
    #[serde(
        rename = "target_contract_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_contract_type: String,
    /// 原期限类型，可通过[【批量查询合同】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/contract/list)接口获取详细信息
    ///
    /// **示例值**: "fixed_term"
    #[serde(
        rename = "original_duration_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_duration_type: String,
    /// 新期限类型，可通过[【批量查询合同】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/contract/list)接口获取详细信息
    ///
    /// **示例值**: "fixed_term"
    #[serde(
        rename = "target_duration_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_duration_type: String,
    /// 原签订类型，可通过[【批量查询合同】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/contract/list)接口获取详细信息
    ///
    /// **示例值**: "new"
    #[serde(
        rename = "original_signing_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_signing_type: String,
    /// 新签订类型，可通过[【批量查询合同】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/contract/list)接口获取详细信息
    ///
    /// **示例值**: "new"
    #[serde(
        rename = "target_signing_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_signing_type: String,
    /// 原合同开始日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2021-07-01"
    #[serde(
        rename = "original_contract_start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_contract_start_date: String,
    /// 新合同开始日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2021-07-01"
    #[serde(
        rename = "target_contract_start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_contract_start_date: String,
    /// 原合同结束日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2024-07-01"
    #[serde(
        rename = "original_contract_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_contract_end_date: String,
    /// 新合同结束日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2024-07-01"
    #[serde(
        rename = "target_contract_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_contract_end_date: String,
    /// 原工时制度可通过[【批量查询工时制度】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/working_hours_type/list)接口获取
    ///
    /// **示例值**: "6969087376740206087"
    #[serde(
        rename = "original_working_hours_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_working_hours_type: String,
    /// 新工时制度，可通过[【批量查询工时制度】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/working_hours_type/list)接口获取
    ///
    /// **示例值**: "6969087376740206087"
    #[serde(
        rename = "target_working_hours_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_working_hours_type: String,
    /// 原工作日历，开通休假服务后联系管理员获取。
    ///
    /// **示例值**: "6969087376740236087"
    #[serde(
        rename = "original_working_calendar",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_working_calendar: String,
    /// 新工作日历，开通休假服务后联系管理员获取。
    ///
    /// **示例值**: "6969087376740236087"
    #[serde(
        rename = "target_working_calendar",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_working_calendar: String,
    /// 原试用期预计结束日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2021-11-17"
    #[serde(
        rename = "original_probation_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_probation_end_date: String,
    /// 新试用期预计结束日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2021-11-17"
    #[serde(
        rename = "target_probation_end_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_probation_end_date: String,
    /// 原周工作时长
    ///
    /// **示例值**: "162"
    #[serde(
        rename = "original_weekly_working_hours",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_weekly_working_hours: String,
    /// 新周工作时长
    ///
    /// **示例值**: "160"
    #[serde(
        rename = "target_weekly_working_hours",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_weekly_working_hours: String,
    /// 原排班
    ///
    /// **示例值**: "work_shift"
    #[serde(
        rename = "original_work_shift",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_work_shift: String,
    /// 新排班
    ///
    /// **示例值**: "non_work_shift"
    #[serde(
        rename = "target_work_shift",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_work_shift: String,
    /// 原成本中心分摊方式
    #[serde(
        rename = "original_cost_center_rate",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_cost_center_rate: Vec<JobDataCostCenterSubResp>,
    /// 新成本中心分摊方式
    #[serde(
        rename = "target_cost_center_rate",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_cost_center_rate: Vec<JobDataCostCenterSubResp>,
    /// 原工作信息
    #[serde(
        rename = "original_employment_change",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_employment_change: TranferEmploymentInfoSubResp,
    /// 新工作信息
    #[serde(
        rename = "target_employment_change",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_employment_change: TranferEmploymentInfoSubResp,
    /// 原职等，可通过[【查询职等】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job_grade/query)接口获取
    ///
    /// **示例值**: "7289005963599693366"
    #[serde(
        rename = "original_job_grade",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_job_grade: String,
    /// 新职等，可通过[【查询职等】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/job_grade/query)接口获取
    ///
    /// **示例值**: "7289005963599693366"
    #[serde(
        rename = "target_job_grade",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_job_grade: String,
    /// 原薪资类型
    ///
    /// **示例值**: "hourly"
    #[serde(
        rename = "original_compensation_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_compensation_type: String,
    /// 新薪资类型
    ///
    /// **示例值**: "salary"
    #[serde(
        rename = "target_compensation_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_compensation_type: String,
    /// 原任职公司，详细信息可通过[【批量查询公司】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/company/list)接口查询获得
    ///
    /// **示例值**: "7289005963599693367"
    #[serde(
        rename = "original_service_company",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_service_company: String,
    /// 新任职公司，详细信息可通过[【批量查询公司】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/company/list)接口查询获得
    ///
    /// **示例值**: "7289005963599693367"
    #[serde(
        rename = "target_service_company",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_service_company: String,
    /// 原岗位，可通过【岗职务管理-岗位】相关API获取（目前仅灰度部分租户，如需要请联系管理员开灰）
    ///
    /// **示例值**: "7289005963599693367"
    #[serde(
        rename = "original_position",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub original_position: String,
    /// 新岗位，可通过【岗职务管理-岗位】相关API获取（目前仅灰度部分租户，如需要请联系管理员开灰）
    ///
    /// **示例值**: "7289005963599693367"
    #[serde(
        rename = "target_position",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub target_position: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TranferEmploymentInfoSubResp {
    /// 转正式员工日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2023-01-01"
    #[serde(
        rename = "regular_employee_start_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub regular_employee_start_date: String,
    /// 司龄起算日期，格式："YYYY-MM-DD"
    ///
    /// **示例值**: "2023-01-01"
    #[serde(
        rename = "seniority_date",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub seniority_date: String,
    /// 员工编号，可通过[【搜索员工信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/employee/search)接口获取
    ///
    /// **示例值**: "1111111"
    #[serde(
        rename = "employee_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub employee_number: String,
    /// 自定义字段
    #[serde(
        rename = "custom_fields",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_fields: Vec<CustomFieldDataSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct OrgdraftDepartmentIdSubResp {
    /// 部门 ID （新建部门审批通过前会返回空值），可通过[【批量查询部门】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/department/batch_get)接口获取
    ///
    /// **示例值**: "6974659700705068581"
    #[serde(
        rename = "department_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub department_id: String,
    /// 调整部门 ID ，新建部门审批通过前会返回格式为 td_xxx 的临时 ID，可通过[【批量查询部门】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/department/batch_get)接口获取
    ///
    /// **示例值**: "6974659700705068581"
    #[serde(
        rename = "draft_department_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub draft_department_id: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct JobDataCostCenterSubResp {
    /// 成本中心 ID，详细信息可通过[【搜索成本中心信息】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/corehr-v2/cost_center/search)接口查询获得
    ///
    /// **示例值**: "6950635856373745165"
    #[serde(
        rename = "cost_center_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub cost_center_id: String,
    /// 分摊比例
    ///
    /// **示例值**: "100"
    #[serde(
        rename = "rate",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub rate: i64,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct CustomFieldDataSubResp {
    /// 自定义字段 apiname，即自定义字段的唯一标识
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "name"
    #[serde(
        rename = "custom_api_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub custom_api_name: String,
    /// 自定义字段名称
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: CustomNameSubResp,
    /// 自定义字段类型
    ///
    /// **示例值**: "1"
    #[serde(
        rename = "type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub body_type: i64,
    /// 字段值，是 json 转义后的字符串，根据元数据定义不同，字段格式不同（如 123, 123.23, "true", ["id1","id2"], "2006-01-02 15:04:05"）
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "231"
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct CustomNameSubResp {
    /// 中文
    ///
    /// **示例值**: "自定义姓名"
    #[serde(
        rename = "zh_cn",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub zh_cn: String,
    /// 英文
    ///
    /// **示例值**: "Custom Name"
    #[serde(
        rename = "en_us",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub en_us: String,
}

#[cfg(feature = "test-util")]
mod test_utils {
    use std::sync::Arc;

    use self::gen::core_hr::CoreHrServiceMocker;
    use crate::core::mocker::*;

    use super::*;
    use crate::api::*;
    use crate::core::model::*;

    pub struct Mocker;

    pub trait MockFunc:
        Fn(SearchCoreHrJobChangeReq) -> Result<(SearchCoreHrJobChangeResp, CommonResponse), Error>
        + Send
        + Sync
        + 'static
    {
    }
    impl<
            T: Fn(
                    SearchCoreHrJobChangeReq,
                ) -> Result<(SearchCoreHrJobChangeResp, CommonResponse), Error>
                + Send
                + Sync
                + 'static,
        > MockFunc for T
    {
    }

    impl<'c, IStore: Store, IClient: HttpClient> CoreHrServiceMocker<'c, IStore, IClient> {
        pub fn mock_search_core_hr_job_change<F: MockFunc>(
            &self,
            f: F,
        ) -> MockerBuilder<
            Mocker,
            SearchCoreHrJobChangeReq,
            SearchCoreHrJobChangeResp,
            Arc<dyn MockFunc>,
        > {
            MockerBuilder::new(self.cli.instance_id, Arc::new(f))
        }

        pub(super) fn get_mock_search_core_hr_job_change(
            &self,
            req: &SearchCoreHrJobChangeReq,
        ) -> Option<Arc<dyn MockFunc>> {
            do_mock::<Mocker, SearchCoreHrJobChangeReq, SearchCoreHrJobChangeResp, Arc<dyn MockFunc>>(
                self.cli.instance_id,
                req,
            )
        }
    }
}

#[cfg(feature = "test-util")]
#[cfg(test)]
mod test {
    use crate::{
        api::gen::core_hr::search_core_hr_job_change::{
            SearchCoreHrJobChangeReq, SearchCoreHrJobChangeResp, SearchCoreHrJobChangeRespInner,
        },
        core::{model::CommonResponse, Lark},
    };

    #[tokio::test]
    async fn test_mock() {
        let lark = Lark::new("".to_owned(), "".into());
        let mocker = lark
            .core_hr()
            .mock()
            .mock_search_core_hr_job_change(|_| {
                Ok((
                    SearchCoreHrJobChangeResp::default(),
                    CommonResponse::default(),
                ))
            })
            .build();
        let res = lark
            .core_hr()
            .search_core_hr_job_change(SearchCoreHrJobChangeReq::default())
            .await;
        assert!(res.is_ok());
        mocker.clear();
        let res = lark
            .core_hr()
            .search_core_hr_job_change(SearchCoreHrJobChangeReq::default())
            .await;
        assert!(res.is_err());
    }

    const REQ: &str = r#"{
    "employment_ids": [
        "ou_a294793e8fa21529f2a60e3e9de45520"
    ],
    "job_change_ids": [
        "7044427347159746085"
    ],
    "statuses": [
        "Approving"
    ],
    "effective_date_start": "2022-01-01",
    "effective_date_end": "2022-01-01",
    "updated_time_start": "1704084635000",
    "updated_time_end": "1704084635000"
}"#;

    #[test]
    fn test_req() {
        if REQ == "{}" {
            return;
        }
        if let Err(e) = serde_json::from_str::<super::SearchCoreHrJobChangeReqBody>(REQ) {
            panic!("{}", e);
        }
    }

    const RESP: &str = r#"{
    "code": 0,
    "msg": "success",
    "data": {
        "items": [
            {
                "job_change_id": "6991776076699549697",
                "employment_id": "ou_a294793e8fa21529f2a60e3e9de45520",
                "status": "Approved",
                "transfer_type_unique_identifier": "direct_leader_change",
                "transfer_reason_unique_identifier": "involuntary_transfer",
                "process_id": "6991776078461142564",
                "effective_date": "2022-03-01",
                "created_time": "1627899724000",
                "updated_time": "1647434443000",
                "transfer_info": {
                    "remark": "异动详情",
                    "offer_info": "优质人才，加急处理",
                    "target_dotted_manager_clean": true,
                    "probation_exist": false,
                    "original_department": "6966236933198579208",
                    "target_department": "6966236933198579208",
                    "target_draft_department": "6966236933198579208",
                    "original_department_id_path": [
                        {
                            "department_id": "6974659700705068581",
                            "draft_department_id": "6974659700705068581"
                        }
                    ],
                    "target_department_id_path": [
                        {
                            "department_id": "6974659700705068581",
                            "draft_department_id": "6974659700705068581"
                        }
                    ],
                    "original_work_location": "6967271100992587295",
                    "target_work_location": "6967271100992587295",
                    "original_direct_manager": "6974641477444060708",
                    "target_direct_manager": "7013619729281713671",
                    "original_dotted_manager": "6974648866876573198",
                    "target_dotted_manager": "7013328578351842852",
                    "original_job": "6969469398088287751",
                    "target_job": "6969469557836760606",
                    "original_job_family": "6967287547462419975",
                    "target_job_family": "6967287547462419975",
                    "original_job_level": "6972085707674355214",
                    "target_job_level": "6972085707674355214",
                    "original_workforce_type": "6968386026792289828",
                    "target_workforce_type": "7036268995372303885",
                    "original_company": "6974659700705068581",
                    "target_company": "6974659700705068581",
                    "original_contract_number": "55332",
                    "target_contract_number": "55333",
                    "original_contract_type": "labor_contract",
                    "target_contract_type": "labor_contract",
                    "original_duration_type": "fixed_term",
                    "target_duration_type": "fixed_term",
                    "original_signing_type": "new",
                    "target_signing_type": "new",
                    "original_contract_start_date": "2021-07-01",
                    "target_contract_start_date": "2021-07-01",
                    "original_contract_end_date": "2024-07-01",
                    "target_contract_end_date": "2024-07-01",
                    "original_working_hours_type": "6969087376740206087",
                    "target_working_hours_type": "6969087376740206087",
                    "original_working_calendar": "6969087376740236087",
                    "target_working_calendar": "6969087376740236087",
                    "original_probation_end_date": "2021-11-17",
                    "target_probation_end_date": "2021-11-17",
                    "original_weekly_working_hours": "162",
                    "target_weekly_working_hours": "160",
                    "original_work_shift": "work_shift",
                    "target_work_shift": "non_work_shift",
                    "original_cost_center_rate": [
                        {
                            "cost_center_id": "6950635856373745165",
                            "rate": 100
                        }
                    ],
                    "target_cost_center_rate": [
                        {
                            "cost_center_id": "6950635856373745165",
                            "rate": 100
                        }
                    ],
                    "original_employment_change": {
                        "regular_employee_start_date": "2023-01-01",
                        "seniority_date": "2023-01-01",
                        "employee_number": "1111111",
                        "custom_fields": [
                            {
                                "custom_api_name": "name",
                                "name": {
                                    "zh_cn": "自定义姓名",
                                    "en_us": "Custom Name"
                                },
                                "type": 1,
                                "value": "231"
                            }
                        ]
                    },
                    "target_employment_change": {
                        "regular_employee_start_date": "2023-01-01",
                        "seniority_date": "2023-01-01",
                        "employee_number": "1111111",
                        "custom_fields": [
                            {
                                "custom_api_name": "name",
                                "name": {
                                    "zh_cn": "自定义姓名",
                                    "en_us": "Custom Name"
                                },
                                "type": 1,
                                "value": "231"
                            }
                        ]
                    },
                    "original_job_grade": "7289005963599693366",
                    "target_job_grade": "7289005963599693366",
                    "original_compensation_type": "hourly",
                    "target_compensation_type": "salary",
                    "original_service_company": "7289005963599693367",
                    "target_service_company": "7289005963599693367",
                    "original_position": "7289005963599693367",
                    "target_position": "7289005963599693367"
                }
            }
        ],
        "has_more": true,
        "page_token": "6891251722631890445"
    }
}"#;
    #[test]
    fn test_resp() {
        let res = serde_json::from_str::<SearchCoreHrJobChangeRespInner>(RESP);
        if let Err(e) = res {
            panic!("{}", e);
        }
        if let Ok(v) = serde_json::from_str::<serde_json::Value>(RESP) {
            if v.get("data").is_some() {
                assert!(res.unwrap().data.is_some());
            }
        }
    }
}

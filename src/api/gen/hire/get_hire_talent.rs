//! doc url: <https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent/get>
// Code generated by gen_api. DO NOT EDIT.

use serde::{Deserialize, Serialize};

use crate::api::BaseResp;
use crate::api::HasBaseResp;
use crate::core::model::{ApiRequest, CommonResponse, MethodOption, ReqParam, StreamReqParam};
use crate::{
    core::{http_client::HttpClient, store::Store},
    error::Error,
};

use crate::api::gen::hire::HireService;

impl<'c, IStore: Store, IClient: HttpClient> HireService<'c, IStore, IClient> {
    /// **api 版本: 2024-06-26T05:56:34+00:00**
    ///
    /// ## 获取人才信息
    ///
    /// 根据人才 ID 获取人才信息。
    ///

    ///
    /// doc: <https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent/get>
    ///
    /// new doc: <https://open.feishu.cn/document/server-docs/hire-v1/candidate-management/talent/get>
    ///
    /// api url: <https://open.feishu.cn/document_portal/v1/document/get_detail?fullPath=%2Fserver-docs%2Fhire-v1%2Fcandidate-management%2Ftalent%2Fget>
    pub async fn get_hire_talent(
        &self,
        req: GetHireTalentReq,
    ) -> Result<(GetHireTalentResp, CommonResponse), Error> {
        self.get_hire_talent_with_opt(req, Default::default()).await
    }

    /// 参见 [get_hire_talent](#method.get_hire_talent) 函数
    pub async fn get_hire_talent_with_opt(
        &self,
        req: GetHireTalentReq,
        method_option: MethodOption,
    ) -> Result<(GetHireTalentResp, CommonResponse), Error> {
        #[cfg(feature = "test-util")]
        {
            if let Some(f) = self.mock().get_mock_get_hire_talent(&req) {
                tracing::info!("[lark] Hire#GetHireTalent **mocking** api");
                return f(req);
            }
        }

        tracing::info!("[lark] Hire#GetHireTalent call api");

        let req = ApiRequest {
            scope: "Hire",
            api: "GetHireTalent",
            method: http::Method::GET,
            url: String::new()
                + self.cli.open_base_url.as_ref()
                + "/open-apis/hire/v1/talents/:talent_id",
            param_data: req.gen_param(),
            method_option,
            need_tenant_access_token: true,
            ..Default::default()
        };

        let (resp, common_resp): (GetHireTalentRespInner, _) = self.cli.do_req(req).await?;
        let data = match resp.data {
            Some(data) => data,
            None => {
                return Err(Error::ErrResponse(
                    anyhow::anyhow!("missing response data"),
                    common_resp,
                ));
            }
        };
        Ok((data, common_resp))
    }
}

#[derive(Debug, Serialize, Deserialize, Clone, Default, lark_bot_sdk_macros::ApiReqParams)]
pub struct GetHireTalentReq {
    /// 人才ID，可通过[获取人才列表](https://open.feishu.cn/document/ukTMukTMukTM/uMzM1YjLzMTN24yMzUjN/hire-v1/talent/list)接口获取
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "6891560630172518670"
    #[api(kind = "path", name = "talent_id")]
    pub talent_id: String,
    /// 用户 ID 类型
    ///
    /// **示例值**: "open_id"
    ///
    /// **可选值**:
    ///
    /// `open_id`: 标识一个用户在某个应用中的身份。同一个用户在不同应用中的 Open ID 不同。[了解更多：如何获取 Open ID](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-openid)
    ///
    /// `union_id`: 标识一个用户在某个应用开发商下的身份。同一用户在同一开发商下的应用中的 Union ID 是相同的，在不同开发商下的应用中的 Union ID 是不同的。通过 Union ID，应用开发商可以把同个用户在多个应用中的身份关联起来。[了解更多：如何获取 Union ID？](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-union-id)
    ///
    /// `user_id`: 标识一个用户在某个租户内的身份。同一个用户在租户 A 和租户 B 内的 User ID 是不同的。在同一个租户内，一个用户的 User ID 在所有应用（包括商店应用）中都保持一致。User ID 主要用于在不同的应用间打通用户数据。[了解更多：如何获取 User ID？](https://open.feishu.cn/document/uAjLw4CM/ugTN1YjL4UTN24CO1UjN/trouble-shooting/how-to-obtain-user-id)
    ///
    /// `people_admin_id`: 以 people_admin_id 来识别用户
    #[api(
        kind = "query",
        name = "user_id_type",
        v_type = "var",
        option = "false"
    )]
    pub user_id_type: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, lark_bot_sdk_macros::ApiBaseResp)]
struct GetHireTalentRespInner {
    #[serde(flatten)]
    data: Option<GetHireTalentResp>,
    #[serde(flatten)]
    base: BaseResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
pub struct GetHireTalentResp {
    /// \-
    #[serde(
        rename = "data",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub data: DataSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct DataSubResp {
    /// 人才信息
    #[serde(
        rename = "talent",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub talent: TalentSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentSubResp {
    /// 人才ID
    ///
    /// **示例值**: "6891560630172518670"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 是否在猎头保护期
    ///
    /// **示例值**: "true"
    ///
    /// **可选值**:
    ///
    /// `NotProtected`: 未在猎头保护期
    ///
    /// `Protected`: 在猎头保护期
    #[serde(
        rename = "is_in_agency_period",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_in_agency_period: bool,
    /// 是否已入职
    ///
    /// **示例值**: "true"
    ///
    /// **可选值**:
    ///
    /// `Overboard`: 未入职
    ///
    /// `Onboard`: 已入职
    #[serde(
        rename = "is_onboarded",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub is_onboarded: bool,
    /// 基础信息
    #[serde(
        rename = "basic_info",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub basic_info: TalentBasicInfoSubResp,
    /// 教育经历
    #[serde(
        rename = "education_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub education_list: Vec<TalentEducationInfoSubResp>,
    /// 工作经历
    #[serde(
        rename = "career_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub career_list: Vec<TalentCareerInfoSubResp>,
    /// 项目经历
    #[serde(
        rename = "project_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub project_list: Vec<TalentProjectInfoSubResp>,
    /// 作品
    #[serde(
        rename = "works_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub works_list: Vec<TalentWorksInfoSubResp>,
    /// 获奖
    #[serde(
        rename = "award_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub award_list: Vec<TalentAwardInfoSubResp>,
    /// 语言能力
    #[serde(
        rename = "language_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub language_list: Vec<TalentLanguageInfoSubResp>,
    /// 社交账号
    #[serde(
        rename = "sns_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub sns_list: Vec<TalentSnsInfoSubResp>,
    /// 简历来源
    #[serde(
        rename = "resume_source_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub resume_source_list: Vec<TalentResumeSourceSubResp>,
    /// 面试登记表
    ///
    /// <md-alert type="tip">
    ///
    /// 推荐使用 registration_list 字段获取完整登记表列表
    ///
    /// </md-alert>
    #[serde(
        rename = "interview_registration_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub interview_registration_list: Vec<TalentInterviewRegistrationSimpleSubResp>,
    /// 登记表列表
    #[serde(
        rename = "registration_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub registration_list: Vec<RegistrationBasicInfoSubResp>,
    /// 简历附件id列表（按照简历创建时间降序）
    #[serde(
        rename = "resume_attachment_id_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub resume_attachment_id_list: Vec<String>,
    /// 自定义模块
    #[serde(
        rename = "customized_data_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub customized_data_list: Vec<TalentCustomizedDataSubResp>,
    /// 最高学历
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `PrimaryEducation`: 小学
    ///
    /// `JuniorMiddleSchoolEducation`: 初中
    ///
    /// `Secondary`: 专职
    ///
    /// `SeniorSchoolGraduates`: 高中
    ///
    /// `Associate`: 大专
    ///
    /// `Bachelor`: 本科
    ///
    /// `Master`: 硕士
    ///
    /// `Phd`: 博士
    ///
    /// `Other`: 其他
    #[serde(
        rename = "top_degree",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub top_degree: i64,
    /// 第一学历
    ///
    /// **示例值**: "3"
    ///
    /// **可选值**:
    ///
    /// `BelowAssociate`: 低于大专
    ///
    /// `Associate`: 大专
    ///
    /// `Bachelor`: 本科
    ///
    /// `Master`: 硕士
    ///
    /// `Phd`: 博士
    ///
    /// `Other`: 其他
    ///
    /// `None`: 无
    #[serde(
        rename = "first_degree",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub first_degree: i64,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentBasicInfoSubResp {
    /// 名字
    ///
    /// **是否必填**: 是
    ///
    /// **示例值**: "测试"
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: String,
    /// 手机
    ///
    /// **示例值**: "182900291190"
    #[serde(
        rename = "mobile",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub mobile: String,
    /// 手机国家区号
    ///
    /// **示例值**: "86"
    #[serde(
        rename = "mobile_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub mobile_code: String,
    /// 手机国家代码
    ///
    /// **示例值**: "CN_1"
    #[serde(
        rename = "mobile_country_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub mobile_country_code: String,
    /// 邮箱
    ///
    /// **示例值**: "16xx1@126.com"
    #[serde(
        rename = "email",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub email: String,
    /// 工作年限
    ///
    /// **示例值**: "5"
    #[serde(
        rename = "experience_years",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub experience_years: i64,
    /// 年龄
    ///
    /// **示例值**: "22"
    #[serde(
        rename = "age",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub age: i64,
    /// 国籍
    #[serde(
        rename = "nationality",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub nationality: TalentNationalitySubResp,
    /// 性别
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `Male`: 男
    ///
    /// `Female`: 女
    ///
    /// `Other`: 保密
    #[serde(
        rename = "gender",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub gender: i64,
    /// 所在地点
    #[serde(
        rename = "current_city",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub current_city: TalentCityInfoSubResp,
    /// 家乡
    #[serde(
        rename = "hometown_city",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub hometown_city: TalentCityInfoSubResp,
    /// 意向地点
    #[serde(
        rename = "preferred_city_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub preferred_city_list: Vec<TalentCityInfoSubResp>,
    /// 证件类型
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `MainlandIDCard`: 中国 - 居民身份证
    ///
    /// `Passport`: 护照
    ///
    /// `HongKongIDCard`: 中国 - 港澳居民居住证
    ///
    /// `TaiwanIDCard`: 中国 - 台湾居民来往大陆通行证
    ///
    /// `Others`: 其他
    ///
    /// `HKMAMainlandTravelPermit`: 中国 - 港澳居民来往内地通行证
    ///
    /// `TWResidencePermit`: 中国 - 台湾居民居住证
    #[serde(
        rename = "identification_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub identification_type: i64,
    /// 证件号
    ///
    /// **示例值**: "511699199x1x111234"
    #[serde(
        rename = "identification_number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub identification_number: String,
    /// 生日
    ///
    /// **示例值**: "1687872017"
    #[serde(
        rename = "birthday",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub birthday: i64,
    /// 创建人
    ///
    /// **示例值**: "ou-xxx"
    #[serde(
        rename = "creator_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub creator_id: String,
    /// 婚姻状况
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `married`: 已婚
    ///
    /// `Unmarried`: 未婚
    #[serde(
        rename = "marital_status",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub marital_status: i64,
    /// 家庭住址
    ///
    /// **示例值**: "南京路1号"
    #[serde(
        rename = "current_home_address",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub current_home_address: String,
    /// 自定义字段
    #[serde(
        rename = "customized_data_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub customized_data_list: Vec<TalentCustomizedDataChildSubResp>,
    /// 修改时间
    ///
    /// **示例值**: "1634801678103"
    #[serde(
        rename = "modify_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub modify_time: String,
    /// 户口所在地
    ///
    /// **示例值**: "CN_1"
    #[serde(
        rename = "hukou_location_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub hukou_location_code: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentNationalitySubResp {
    /// 国家编码
    ///
    /// **示例值**: "CN_183"
    #[serde(
        rename = "nationality_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub nationality_code: String,
    /// 中文名
    ///
    /// **示例值**: "测试"
    #[serde(
        rename = "zh_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub zh_name: String,
    /// 英文名
    ///
    /// **示例值**: "test"
    #[serde(
        rename = "en_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub en_name: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentCityInfoSubResp {
    /// 城市码
    ///
    /// **示例值**: "CN_183"
    #[serde(
        rename = "city_code",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub city_code: String,
    /// 中文名
    ///
    /// **示例值**: "测试"
    #[serde(
        rename = "zh_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub zh_name: String,
    /// 英文名
    ///
    /// **示例值**: "test"
    #[serde(
        rename = "en_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub en_name: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentEducationInfoSubResp {
    /// ID
    ///
    /// **示例值**: "6891560630172518670"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 学位
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `PrimaryEducation`: 小学
    ///
    /// `JuniorMiddleSchoolEducation`: 初中
    ///
    /// `Secondary`: 专职
    ///
    /// `SeniorSchoolGraduates`: 高中
    ///
    /// `Associate`: 大专
    ///
    /// `Bachelor`: 本科
    ///
    /// `Master`: 硕士
    ///
    /// `Phd`: 博士
    ///
    /// `Other`: 其他
    #[serde(
        rename = "degree",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub degree: i64,
    /// 学校
    ///
    /// **示例值**: "湘港大学"
    #[serde(
        rename = "school",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub school: String,
    /// 专业
    ///
    /// **示例值**: "考古"
    #[serde(
        rename = "field_of_study",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub field_of_study: String,
    /// 开始时间
    ///
    /// **示例值**: "1990-01"
    #[serde(
        rename = "start_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_time: String,
    /// 结束时间
    ///
    /// **示例值**: "1994-01"
    #[serde(
        rename = "end_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_time: String,
    /// 结束时间-新，无「至今」传值。建议使用此字段，避免模糊的毕业时间影响候选人筛选
    ///
    /// **示例值**: "1687180087000"
    #[serde(
        rename = "end_time_v2",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_time_v2: String,
    /// 学历类型
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `Overseas`: 海外及港台
    ///
    /// `FullTimeUnifiedEnrollment`: 统招全日制
    ///
    /// `PartTimeUnifiedEnrollment`: 非全日制
    ///
    /// `SelfTaught`: 自考
    ///
    /// `Others`: 其他
    #[serde(
        rename = "education_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub education_type: i64,
    /// 成绩排名
    ///
    /// **示例值**: "5"
    ///
    /// **可选值**:
    ///
    /// `Top5Percent`: 前 5 %
    ///
    /// `Top10Percent`: 前 10 %
    ///
    /// `Top20Percent`: 前 20 %
    ///
    /// `Top30Percent`: 前 30 %
    ///
    /// `Top50Percent`: 前 50 %
    ///
    /// `Others`: 其他
    #[serde(
        rename = "academic_ranking",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub academic_ranking: i64,
    /// 教育经历标签
    #[serde(
        rename = "tag_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub tag_list: Vec<i64>,
    /// 自定义字段
    #[serde(
        rename = "customized_data_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub customized_data_list: Vec<TalentCustomizedDataChildSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentCareerInfoSubResp {
    /// ID
    ///
    /// **示例值**: "6891560630172518670"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 公司名称
    ///
    /// **示例值**: "测试公司"
    #[serde(
        rename = "company",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub company: String,
    /// 职位名称
    ///
    /// **示例值**: "高级工程师"
    #[serde(
        rename = "title",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub title: String,
    /// 描述
    ///
    /// **示例值**: "测试"
    #[serde(
        rename = "desc",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub desc: String,
    /// 开始时间
    ///
    /// **示例值**: "1990-01"
    #[serde(
        rename = "start_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_time: String,
    /// 结束时间
    ///
    /// **示例值**: "1994-01"
    #[serde(
        rename = "end_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_time: String,
    /// 经历类型
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `Internship`: 实习经历
    ///
    /// `Career`: 工作经历
    ///
    /// `Parttime`: 兼职经历
    ///
    /// `Other`: 其他经历
    #[serde(
        rename = "career_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub career_type: i64,
    /// 工作经历标签
    #[serde(
        rename = "tag_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub tag_list: Vec<i64>,
    /// 自定义字段
    #[serde(
        rename = "customized_data_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub customized_data_list: Vec<TalentCustomizedDataChildSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentProjectInfoSubResp {
    /// ID
    ///
    /// **示例值**: "6891560630172518670"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 项目名称
    ///
    /// **示例值**: "测试"
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: String,
    /// 项目角色
    ///
    /// **示例值**: "test"
    #[serde(
        rename = "role",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub role: String,
    /// 项目链接
    ///
    /// **示例值**: "www.test.com"
    #[serde(
        rename = "link",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub link: String,
    /// 描述
    ///
    /// **示例值**: "test"
    #[serde(
        rename = "desc",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub desc: String,
    /// 开始时间
    ///
    /// **示例值**: "1990-01"
    #[serde(
        rename = "start_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_time: String,
    /// 结束时间
    ///
    /// **示例值**: "1991-01"
    #[serde(
        rename = "end_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_time: String,
    /// 自定义字段
    #[serde(
        rename = "customized_data_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub customized_data_list: Vec<TalentCustomizedDataChildSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentWorksInfoSubResp {
    /// ID
    ///
    /// **示例值**: "6891560630172518670"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 作品链接
    ///
    /// **示例值**: "www.test.com"
    #[serde(
        rename = "link",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub link: String,
    /// 描述
    ///
    /// **示例值**: "test"
    #[serde(
        rename = "desc",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub desc: String,
    /// 作品附件名称，若需获取作品附件预览信息可调用「获取附件预览信息」接口
    ///
    /// **示例值**: "XX项目"
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: String,
    /// 自定义字段
    #[serde(
        rename = "customized_data_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub customized_data_list: Vec<TalentCustomizedDataChildSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentAwardInfoSubResp {
    /// ID
    ///
    /// **示例值**: "6891560630172518670"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 获奖名称
    ///
    /// **示例值**: "最佳新人奖"
    #[serde(
        rename = "title",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub title: String,
    /// 获奖时间
    ///
    /// **示例值**: "1991"
    #[serde(
        rename = "award_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub award_time: String,
    /// 描述
    ///
    /// **示例值**: "最优秀的新人奖"
    #[serde(
        rename = "desc",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub desc: String,
    /// 自定义字段
    #[serde(
        rename = "customized_data_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub customized_data_list: Vec<TalentCustomizedDataChildSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentLanguageInfoSubResp {
    /// ID
    ///
    /// **示例值**: "6891560630172518670"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 语言
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `English`: 英语
    ///
    /// `French`: 法语
    ///
    /// `Japanese`: 日语
    ///
    /// `Korean`: 韩语
    ///
    /// `German`: 德语
    ///
    /// `Russian`: 俄语
    ///
    /// `Spanish`: 西班牙语
    ///
    /// `Portuguese`: 葡萄牙语
    ///
    /// `Arabic`: 阿拉伯语
    ///
    /// `Hindi`: 印地语
    ///
    /// `Hindustani`: 印度斯坦语
    ///
    /// `Bengali`: 孟加拉语
    ///
    /// `Hausa`: 豪萨语
    ///
    /// `Punjabi`: 旁遮普语
    ///
    /// `Persian`: 波斯语
    ///
    /// `Swahili`: 斯瓦西里语
    ///
    /// `Telugu`: 泰卢固语
    ///
    /// `Turkish`: 土耳其语
    ///
    /// `Italian`: 意大利语
    ///
    /// `Javanese`: 爪哇语
    ///
    /// `Tamil`: 泰米尔语
    ///
    /// `Marathi`: 马拉地语
    ///
    /// `Vietnamese`: 越南语
    ///
    /// `Mandarin`: 普通话
    ///
    /// `Cantonese`: 粤语
    #[serde(
        rename = "language",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub language: i64,
    /// 精通程度
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `Elementary`: 入门
    ///
    /// `LimitedWorking`: 日常会话
    ///
    /// `ProfessionalWorking`: 商务会话
    ///
    /// `FullProfessional`: 无障碍沟通
    ///
    /// `NativeOrBilingual`: 母语
    #[serde(
        rename = "proficiency",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub proficiency: i64,
    /// 自定义字段
    #[serde(
        rename = "customized_data_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub customized_data_list: Vec<TalentCustomizedDataChildSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentSnsInfoSubResp {
    /// ID
    ///
    /// **示例值**: "6891560630172518670"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// SNS名称
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `LinkedIn`: 领英
    ///
    /// `Maimai`: 脉脉
    ///
    /// `Wechat`: 微信
    ///
    /// `Weibo`: 微博
    ///
    /// `Github`: Github
    ///
    /// `Zhihu`: 知乎
    ///
    /// `Facebook`: 脸书
    ///
    /// `Twitter`: 推特
    ///
    /// `Whatsapp`: Whatsapp
    ///
    /// `PersonalWebsite`: 个人网站
    ///
    /// `QQ`: QQ
    #[serde(
        rename = "sns_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub sns_type: i64,
    /// URL/ID
    ///
    /// **示例值**: "www.test.com"
    #[serde(
        rename = "link",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub link: String,
    /// 自定义字段
    #[serde(
        rename = "customized_data_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub customized_data_list: Vec<TalentCustomizedDataChildSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentResumeSourceSubResp {
    /// ID
    ///
    /// **示例值**: "6891560630172518670"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 中文名
    ///
    /// **示例值**: "猎头"
    #[serde(
        rename = "zh_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub zh_name: String,
    /// 英文名
    ///
    /// **示例值**: "Hunter"
    #[serde(
        rename = "en_name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub en_name: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentInterviewRegistrationSimpleSubResp {
    /// ID
    ///
    /// **示例值**: "6833685612520950030"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 创建时间
    ///
    /// **示例值**: "1618494330932"
    #[serde(
        rename = "registration_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub registration_time: i64,
    /// 下载链接
    ///
    /// **示例值**: "https://hire.feishu.cn/hire/file/blob/...token.../"
    #[serde(
        rename = "download_url",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub download_url: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct RegistrationBasicInfoSubResp {
    /// ID
    ///
    /// **示例值**: "6833685612520950030"
    #[serde(
        rename = "id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub id: String,
    /// 创建时间
    ///
    /// **示例值**: "1618494330932"
    #[serde(
        rename = "registration_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub registration_time: i64,
    /// 下载链接
    ///
    /// **示例值**: "https://hire.feishu.cn/hire/file/blob/...token.../"
    #[serde(
        rename = "download_url",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub download_url: String,
    /// 登记表场景
    ///
    /// **示例值**: "5"
    ///
    /// **可选值**:
    ///
    /// `InterviewRegistration`: 面试登记表
    ///
    /// `OnboardRegistration`: 入职登记表
    ///
    /// `InfoUpdateRegistration`: 信息更新登记表
    #[serde(
        rename = "scenario",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub scenario: i64,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentCustomizedDataSubResp {
    /// 模块 ID
    ///
    /// **示例值**: "xxxx"
    #[serde(
        rename = "object_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub object_id: String,
    /// 模块名称
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: I18nSubResp,
    /// 类型
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `Text`: 单行文本
    ///
    /// `LongText`: 多行文本
    ///
    /// `Select`: 单选
    ///
    /// `MultiSelect`: 多选
    ///
    /// `DateSelect`: 日期
    ///
    /// `MonthSelect`: 月份选择
    ///
    /// `YearSelect`: 年份选择
    ///
    /// `DateRange`: 时间段
    ///
    /// `Number`: 数字
    ///
    /// `Default`: 默认字段
    ///
    /// `Group`: 模块
    #[serde(
        rename = "object_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub object_type: i64,
    /// 模块下的字段
    #[serde(
        rename = "children",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub children: Vec<TalentCustomizedDataChildSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentCustomizedDataChildSubResp {
    /// 自定义字段 ID
    ///
    /// **示例值**: "xxxx"
    #[serde(
        rename = "object_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub object_id: String,
    /// 字段名称
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: I18nSubResp,
    /// 字段类型
    ///
    /// **示例值**: "1"
    ///
    /// **可选值**:
    ///
    /// `Text`: 单行文本
    ///
    /// `LongText`: 多行文本
    ///
    /// `Select`: 单选
    ///
    /// `MultiSelect`: 多选
    ///
    /// `DateSelect`: 日期
    ///
    /// `MonthSelect`: 月份选择
    ///
    /// `YearSelect`: 年份选择
    ///
    /// `DateRange`: 时间段
    ///
    /// `Number`: 数字
    ///
    /// `Default`: 默认字段
    ///
    /// `Group`: 模块
    ///
    /// `Attachment`: 附件
    #[serde(
        rename = "object_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub object_type: i64,
    /// 自定义字段值
    #[serde(
        rename = "value",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub value: TalentCustomizedValueSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct I18nSubResp {
    /// 中文
    ///
    /// **示例值**: "测试"
    #[serde(
        rename = "zh_cn",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub zh_cn: String,
    /// 英文
    ///
    /// **示例值**: "test"
    #[serde(
        rename = "en_us",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub en_us: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentCustomizedValueSubResp {
    /// 当字段类型为单行文本、多行文本、模块、默认字段时，从此字段取值
    ///
    /// **示例值**: "text"
    #[serde(
        rename = "content",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub content: String,
    /// 当字段类型为单选时，从此字段取值
    #[serde(
        rename = "option",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub option: TalentCustomizedOptionSubResp,
    /// 当字段类型为多选时，从此字段取值
    #[serde(
        rename = "option_list",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub option_list: Vec<TalentCustomizedOptionSubResp>,
    /// 当字段类型为时间段时，从此字段取值
    #[serde(
        rename = "time_range",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub time_range: TalentCustomizedTimeRangeSubResp,
    /// 当字段类型为日期选择、月份选择、年份选择时，从此字段取值，该字段是秒级时间戳
    ///
    /// **示例值**: "1625456721"
    #[serde(
        rename = "time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub time: String,
    /// 当字段类型为数字时，从此字段取值
    ///
    /// **示例值**: "111"
    #[serde(
        rename = "number",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub number: String,
    /// 当字段类型为附件时，从此字段取值
    #[serde(
        rename = "customized_attachment",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub customized_attachment: Vec<TalentCustomizedAttachmentSubResp>,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentCustomizedOptionSubResp {
    /// 选项 ID
    ///
    /// **示例值**: "AA"
    #[serde(
        rename = "key",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub key: String,
    /// 选项名称
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: I18nSubResp,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentCustomizedTimeRangeSubResp {
    /// 开始时间
    ///
    /// **示例值**: "1625456721"
    #[serde(
        rename = "start_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub start_time: String,
    /// 结束时间，当值为至今时，返回「-」
    ///
    /// **示例值**: "1625656721"
    #[serde(
        rename = "end_time",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub end_time: String,
}

#[derive(Debug, Serialize, Deserialize, Clone, Default)]
#[serde(default)]
pub struct TalentCustomizedAttachmentSubResp {
    /// 附件 ID
    ///
    /// **示例值**: "7140517838785481004"
    #[serde(
        rename = "file_id",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub file_id: String,
    /// 附件名称
    ///
    /// **示例值**: "1.13测试1的面试记录.pdf"
    #[serde(
        rename = "name",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub name: String,
    /// 附件类型
    ///
    /// **示例值**: "application/pdf"
    #[serde(
        rename = "content_type",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub content_type: String,
    /// 附件大小
    ///
    /// **示例值**: "16615"
    #[serde(
        rename = "file_size",
        deserialize_with = "crate::utils::serde_helper::null_to_default"
    )]
    pub file_size: i64,
}

#[cfg(feature = "test-util")]
mod test_utils {
    use std::sync::Arc;

    use self::gen::hire::HireServiceMocker;
    use crate::core::mocker::*;

    use super::*;
    use crate::api::*;
    use crate::core::model::*;

    pub struct Mocker;

    pub trait MockFunc:
        Fn(GetHireTalentReq) -> Result<(GetHireTalentResp, CommonResponse), Error>
        + Send
        + Sync
        + 'static
    {
    }
    impl<
            T: Fn(GetHireTalentReq) -> Result<(GetHireTalentResp, CommonResponse), Error>
                + Send
                + Sync
                + 'static,
        > MockFunc for T
    {
    }

    impl<'c, IStore: Store, IClient: HttpClient> HireServiceMocker<'c, IStore, IClient> {
        pub fn mock_get_hire_talent<F: MockFunc>(
            &self,
            f: F,
        ) -> MockerBuilder<Mocker, GetHireTalentReq, GetHireTalentResp, Arc<dyn MockFunc>> {
            MockerBuilder::new(self.cli.instance_id, Arc::new(f))
        }

        pub(super) fn get_mock_get_hire_talent(
            &self,
            req: &GetHireTalentReq,
        ) -> Option<Arc<dyn MockFunc>> {
            do_mock::<Mocker, GetHireTalentReq, GetHireTalentResp, Arc<dyn MockFunc>>(
                self.cli.instance_id,
                req,
            )
        }
    }
}

#[cfg(feature = "test-util")]
#[cfg(test)]
mod test {
    use crate::{
        api::gen::hire::get_hire_talent::{
            GetHireTalentReq, GetHireTalentResp, GetHireTalentRespInner,
        },
        core::{model::CommonResponse, Lark},
    };

    #[tokio::test]
    async fn test_mock() {
        let lark = Lark::new("".to_owned(), "".into());
        let mocker = lark
            .hire()
            .mock()
            .mock_get_hire_talent(|_| Ok((GetHireTalentResp::default(), CommonResponse::default())))
            .build();
        let res = lark
            .hire()
            .get_hire_talent(GetHireTalentReq::default())
            .await;
        assert!(res.is_ok());
        mocker.clear();
        let res = lark
            .hire()
            .get_hire_talent(GetHireTalentReq::default())
            .await;
        assert!(res.is_err());
    }

    const REQ: &str = "{}";

    #[test]
    fn test_req() {
        if REQ == "{}" {
            return;
        }
        if let Err(e) = serde_json::from_str::<()>(REQ) {
            panic!("{}", e);
        }
    }

    const RESP: &str = r#"{
    "code": 0,
    "msg": "success",
    "data": {
        "talent": {
            "id": "6891560630172518670",
            "is_in_agency_period": true,
            "is_onboarded": true,
            "basic_info": {
                "name": "测试",
                "mobile": "182900291190",
                "mobile_code": "86",
                "mobile_country_code": "CN_1",
                "email": "16xx1@126.com",
                "experience_years": 5,
                "age": 22,
                "nationality": {
                    "nationality_code": "CN_183",
                    "zh_name": "测试",
                    "en_name": "test"
                },
                "gender": 1,
                "current_city": {
                    "city_code": "CN_183",
                    "zh_name": "测试",
                    "en_name": "test"
                },
                "hometown_city": {
                    "city_code": "CN_183",
                    "zh_name": "测试",
                    "en_name": "test"
                },
                "preferred_city_list": [
                    {
                        "city_code": "CN_183",
                        "zh_name": "测试",
                        "en_name": "test"
                    }
                ],
                "identification_type": 1,
                "identification_number": "511699199x1x111234",
                "birthday": 1687872017,
                "creator_id": "ou-xxx",
                "marital_status": 1,
                "current_home_address": "南京路1号",
                "customized_data_list": [
                    {
                        "object_id": "xxxx",
                        "name": {
                            "zh_cn": "测试",
                            "en_us": "test"
                        },
                        "object_type": 1,
                        "value": {
                            "content": "text",
                            "option": {
                                "key": "AA",
                                "name": {
                                    "zh_cn": "测试",
                                    "en_us": "test"
                                }
                            },
                            "option_list": [
                                {
                                    "key": "AA",
                                    "name": {
                                        "zh_cn": "测试",
                                        "en_us": "test"
                                    }
                                }
                            ],
                            "time_range": {
                                "start_time": "1625456721",
                                "end_time": "1625656721"
                            },
                            "time": "1625456721",
                            "number": "111",
                            "customized_attachment": [
                                {
                                    "file_id": "7140517838785481004",
                                    "name": "1.13测试1的面试记录.pdf",
                                    "content_type": "application/pdf",
                                    "file_size": 16615
                                }
                            ]
                        }
                    }
                ],
                "modify_time": "1634801678103",
                "hukou_location_code": "CN_1"
            },
            "education_list": [
                {
                    "id": "6891560630172518670",
                    "degree": 1,
                    "school": "湘港大学",
                    "field_of_study": "考古",
                    "start_time": "1990-01",
                    "end_time": "1994-01",
                    "end_time_v2": "1687180087000",
                    "education_type": 1,
                    "academic_ranking": 5,
                    "tag_list": [
                    ],
                    "customized_data_list": [
                        {
                            "object_id": "xxxx",
                            "name": {
                                "zh_cn": "测试",
                                "en_us": "test"
                            },
                            "object_type": 1,
                            "value": {
                                "content": "text",
                                "option": {
                                    "key": "AA",
                                    "name": {
                                        "zh_cn": "测试",
                                        "en_us": "test"
                                    }
                                },
                                "option_list": [
                                    {
                                        "key": "AA",
                                        "name": {
                                            "zh_cn": "测试",
                                            "en_us": "test"
                                        }
                                    }
                                ],
                                "time_range": {
                                    "start_time": "1625456721",
                                    "end_time": "1625656721"
                                },
                                "time": "1625456721",
                                "number": "111",
                                "customized_attachment": [
                                    {
                                        "file_id": "7140517838785481004",
                                        "name": "1.13测试1的面试记录.pdf",
                                        "content_type": "application/pdf",
                                        "file_size": 16615
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "career_list": [
                {
                    "id": "6891560630172518670",
                    "company": "测试公司",
                    "title": "高级工程师",
                    "desc": "测试",
                    "start_time": "1990-01",
                    "end_time": "1994-01",
                    "career_type": 1,
                    "tag_list": [
                        6
                    ],
                    "customized_data_list": [
                        {
                            "object_id": "xxxx",
                            "name": {
                                "zh_cn": "测试",
                                "en_us": "test"
                            },
                            "object_type": 1,
                            "value": {
                                "content": "text",
                                "option": {
                                    "key": "AA",
                                    "name": {
                                        "zh_cn": "测试",
                                        "en_us": "test"
                                    }
                                },
                                "option_list": [
                                    {
                                        "key": "AA",
                                        "name": {
                                            "zh_cn": "测试",
                                            "en_us": "test"
                                        }
                                    }
                                ],
                                "time_range": {
                                    "start_time": "1625456721",
                                    "end_time": "1625656721"
                                },
                                "time": "1625456721",
                                "number": "111",
                                "customized_attachment": [
                                    {
                                        "file_id": "7140517838785481004",
                                        "name": "1.13测试1的面试记录.pdf",
                                        "content_type": "application/pdf",
                                        "file_size": 16615
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "project_list": [
                {
                    "id": "6891560630172518670",
                    "name": "测试",
                    "role": "test",
                    "link": "www.test.com",
                    "desc": "test",
                    "start_time": "1990-01",
                    "end_time": "1991-01",
                    "customized_data_list": [
                        {
                            "object_id": "xxxx",
                            "name": {
                                "zh_cn": "测试",
                                "en_us": "test"
                            },
                            "object_type": 1,
                            "value": {
                                "content": "text",
                                "option": {
                                    "key": "AA",
                                    "name": {
                                        "zh_cn": "测试",
                                        "en_us": "test"
                                    }
                                },
                                "option_list": [
                                    {
                                        "key": "AA",
                                        "name": {
                                            "zh_cn": "测试",
                                            "en_us": "test"
                                        }
                                    }
                                ],
                                "time_range": {
                                    "start_time": "1625456721",
                                    "end_time": "1625656721"
                                },
                                "time": "1625456721",
                                "number": "111",
                                "customized_attachment": [
                                    {
                                        "file_id": "7140517838785481004",
                                        "name": "1.13测试1的面试记录.pdf",
                                        "content_type": "application/pdf",
                                        "file_size": 16615
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "works_list": [
                {
                    "id": "6891560630172518670",
                    "link": "www.test.com",
                    "desc": "test",
                    "name": "XX项目",
                    "customized_data_list": [
                        {
                            "object_id": "xxxx",
                            "name": {
                                "zh_cn": "测试",
                                "en_us": "test"
                            },
                            "object_type": 1,
                            "value": {
                                "content": "text",
                                "option": {
                                    "key": "AA",
                                    "name": {
                                        "zh_cn": "测试",
                                        "en_us": "test"
                                    }
                                },
                                "option_list": [
                                    {
                                        "key": "AA",
                                        "name": {
                                            "zh_cn": "测试",
                                            "en_us": "test"
                                        }
                                    }
                                ],
                                "time_range": {
                                    "start_time": "1625456721",
                                    "end_time": "1625656721"
                                },
                                "time": "1625456721",
                                "number": "111",
                                "customized_attachment": [
                                    {
                                        "file_id": "7140517838785481004",
                                        "name": "1.13测试1的面试记录.pdf",
                                        "content_type": "application/pdf",
                                        "file_size": 16615
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "award_list": [
                {
                    "id": "6891560630172518670",
                    "title": "最佳新人奖",
                    "award_time": "1991",
                    "desc": "最优秀的新人奖",
                    "customized_data_list": [
                        {
                            "object_id": "xxxx",
                            "name": {
                                "zh_cn": "测试",
                                "en_us": "test"
                            },
                            "object_type": 1,
                            "value": {
                                "content": "text",
                                "option": {
                                    "key": "AA",
                                    "name": {
                                        "zh_cn": "测试",
                                        "en_us": "test"
                                    }
                                },
                                "option_list": [
                                    {
                                        "key": "AA",
                                        "name": {
                                            "zh_cn": "测试",
                                            "en_us": "test"
                                        }
                                    }
                                ],
                                "time_range": {
                                    "start_time": "1625456721",
                                    "end_time": "1625656721"
                                },
                                "time": "1625456721",
                                "number": "111",
                                "customized_attachment": [
                                    {
                                        "file_id": "7140517838785481004",
                                        "name": "1.13测试1的面试记录.pdf",
                                        "content_type": "application/pdf",
                                        "file_size": 16615
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "language_list": [
                {
                    "id": "6891560630172518670",
                    "language": 1,
                    "proficiency": 1,
                    "customized_data_list": [
                        {
                            "object_id": "xxxx",
                            "name": {
                                "zh_cn": "测试",
                                "en_us": "test"
                            },
                            "object_type": 1,
                            "value": {
                                "content": "text",
                                "option": {
                                    "key": "AA",
                                    "name": {
                                        "zh_cn": "测试",
                                        "en_us": "test"
                                    }
                                },
                                "option_list": [
                                    {
                                        "key": "AA",
                                        "name": {
                                            "zh_cn": "测试",
                                            "en_us": "test"
                                        }
                                    }
                                ],
                                "time_range": {
                                    "start_time": "1625456721",
                                    "end_time": "1625656721"
                                },
                                "time": "1625456721",
                                "number": "111",
                                "customized_attachment": [
                                    {
                                        "file_id": "7140517838785481004",
                                        "name": "1.13测试1的面试记录.pdf",
                                        "content_type": "application/pdf",
                                        "file_size": 16615
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "sns_list": [
                {
                    "id": "6891560630172518670",
                    "sns_type": 1,
                    "link": "www.test.com",
                    "customized_data_list": [
                        {
                            "object_id": "xxxx",
                            "name": {
                                "zh_cn": "测试",
                                "en_us": "test"
                            },
                            "object_type": 1,
                            "value": {
                                "content": "text",
                                "option": {
                                    "key": "AA",
                                    "name": {
                                        "zh_cn": "测试",
                                        "en_us": "test"
                                    }
                                },
                                "option_list": [
                                    {
                                        "key": "AA",
                                        "name": {
                                            "zh_cn": "测试",
                                            "en_us": "test"
                                        }
                                    }
                                ],
                                "time_range": {
                                    "start_time": "1625456721",
                                    "end_time": "1625656721"
                                },
                                "time": "1625456721",
                                "number": "111",
                                "customized_attachment": [
                                    {
                                        "file_id": "7140517838785481004",
                                        "name": "1.13测试1的面试记录.pdf",
                                        "content_type": "application/pdf",
                                        "file_size": 16615
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "resume_source_list": [
                {
                    "id": "6891560630172518670",
                    "zh_name": "猎头",
                    "en_name": "Hunter"
                }
            ],
            "interview_registration_list": [
                {
                    "id": "6833685612520950030",
                    "registration_time": 1618494330932,
                    "download_url": "https://hire.feishu.cn/hire/file/blob/...token.../"
                }
            ],
            "registration_list": [
                {
                    "id": "6833685612520950030",
                    "registration_time": 1618494330932,
                    "download_url": "https://hire.feishu.cn/hire/file/blob/...token.../",
                    "scenario": 5
                }
            ],
            "resume_attachment_id_list": [
                "64352523512563462"
            ],
            "customized_data_list": [
                {
                    "object_id": "xxxx",
                    "name": {
                        "zh_cn": "测试",
                        "en_us": "test"
                    },
                    "object_type": 1,
                    "children": [
                        {
                            "object_id": "xxxx",
                            "name": {
                                "zh_cn": "测试",
                                "en_us": "test"
                            },
                            "object_type": 1,
                            "value": {
                                "content": "text",
                                "option": {
                                    "key": "AA",
                                    "name": {
                                        "zh_cn": "测试",
                                        "en_us": "test"
                                    }
                                },
                                "option_list": [
                                    {
                                        "key": "AA",
                                        "name": {
                                            "zh_cn": "测试",
                                            "en_us": "test"
                                        }
                                    }
                                ],
                                "time_range": {
                                    "start_time": "1625456721",
                                    "end_time": "1625656721"
                                },
                                "time": "1625456721",
                                "number": "111",
                                "customized_attachment": [
                                    {
                                        "file_id": "7140517838785481004",
                                        "name": "1.13测试1的面试记录.pdf",
                                        "content_type": "application/pdf",
                                        "file_size": 16615
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "top_degree": 1,
            "first_degree": 3
        }
    }
}"#;
    #[test]
    fn test_resp() {
        let res = serde_json::from_str::<GetHireTalentRespInner>(RESP);
        if let Err(e) = res {
            panic!("{}", e);
        }
        if let Ok(v) = serde_json::from_str::<serde_json::Value>(RESP) {
            if v.get("data").is_some() {
                assert!(res.unwrap().data.is_some());
            }
        }
    }
}
